         TITLE 'P D S  --  AMBLIST INTERFACE                  7/09/09'
***********************************************************************
***      AMBLIST SUBCOMMAND   ADDED BY JOHN KALINICH -- JUL., 2009  ***
***********************************************************************
*
AMBLIST  CSECT
         USING *,R8
         LA    R1,L530          ASSUME A NON-PARTITIONED DATA SET
         TM    DSORG,DS1DSGPO   CORRECT?
         BZ    MSGNEW           YES, BRANCH
         LA    R1,L701          ASSUME NOT A LOAD LIBRARY
         TM    FLAGSCC,RECFMU   CORRECT?
         BZ    MSGNEW           YES, BRANCH
         SPACE 1
*  FREE SYSIN, SYSPRINT, AND SYSLIB DATASETS
         LA    R1,=CL8'SYSIN'           SYSIN DDNAME
         BAS   R2,AMB8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,AMB8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSLIB'          SYSLIB DDNAME
         BAS   R2,AMB8580               FREE THIS DATA SET
*  ALLOCATE //SYSLIB DATA SET
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'AMBDDNSL+6,R3),AMBDDNSL       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'AMBDDNSL+6(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'AMBDSNAM,R3),AMBDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'AMBDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'AMBALLOC,R3),AMBALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'AMBALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'AMBNORM,R3),AMBNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'AMBNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'AMBANORM,R3),AMBANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   AMBERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),AMBDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),AMBSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDPR(8),=CL8'SYSPRINT' MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   AMBERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE //SYSIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),AMBDDNIN      SYSIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),AMBSYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   AMBERROR                   NO, BRANCH
         B     AMB2000
         SPACE 3
AMBERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    AMB8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     AMB8550
         SPACE 3
AMB2000  DS    0H
         MVC   MEMNAME(12),DIRNAME   ENSURE MEMBER NAME IS PRESENT
         MVC   #DELSAVE(1),FLAGSAA   SAVE FLAGSAA
         TM    FLAGSAA,FMEM#MEM      MEMBER GROUP?
         BO    AMB2200               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    AMB2110               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    AMB2200               YES, BRANCH
AMB2110  DS    0H
         LA    R4,DDNAMEH            HOLD FOR THIS SUBCOMMAND
         MVC   0(8,R4),DIRNAME
         ST    R4,#MEMPTR
         LA    R4,16(,R4)            POSITION FOR ONE ENTRY
         B     AMB2900
AMB2200  OI    FLAGSII,FDIRGRP       SIMULATE MEMBER GROUP INPUT
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUPS NOW
         MVI   SUBPOOLT,21           SUBPOOL 21 DATA
         LA    R5,256/2              256 MEMBERS INITIALLY
         SPACE 1
AMB2210  SLL   R5,1                  MEMBERS*2 FOR EACH LOOP
         LR    R3,R5
         LR    R0,R5
         SLL   R0,4                  TABLE SIZE=MEMBERS*16
         ICM   R0,B'1000',SUBPOOLT
         GETMAIN R,LV=(0)
         LR    R4,R1                 NEW TABLE ADDRESS
         ICM   R0,B'1111',#MEMPTR    ANY PREVIOUS MEMBERS?
         BNZ   AMB2220               YES, BRANCH
         ST    R4,#MEMPTR            INITIALIZE MEMBER BASE
         B     AMB2500
         SPACE 1
AMB2220  SRL   R3,1                  SECOND HALF OF TABLE (# MEMBERS)
         LR    R14,R4                NEW TABLE START ADDRESS
         LR    R15,R5
         SLL   R15,3                 OLD TABLE SIZE=MEMBERS*8
         LR    R2,R15                START OF NEW PART
         LR    R1,R15
         MVCL  R14,R0                PRESERVE THE OLD TABLE
         L     R1,#MEMPTR
         LR    R0,R2                 LENGTH TO FREE
         ICM   R0,B'1000',SUBPOOLT   SUBPOOL TO FREE
         FREEMAIN R,LV=(0),A=(1)
         ST    R4,#MEMPTR            START OF NEW TABLE
         AR    R4,R2                 WHERE TO ADD MEMBERS
         SPACE 3
AMB2300  TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    AMB2320               YES, BRANCH
         TM    #DELSAVE,FF-FMEM#MEM  MEMBER ALREADY ADDED?
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         BNO   AMB2500               NO, BRANCH
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    AMB2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BNO   AMB2605               NO, BRANCH
         L     R1,PMEMCURR           CURRENT LIST ELEMENT
         TM    0(R1),X'80'           ANOTHER ELEMENT?
         BNO   AMB2605               NO, END OF LIST
         MVC   FLAGSAA(1),4(R1)      NEXT DESCRIPTOR FLAGS
         MVC   LMEMBER1+1(19),5(R1)  LEN1, MEMBER1, LEN2, MEMBER2
         L     R1,0(,R1)             NEXT ELEMENT POINTER
         ST    R1,PMEMCURR
         MVC   #DELSAVE(1),FLAGSAA   SAVE THE MEMBER DESCRIPTOR
         MVC   MEMNAME(8),MEMBER1    FIRST MEMBER NAME
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUP
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    AMB2319               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         MVC   DIRNAME,MEMBER1       MOVE TO BLDLLIST
         SPACE 2
         BLDL  INDCB,BLDLLIST          LOCATE DIRECTORY ENTRY
         B     *+4(R15)                PROCESS RETURN CODE
         B     AMB2315                   00 - SUCCESSFUL
         B     AMB2310                   04 - MEMBER NOT FOUND
         B     IOERROR                   08 - I/O ERROR
         SPACE 1
AMB2310  MVC   INSERT#1(8),DIRNAME
         M$MSG L853$1                MSG - (MEMBER) NOT FOUND
         B     AMB2300
         SPACE 1
AMB2315  MVC   MEMNAME(12),DIRNAME   FIRST MEMBER NAME
         B     AMB2500
         SPACE 1
AMB2319  MVI   STARTTR+2,X'01'       REREAD THE DIRECTORY
         SPACE 1
AMB2320  BAS   R14,READDIR           GET NEXT DIRECTORY BLOCK
         B     AMB2600               END OF MEMBERS -- BRANCH
         SPACE 1
         BAS   R2,MFILTER            CHECK MEMBER NAMES
         B     AMB2600                 00 - SIMULATE DIRECTORY END
         B     AMB2300                 04 - MEMBER FAILED FILTERING
         B     AMB2500                 08 - MEMBER PASSED FILTERING
         SPACE 3
AMB2500  L     R1,#MEMPTR            START OF MEMBER LIST
         B     AMB2510+4             SKIP FIRST ADD
AMB2510  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   AMB2580               YES, ADD THIS ENTRY
         CLC   0(8,R1),MEMNAME       FIND MYSELF?
         BE    AMB2300               YES, IGNORE THIS ENTRY
         B     AMB2510               NO, CONTINUE SEARCHING
         SPACE 2
AMB2580  MVC   0(16,R4),MEMNAME      ADD TO THE TABLE
         LA    R4,16(,R4)            NEXT MEMBER POSITION
         S     R3,=F'1'              ANY MORE FIT?
         BNP   AMB2210               NO, BRANCH
         B     AMB2300               YES, GET NEXT MEMBER
         SPACE 3
AMB2600  MVI   #DELSAVE,FF-FMEM#MEM  ELEMENT HAS NOW BEEN ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    AMB2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    AMB2300               YES, BRANCH
         SPACE 1
AMB2605  DS    0H
         NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
AMB2900  DS    0H
         ST    R4,#MEMLAST           SAVE LAST MEMBER POINTER
*  OPEN SYSIN DATA SET
         MVC   BAMDCB(AMBDL),AMBDCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSIN'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SYSIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    AMB2910                         YES, BRANCH
         LA    R1,AMB865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     AMB8550                         EXIT
         SPACE 3
AMB2910  DS    0H
         TM    FLAGSHH,FMEMALLM         ALL MEMBERS?
         BNO   AMB4010                  NO
         B     AMB4540                  YES
AMB4010  DS    0H
         L     R3,#MEMPTR                 FIRST MEMBER POINTER
         L     R4,#MEMLAST                LAST MEMBER POINTER
         MVC   MSGTEXT1(136),MSGBL132     CLEAR THE MESSAGE AREA
         SPACE 1
AMB4530  CR    R3,R4                      END OF MEMBER TABLE?
         BNL   AMB4550                    YES
         MVC   MSGTEXT1+4(80),AMBIDR      LISTIDR
         MVC   MSGTEXT1+4+40(8),0(R3)     MEMBER NAME
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT MEMBER STATEMENT
         MVC   MSGTEXT1+4(80),AMBLOAD     LISTLOAD
         CLI   #AMBLOUT,2                 OUTPUT=BOTH?        DRK OCT12
         BNE   *+4+6                      NO                  DRK OCT12
         MVC   MSGTEXT1+4+28(4),=C'BOTH'  YES                 DRK OCT12
         MVC   MSGTEXT1+4+40(8),0(R3)     MEMBER NAME
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT MEMBER STATEMENT
         LA    R3,16(,R3)                 NEXT MEMBER POSITION
         B     AMB4530
         SPACE 1
AMB4540  DS    0H
* ALL MEMBERS
         MVC   MSGTEXT1(136),MSGBL132     CLEAR THE MESSAGE AREA
         MVC   MSGTEXT1+4(80),AMBIDR      LISTIDR
         MVC   MSGTEXT1+4+32(8),BLANKS    CLEAR MEMBER=
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT STATEMENT
         MVC   MSGTEXT1+4(80),AMBLOAD     LISTLOAD
         CLI   #AMBLOUT,2                 OUTPUT=BOTH?        DRK OCT12
         BNE   *+4+6                      NO                  DRK OCT12
         MVC   MSGTEXT1+4+28(4),=C'BOTH'  YES                 DRK OCT12
         MVC   MSGTEXT1+4+32(8),BLANKS    CLEAR MEMBER=
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT  STATEMENT
AMB4550  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SYSIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  AMBNULL,USADDR=(R7),REPLACE=NO,IBUF=0,                  X
               OBUF=(AMB484W,AMB484WL),MF=(E,STAXPARM)
         LA    R1,AMBPARM                 PARM=VALUE
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,AMBPROG              2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,AMB7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),AMBEFTSR       INVOKE IKJEFTSR?
         BNE   AMBNLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
AMBNLNK  BAS   R2,ATTACH                  AMBLIST
         SPACE 3
AMB7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE
         C     R2,=F'40'                  PROGRAM NOT FOUND?
         BNE   AMB8005                    NO
         MVC   INSERT#1(8),AMBPROG        YES, ERROR
         M$MSG L859$1                     NOT FOUND MESSAGE
         B     AMB8550
         SPACE 1
AMB8005  DS    0H
         MVC   BAMDCB(AMBDL),AMBDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSPRINT'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    AMB8010                      YES, BRANCH
         LA    R1,AMB865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     AMB8550                      EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
AMB8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(120),1(R1)      ADD THE AMBLIST MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     AMB8010
         SPACE 3
AMB8020  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)     CLOSE THE SYSPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
AMB8025  DS    0H
         SPACE 2
AMB8510  DS    0H
         CLC   ##SUBCAL(8),AMBEFTSR       INVOKE IKJEFTSR?
         BNE   AMB8550                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1
         BL    AMB8550                    YES, VALID AMBLIST
         MVI   MTLEN+4,21
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   AMB8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE
         SRDL  R0,12                    SHIFT USER ABEND TO R1
         ST    R0,FULLWORD              SYSTEM ABEND CODE
         MVC   INSERT#2+4(7),=C' ABEND='
         UNPK  INSERT#2+11(5),FULLWORD+2(3)
         TR    INSERT#2+11(4),TRTABLE
         MVI   INSERT#2+11,C'S'         S000
         MVI   INSERT#2+11+4,X'40'
         SPACE 1
         SRL   R1,20                    USER ABEND
         CVD   R1,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE
         MVI   INSERT#2+11+5,C'U'       U0000
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND
         SPACE 1
AMB8530  DS    0H
         M$MSG L171$2
AMB8550  M$ERRST MSGBLANK
         LA    R1,=CL8'SYSIN'           SYSIN DDNAME
         BAS   R2,AMB8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,AMB8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSLIB'          SYSLIB DDNAME
         BAS   R2,AMB8580               FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
AMB8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),AMBFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,AMBUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
AMBNULL BR    R14
         SPACE 2
*  AMBLIST CONSTANTS
         PRINT NOGEN
AMBDCB   DCB   DSORG=PS,DDNAME=AMB,MACRF=(GL,PM),EODAD=AMB8020
AMBDL    EQU   *-AMBDCB
         PRINT NOGEN
AMB484W  DC    C'PDS484W AMBLIST SHOULD NOT BE INTERRUPTED'
AMB484WL EQU   *-AMB484W
AMB865E  M$TX  'PDS865E THE AMBLIST OUTPUT CAN NOT BE OPENED'
         PRINT GEN
AMBEFTSR DC    CL8'IKJEFTSR'
AMBPROG  DC    CL8'AMBLIST'                      AMBLIST
AMBPARM  DC    H'00',CL100' '                    PARM=
AMBIDR   DC    CL80' LISTIDR   DDN=SYSLIB,OUTPUT=ALL,MEMBER='
AMBLOAD  DC    CL80' LISTLOAD DDN=SYSLIB,OUTPUT=XREF,MEMBER='
AMBDDNIN DC    X'000100010005',C'SYSIN'          SYSIN    DDNAME
AMBDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
AMBDDNSL DC    X'000100010006',C'SYSLIB'         SYSLIB   DDNAME
AMBDSNAM DC    X'00020001002C'                   DSNAME
AMBALLOC DC    X'00040001000108'                 DISP=SHR
AMBNORM  DC    X'00050001000108'                 DISP=(,KEEP)
AMBANORM DC    X'00060001000108'                 DISP=(,,KEEP)
AMBDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
AMBFDDNA DC    X'000100010008'                   FOR FREE DDNAME
AMBNEW   DC    X'00040001000104'                 DISP=(NEW)
AMBDEL   DC    X'00050001000104'                 DISP=(,DELETE)
AMBCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
AMBPERM  DC    X'00520000'                       PERMANENT ALLOCATION
AMBUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
AMBPRTFI DC    X'000A00010003',AL3(500)          SPACE=(,NNN)
AMBPRTSE DC    X'000B00010003',AL3(500)          SPACE=(,(,NNN))
AMBPRTIN DC    X'000900010003',AL3(27951)        SPACE=(27951)
AMBSINSP DC    X'000900010003',AL3(6480)         SPACE=(6480)
         SPACE 1
AMBPRTRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
AMBPRTLR DC    X'004200010002',AL2(121)          DCB=LRECL=121
AMBPRTBL DC    X'003000010002',AL2(27951)        DCB=BLKSIZE=27951
         SPACE 2
AMBSINRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
AMBSINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
AMBSINBL DC    X'003000010002',AL2(6480)         DCB=BLKSIZE=6480
         SPACE 2
AMBSYSIN DC    A(AMBPRTFI,AMBPRTSE,AMBSINSP)
         DC    A(AMBSINRE,AMBSINLR,AMBSINBL)
         DC    A(AMBNEW,AMBDEL,AMBCDEL),X'80',AL3(AMBPERM)
AMBSYSPR DC    A(AMBPRTFI,AMBPRTSE,AMBPRTIN)
         DC    A(AMBPRTRE,AMBPRTLR,AMBPRTBL)
         DC    A(AMBNEW,AMBDEL,AMBCDEL),X'80',AL3(AMBPERM)
         SPACE 2
         SPACE 2
