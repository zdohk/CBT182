         TITLE 'P D S  --  DISASSEMBLER INTERFACE            12/22/05'
***********************************************************************
***      DISASM SUBCOMMAND   ADDED BY JOHN KALINICH -- DEC., 2005   ***
***********************************************************************
*
DISASM   CSECT
         USING *,R8
* ASMDASM CAN DISASSEMBLE OBJECT CODE IN SEQUENTIAL FILES
         AIF   ('&ASMPGM' EQ 'ASMDASM').DSMOBJ                DRK JUN17
         LA    R1,L530          ASSUME A NON-PARTITIONED DATA SET
         TM    DSORG,DS1DSGPO   CORRECT?
         BNO   MSGNEW           YES, BRANCH
         LA    R1,L701          ASSUME NOT A LOAD LIBRARY
         TM    FLAGSCC,RECFMU   CORRECT?
         BNO   MSGNEW           YES, BRANCH
         SPACE 1
.DSMOBJ  ANOP
*  PARSE NAME/CSECT TO USE FOR SYSIN AND SYSLIB(MBR) ALLOCATION
         MVC   MSGTEXT1(136),MSGBL132      CLEAR THE MESSAGE AREA
         MVC   WORKTBL(128),BLANK128       CLEAR WORK TABLE
         L     R2,ADDRCBUF                 COMMAND STRING
         LH    R1,0(R2)                    TOTAL LENGTH
         LH    R3,2(R2)                    LENGTH OF COMMAND VERB +1
         SR    R1,R3                       MINUS COMMAND VERB +1
         S     R1,=F'4'                    MINUS LENGTH HALFWORDS
         BCTR  R1,0                        MACHINE LENGTH
         LA    R2,4(R2)                    SKIP LENGTH HALFWORDS
         AR    R2,R3                       PT AT DISASM ARGS
         MVC   WORKTBL(*-*),0(R2)          DISASM ARGS
         EX    R1,*-6                       TO WORK TABLE
*        OC    WORKTBL(*-*),BLANK128       FOLD TO UPPER CASE
         EX    R1,*-6                       IN WORK TABLE
         SPACE 2
         LA    R15,WORKTBL                 PT @ COMMAND ARGS
         LA    R4,MSGTEXT1+4               COLUMN 1, OUTPUT
         BAS   R1,DSM8S00                  MOVE MODULE NAME
         BAS   R1,DSM9S00                  FIND NON-BLANK
         LA    R4,MSGTEXT1+4+9             COLUMN 10, OUTPUT
         BAS   R1,DSM8S00                  MOVE CSECT NAME
         MVC   #DSMNAME(8),MSGTEXT1+4      SAVE MODULE NAME
         OC    #DSMNAME(8),BLANK128        FOLD TO UPPER CASE
         MVC   #DSMCSCT(8),MSGTEXT1+4+9    SAVE CSECT NAME
         CLC   ##SUBCOM(8),DSMASMD         ASMD SUBCOMMAND?
         BE    DSM0002                     YES, DO NOT FOLD
         OC    #DSMCSCT(8),BLANK128        NO, FOLD TO UPPER CASE
DSM0002  DS    0H
         SPACE 2
*  FREE SYSIN, SYSLIB, SYSPRINT, AND SYSPUNCH/SYSOUT DATASETS
         LA    R1,=CL8'SYSIN'           SYSIN DDNAME
         BAS   R2,DSM8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSLIB'          SYSLIB DDNAME
         BAS   R2,DSM8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,DSM8580               FREE THIS DATA SET
         SPACE 1
         XC    #DSMPGM(8),#DSMPGM       CLEAR PROGRAM TYPE    DRK JAN16
         CLC   DSMPGM(8),DSMPGM0        DISASM GEN OPTION?    DRK JAN16
         BNE   DSM0005                  NO                    DRK JAN16
         TM    DS1SMSFG,DS1PDSE         YES, PDSE?            DRK JAN16
         BNO   DSM0005                       NO               DRK JAN16
         MVC   #DSMPGM(8),DSMPGM2            YES, RESOURCE    DRK JAN16
DSM0005  DS    0H                                             DRK JUN07
         CLC   #DSMPGM(8),DSMPGM2       RESOURCE DISASM?      DRK JAN16
         BE    DSM0010                  YES, USE SYSOUT       DRK JUN07
         LA    R1,=CL8'SYSPUNCH'        SYSPUNCH DDNAME
         BAS   R2,DSM8580               FREE THIS DATA SET
         B     DSM0020                                        DRK JUN07
DSM0010  DS    0H                                             DRK JUN07
         LA    R1,=CL8'SYSOUT'          SYSOUT DDNAME         DRK JUN07
         BAS   R2,DSM8580               FREE THIS DATA SET    DRK JUN07
DSM0020  DS    0H                                             DRK JUN07
*  ALLOCATE DISASM //SYSLIB DATA SET
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'DSMDDNLI+6,R3),DSMDDNLI       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DSMDDNLI+6(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DSMDSNAM,R3),DSMDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DSMDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         AIF   ('&ASMPGM' NE 'ASMDASM').NOASMD                DRK FEB21
DSM0021  DS    0H                                             DRK FEB21
*        ALLOCATE PDS MEMBER AS SEQUENTIAL FOR ASMDASM        DRK FEB21
         TM    FLAGSCC,RECFMF                    RECFM=F?     DRK FEB21
         BNO   DSM0022                           NO, BRANCH   DRK FEB21
         TM    DSORG,DS1DSGPS                    DSORG=PS?    DRK FEB21
         BO    DSM0022                           YES, BRANCH  DRK FEB21
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT "
         MVC   0(L'DSMDSMBR,R3),DSMDSMBR         SPECIFY MEMBER TEXT  "
         MVC   6(8,R3),#DSMNAME                  MOVE IN MEMBER NAME  "
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT   "
         LA    R3,L'DSMDSMBR+8(,R3)              START OF NEXT TEXT   "
DSM0022  DS    0H                                             DRK FEB21
.NOASMD  ANOP
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DSMALLOC,R3),DSMALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DSMALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DSMNORM,R3),DSMNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DSMNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DSMANORM,R3),DSMANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
* ADD UNIT AND VOLUME                                         DRK JUN17
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DSMANORM(,R3)                START OF NEXT TEXT
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DSMUNIT+8,R3),DSMUNIT         SPECIFY UNIT TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DSMUNIT+8(,R3)               START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DSMVOLSR,R3),DSMVOLSR         SPECIFY VOLSER TEXT
         MVC   6(6,R3),VOLALLOC                  VOLUME SERIAL
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   DSMERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE DISASM //SYSIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),DSMDDNIN      SYSIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),DSMSYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         MVC   #CMXDDIN(8),=CL8'SYSIN'    MOVE IN THE DDNAME
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   DSMERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE DISASM //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),DSMDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         SPACE 1
         CLC   #DSMPGM(8),DSMPGM2         RESOURCE DISASM?    DRK JAN16
         BE    DSM0024                    YES, USE SYSOUT     DRK JUN07
         MVC   S99TUPTR+4(40),DSMSYSPR    ADD OTHER LIST ELEMENTS
         B     DSM0028                                        DRK JUN07
DSM0024  DS    0H                                             DRK JUN07
         MVC   S99TUPTR+4(40),DSMSYSP2    ADD OTHER LIST ELEMENTS     "
DSM0028  DS    0H                                             DRK JUN07
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDPR(8),=CL8'SYSPRINT' MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   DSMERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE DISASM //SYSPUNCH OR //SYSOUT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         SPACE 1
         CLC   #DSMPGM(8),DSMPGM2         RESOURCE DISASM?    DRK JAN16
         BE    DSM0030                    YES, USE SYSOUT     DRK JUN07
         MVC   #CMXSYS3(14),DSMDDNPU      SYSPUNCH DDNAME
         B     DSM0040                                        DRK JUN07
DSM0030  DS    0H                                             DRK JUN07
         MVC   #CMXSYS3(12),DSMDDNOU      SYSOUT DDNAME       DRK JUN07
DSM0040  DS    0H                                             DRK JUN07
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),DSMSYSPU    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   DSMERROR                   NO, BRANCH
         B     DSM6000
         SPACE 2
DSMERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    DSM8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     DSM8550
         SPACE 3
DSM6000  DS    0H
*  OPEN SYSIN DATA SET
         MVC   BAMDCB(DSMDL),DSMDCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),#CMXDDIN
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SYSIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    DSM6010                         YES, BRANCH
         LA    R1,DSM865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     DSM8550                         EXIT
         SPACE 3
*  OUTPUT SYSIN RECORDS
DSM6010  DS    0H
         TM    DSORG,DS1DSGPS              DSORG=PS?          DRK FEB21
         BNO   DSM6020                     NO, BRANCH         DRK FEB21
         CLC   #DSMNAME,BLANK128           YES, NAME BLANK?   DRK FEB21
         BNE   DSM6020                     NO                 DRK FEB21
         MVC   #DSMNAME(8),=CL8'OBJECT'    YES, MAKE ONE UP   DRK FEB21
DSM6020  DS    0H
         CLC   #DSMPGM(8),DSMPGM2          RESOURCE DISASM?   DRK JAN16
         BNE   DSMCONT                     NO, SKIP CSECT CHECK       "
         CLC   #DSMCSCT,BLANK128           CSECT NAME BLANK?  DRK FEB21
         BNE   DSMCONT                     NO                 DRK FEB21
         MVC   #DSMCSCT(8),#DSMNAME        YES, DEFAULT TO MODULE     "
DSMCONT  DS    0H                                             DRK JUN07
         MVC   MSGTEXT1(136),MSGBL132      CLEAR MESSAGE AREA DRK FEB21
         MVC   MSGTEXT1+4(8),#DSMNAME      MOVE NAME          DRK FEB21
         MVC   MSGTEXT1+4+9(8),#DSMCSCT    MOVE CSECT         DRK FEB21
         SPACE 1
         PUT   BAMDCB,MSGTEXT1+4           OUTPUT DISASM STATEMENT
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SYSIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  DSMNULL,USADDR=(R7),REPLACE=NO,IBUF=0,                  X
               OBUF=(DSM484W,DSM484WL),MF=(E,STAXPARM)
         LA    R1,DSMPARM                 PARM=
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         SPACE 1
         CLC   #DSMPGM(8),DSMPGM2         RESOURCE DISASM?    DRK JAN16
         BE    DSM0050                    YES                 DRK JUN07
         LA    R15,DSMPGM               2 POINT TO CALLED PROGRAM
         B     DSM0060                                        DRK JUN07
DSM0050  DS    0H                                             DRK JUN07
         LA    R15,DSMPGM2              2 POINT TO CALLED PROGRAM     "
DSM0060  DS    0H                                             DRK JUN07
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,DSM7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),DSMEFTSR       INVOKE IKJEFTSR?
         BNE   DSMNLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
DSMNLNK  BAS   R2,ATTACH                  DISASM
         SPACE 3
DSM7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE    DRK JAN07
         C     R2,=F'40'                  PROGRAM NOT FOUND?  DRK JAN07
         BNE   DSM8000                    NO                  DRK JAN07
         SPACE 1
         CLC   #DSMPGM(8),DSMPGM2         YES, RESOURCE PGM?  DRK JAN16
         BE    DSM7082                         YES            DRK JUN07
         MVC   INSERT#1(8),DSMPGM         INSERT PGM NAME     DRK JAN07
         B     DSM7084                                        DRK JUN07
DSM7082  DS    0H                                             DRK JUN07
         MVC   INSERT#1(8),DSMPGM2        INSERT PGM NAME     DRK JUN07
DSM7084  DS    0H                                             DRK JUN07
         M$MSG L859$1                     NOT FOUND MESSAGE   DRK JAN07
         B     DSM8550                                        DRK JAN07
         SPACE 1
DSM8000  MVC   BAMDCB(DSMDL),DSMDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),#CMXDDPR
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    DSM8010                      YES, BRANCH
         LA    R1,DSM865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     DSM8550                      EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
DSM8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(120),1(R1)      ADD THE DISASM MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     DSM8010
         SPACE 3
DSM8020  DS    0H                                             DRK JUN07
         SPACE 1
*        CLC   #DSMPGM(8),DSMPGM2           RESOURCE DISASM?  DRK JAN16
*        BNE   DSM8500                      NO, CONTINUE      DRK JUN07
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)     CLOSE THE SYSPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         MVC   BAMDCB(DSMDL2),DSMDCB2       GET MODEL DCB 2
         CLC   #DSMPGM(8),DSMPGM2           RESOURCE DISASM?  DRK FEB21
         BNE   DSM8022                      NO, ASMDASM/DISASM        "
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSOUT'
         B     DSM8024                                        DRK FEB21
DSM8022  DS    0H                                             DRK FEB21
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSPUNCH'       DRK FEB21
DSM8024  DS    0H                                             DRK FEB21
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSOUT/SYSPUNCH
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    DSM8030                      YES, BRANCH
         LA    R1,DSM865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     DSM8550                      EXIT
         SPACE 3
*  PROCESS SYSOUT/SYSPUNCH RECORDS
DSM8030  DS    0H                                             DRK JUN07
         GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(80),0(R1)       ADD THE DISASM MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     DSM8030
         SPACE 3
DSM8500  DS    0H
         CLC   ##SUBCAL(8),DSMEFTSR       INVOKE IKJEFTSR?
         BNE   DSM8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1                DRK JUL11
         BL    DSM8540                    YES, VALID DISASM
         MVI   MTLEN+4,21                 NO, ISSUE MESSAGE   DRK NOV07
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA          DRK JAN06
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11                     DRK JAN07
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   DSM8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE            DRK NOV07
         SRDL  R0,12                    SHIFT USER ABEND TO R1DRK NOV07
         ST    R0,FULLWORD              SYSTEM ABEND CODE     DRK NOV07
         MVC   INSERT#2+4(7),=C' ABEND='                      DRK NOV07
         UNPK  INSERT#2+11(5),FULLWORD+2(3)                   DRK NOV07
         TR    INSERT#2+11(4),TRTABLE                         DRK NOV07
         MVI   INSERT#2+11,C'S'         S000                  DRK NOV07
         MVI   INSERT#2+11+4,X'40'                            DRK NOV07
         SPACE 1                                              DRK NOV07
         SRL   R1,20                    USER ABEND            DRK NOV07
         CVD   R1,DOUBLE                                      DRK NOV07
         UNPK  DOUBLE(5),DOUBLE+5(3)                          DRK NOV07
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE        DRK NOV07
         MVI   INSERT#2+11+5,C'U'       U0000                 DRK NOV07
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND       DRK NOV07
         SPACE 1
DSM8530  DS    0H
         M$MSG L171$2
DSM8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SYSPRINT/SYSOUT
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
DSM8550  M$ERRST MSGBLANK
         LA    R1,#CMXDDPR                SYSPRINT DDNAME
         BAS   R2,DSM8580                 FREE THIS DATA SET
         LA    R1,#CMXDDIN                SYSIN DDNAME
         BAS   R2,DSM8580                 FREE THIS DATA SET
         SPACE 1
         CLC   #DSMPGM(8),DSMPGM2         RESOURCE DISASM?    DRK JAN16
         BE    DSM8560                    YES                 DRK JUN07
         LA    R1,=CL8'SYSPUNCH'          SYSPUNCH DDNAME
         BAS   R2,DSM8580                 FREE THIS DATA SET
         B     DSM8570                                        DRK JUN07
DSM8560  DS    0H                                             DRK JUN07
         LA    R1,=CL8'SYSOUT'            SYSOUT DDNAME       DRK JUN07
         BAS   R2,DSM8580                 FREE THIS DATA SET  DRK JUN07
DSM8570  DS    0H                                             DRK JUN07
         LA    R1,=CL8'SYSLIB'            SYSLIB DDNAME
         BAS   R2,DSM8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
DSM8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),DSMFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,DSMUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
DSMNULL  BR    R14
         SPACE 2
DSM8S00  DS    0H                      LITTLE SUB 1           DRK JUN07
         LA    R14,8                   FIRST 8 CHARACTERS     DRK JUN07
DSM8S10  CLI   0(R15),C' '             SPACE?                 DRK JUN07
         BER   R1                      YES, DONE              DRK JUN07
         MVC   0(1,R4),0(R15)          MOVE TO OUTPUT         DRK JUN07
         LA    R4,1(,R4)               NEXT TO   CHARACTER    DRK JUN07
         LA    R15,1(,R15)             NEXT FROM CHARACTER    DRK JUN07
         BCT   R14,DSM8S10             LOOP FOR 8             DRK JUN07
         BR    R1                      ALL DONE               DRK JUN07
         SPACE 1                                              DRK JUN07
DSM9S00  DS    0H                      LITTLE SUB 2           DRK JUN07
         LA    R14,8                   FIRST 8 CHARACTERS     DRK JUN07
DSM9S10  CLI   0(R15),C' '             SPACE?                 DRK JUN07
         BNER  R1                      NO, DONE               DRK JUN07
         LA    R15,1(,R15)             NEXT FROM CHARACTER    DRK JUN07
         BCT   R14,DSM9S10             LOOP FOR 8             DRK JUN07
         BR    R1                      ALL DONE               DRK JUN07
         SPACE 2
*  DISASM CONSTANTS
         PRINT NOGEN
DSMDCB   DCB   DSORG=PS,DDNAME=DSM,MACRF=(GL,PM),EODAD=DSM8020
DSMDL    EQU   *-DSMDCB
DSMDCB2  DCB   DSORG=PS,DDNAME=DSM,MACRF=(GL,PM),EODAD=DSM8500
DSMDL2   EQU   *-DSMDCB2
         PRINT NOGEN
DSM484W  DC    C'PDS484W DISASM SHOULD NOT BE INTERRUPTED'
DSM484WL EQU   *-DSM484W
DSM865E  M$TX  'PDS865E THE DISASM OUTPUT CAN NOT BE OPENED'
         PRINT GEN
DSMEFTSR DC    CL8'IKJEFTSR'
         AIF   ('&ASMPGM' EQ 'ASMDASM').DSMPGM2               DRK JAN16
DSMPGM   DC    CL8'DISASM'                       PGM=DISASM   CBT 217
DSMPARM  DC    AL2(DSMPARML-2)                   PARM LENGTH
         DC    C'SUPVR,FLTPT'                    PARM VALUE
DSMPARML EQU   *-DSMPARM
         AGO   .SKIPPM2                                       DRK JAN16
.DSMPGM2 ANOP
DSMPGM   DC    CL8'ASMDASM'                      PGM=ASMDASM  HLASM
DSMPARM  DC    AL2(DSMPARML-2)                   PARM LENGTH
         DC    C'COPYRIGHTOK'                    PARM VALUE
DSMPARML EQU   *-DSMPARM
.SKIPPM2 ANOP
DSMASMD  DC    CL8'ASMD'                         ALT SUBCMD NAME -
*                                                 NO FOLD OF CSECT NAME
DSMPGM2  DC    CL8'RESOURCE'                     DISASSEMBLER, CBT 234
DSMPGM0  DC    CL8'DISASM'                                    DRK JAN16
DSMDDNIN DC    X'000100010005',C'SYSIN'          SYSIN    DDNAME
DSMDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
DSMDDNPU DC    X'000100010008',C'SYSPUNCH'       SYSPUNCH DDNAME
DSMDDNLI DC    X'000100010006',C'SYSLIB'         SYSLIB   DDNAME
DSMDDNOU DC    X'000100010006',C'SYSOUT'         SYSOUT   DDNAME
DSMDSNAM DC    X'00020001002C'                   DSNAME
DSMDSMBR DC    X'000300010008'                   MEMBER
DSMALLOC DC    X'00040001000108'                 DISP=SHR
DSMNORM  DC    X'00050001000108'                 DISP=(,KEEP)
DSMANORM DC    X'00060001000108'                 DISP=(,,KEEP)
DSMUNIT  DC    X'001500010008',CL8'&PUNIT'       UNIT=SYSALLDA
DSMVOLSR DC    X'001000010006404040404040'       VOL=SER=
DSMDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
DSMFDDNA DC    X'000100010008'                   FOR FREE DDNAME
DSMNEW   DC    X'00040001000104'                 DISP=(NEW)
DSMDEL   DC    X'00050001000104'                 DISP=(,DELETE)
DSMCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
DSMPERM  DC    X'00520000'                       PERMANENT ALLOCATION
DSMUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
DSMPRTFI DC    X'000A00010003',AL3(10)           SPACE=(,NNN)
DSMPRTSE DC    X'000B00010003',AL3(100)          SPACE=(,(,NNN))
DSMPRTIN DC    X'000900010003',AL3(27951)        SPACE=(27951)
DSMSINSP DC    X'000900010003',AL3(27920)        SPACE=(27920)
         SPACE 1
DSMPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
DSMPRTLR DC    X'004200010002',AL2(121)          DCB=LRECL=121
DSMPRTBL DC    X'003000010002',AL2(27951)        DCB=BLKSIZE=27951
         SPACE 1
DSMPRTR2 DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
DSMPRTL2 DC    X'004200010002',AL2(133)          DCB=LRECL=133
DSMPRTB2 DC    X'003000010002',AL2(27664)        DCB=BLKSIZE=27664
         SPACE 2
DSMSINRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
DSMSINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
DSMSINBL DC    X'003000010002',AL2(3120)         DCB=BLKSIZE=3120
         SPACE 2
DSMSYSIN DC    A(DSMPRTFI,DSMPRTSE,DSMSINSP)
         DC    A(DSMSINRE,DSMSINLR,DSMSINBL)
         DC    A(DSMNEW,DSMDEL,DSMCDEL),X'80',AL3(DSMPERM)
DSMSYSPR DC    A(DSMPRTFI,DSMPRTSE,DSMPRTIN)
         DC    A(DSMPRTRE,DSMPRTLR,DSMPRTBL)
         DC    A(DSMNEW,DSMDEL,DSMCDEL),X'80',AL3(DSMPERM)
DSMSYSP2 DC    A(DSMPRTFI,DSMPRTSE,DSMPRTIN)
         DC    A(DSMPRTR2,DSMPRTL2,DSMPRTB2)
         DC    A(DSMNEW,DSMDEL,DSMCDEL),X'80',AL3(DSMPERM)
DSMSYSPU DC    A(DSMPRTFI,DSMPRTSE,DSMSINSP)
         DC    A(DSMSINRE,DSMSINLR,DSMSINBL)
         DC    A(DSMNEW,DSMDEL,DSMCDEL),X'80',AL3(DSMPERM)
         SPACE 2
