KCAD C=FREEWARE D='Freeware TSO Utility Commands Descriptions'
KCAP V='CBTTAPE.ORG' P='PDS COMMAND' R=* C=FREEWARE
KCPY V='CBTTAPE.ORG' C=NO
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS86
   FUNCTION -

 The -PDS86- command allows a TSO user to access and manipulate the
 directory and selected members of a PDS (partitioned data set) or
 a PDSE (partitioned data set extended).

 -PDS86- subcommands are available to display statistics on the data
 set directory and data set usage, modify the data set directory,
 modify the DCB attributes of the data set, compress the data set and
 validity check the data set.

 Additional subcommands can display portions of the member name
 directory, list occurrences of a search string in a member, restore
 a previously deleted member, create an alias for a member, display
 all aliases for a member, locate a member with desired attributes,
 and browse, view, list, delete, rename or update a member.

 For load data sets, subcommands are available to display and modify
 the linkage attributes of a module, list the history data for a
 module and map the CSECT structure of a module.

 For other partitioned data sets, subcommands are available to submit
 a JCL member, edit a member, print a member, compare two members in
 a data set and display ISPF statistics for a member.


  -PDS86- command features:
    Hexadecimal member names -- member names may be entered in hex for
    any of the subcommands which accept member names (or partial member
    names) as input.  Thus, for these subcommands, x'd7c4e2f9' and PDS9
    are equivalent.  Also, note that x'333' and x'0333' are equivalent.
    Member names with lower-case characters can be entered in hex.
    For example, x'C182C3' specifies member "AbC".

    Default member names -- if no member name is entered for an
    ATTRIB, BROWSE, DCF, DELETE, DIRENTRY, DSPRINT, EDIT, FIND,
    FSE, HISTORY, IF, LIST, MAP, MEMBERS, MEMLIST, OUTCOPY, PRINTOFF,
    REPLACE, REPRO, REVIEW, SUBMIT, SUBLIST, TSOEDIT, TSOLIST, VIEW,
    VERIFY or VPSPRINT subcommand, the -PDS86- command will use the last
    member name or member group entered for any of these subcommands.
    In addition, note that the ALIAS, RENAME and RESTORE subcommands
    also modify the default member name.

    Member groups -- the above subcommands which allow default member
    names also accept ranges, patterns and combinations of member
    names:
      1.  A member name range is of the form name1:name2, which selects
          members based on character string ranges in their names.
      2.  A pattern member name is of the form name1/name2, which
          selects members based on character sting matches in their
          names.
      3.  A combination member name is of the form name1*name2, which
          selects members based on the range name1:name1 and on the
          pattern name2 in the remainder of the member name.

    Member lists -- the above subcommands which allow default member
    names also allow lists of member names which can be composed of
    normal member names and member group names.  When a member list is
    used, the subcommand receives control separately for each member
    specification in the list.

    Extended HELP -- additional help for numbered -PDS86- messages
    is available in the HELP data set; also, for warning and error
    messages, a .? subcommand may be entered to request explanations
    of the last few messages received.

    Sequential data sets -- the BROWSE, COPY, DCF, DSPRINT, EDIT,
    FIND, FIXPDS, FSE, LIST, PRINTOFF, REPLACE, REVIEW, SUBMIT,
    TSOEDIT, TSOLIST, VIEW, VERIFY and VPSPRINT subcommands are also
    defined for sequential data sets.  The documented syntax is
    unchanged except that no data is entered corresponding to any
    member name position.

    Subcommand name abbreviations -- subcommand names can be
    abbreviated to the first few characters of the subcommand name.
    Subcommand names are scanned in the order of output from the
    OPTIONS subcommand; the first match between the entered name
    and the subcommand name table is used.
   SYNTAX -
     -PDS86- FILE(ddname) NUMBER(numb) XISPMODE /
              dsn VOLUME(name) VOLSET(name) SHR/OLD XISPMODE
              *** optionally followed by:  subcommand operands

 ALIASES  - none.
 DEFAULTS - SHR
 REQUIRED - FILE(ddname) or dsname
   OPERANDS -
  dsn          - specifies the data set name.  If the data set name is
                 not entered in quotes ('), your TSO PREFIX will be
                 appended to the start of the entered data set name.

                 Note that if your system has password security, you
                 may enter your data set password after a slash (/)
                 and the data set name.  The syntax is: dsn/password


  FILE(ddname) - specifies the data set is already allocated with the
                 provided ddname.  Note that only disk data sets are
                 supported.  If the FILE keyword is used, dsname,
                 SHR/OLD, VOLSET and VOLUME should not also be used.

                 However, if the data set is concatenated, the SHR
                 or OLD keyword may be used since -PDS86- will
                 reallocate the data set.
  NUMBER(numb) - for use with FILE only, numb defaults to 1; specifies
                 the concatenation number desired for the ddname
                 identified.  If numb is larger than the number of
                 concatenated data sets, the last data set in the
                 sequence will be used.
  VOLUME(name) - specifies the volume name on which the data set
                 resides.  If a volume name is entered, SYSALLDA is
                 assumed as the unit name; otherwise, the unit name
                 from the catalog is used.

                 Note:  this parameter should be used if the data set
                 is not cataloged or if the catalog entry is not to be
                 used.  To use the catalog for a CHANGE subcommand
                 even if VOLSET is in effect, you may enter VOLUME(*).
  VOLSET(name) - specifies a default volume name for data set
                 references.  For example, if VOLSET(NEWRES) were
                 entered, subsequent CHANGE subcommands with a data
                 set name and no VOLUME parameter will assume a
                 VOLUME(NEWRES) parameter.

                 Note:  this parameter should be used if a default
                 volume is desired.  To nullify the effect of VOLSET,
                 enter VOLSET(*) on a subsequent CHANGE subcommand.

  SHR          - specifies that the data set is to be allocated with
                 a disposition of SHR.
  OLD          - specifies that the data set is to be allocated with
                 a disposition of OLD to prevent the use of this data
                 set by other users.
  XISPMODE     - may be used to request line mode when -PDS86- is
                 invoked under ISPF.
  SUBCOMMAND   - specifies that -PDS86- is not to process subcommands;
                 only the single subcommand entered and any of its
                 operands will be processed (ISPMODE and MEMLIST are
                 exceptions since they may be used to set the initial
                 processing mode).

                 Note: if a subcommand is entered on the command
                 line, no YES/NO prompting will be provided.
  OPERANDS     - specifies any desired operands for a subcommand
                 entered on the primary command line.
   Subcommands:
   %cmem operands  - execute -PDS86- subcommands from the CLIST CMEM
   ATTRIB xx       - list attributes of member or module XX
   ATTRIB xx reus  - assign the reusable linkage attribute to module XX
   ALIAS xx yy     - add an alias to member XX called YY
   AMBLIST xx      - list load module XREF and IDR info for module XX
   ABE xx          - edit member XX with ABE
   BROWSE xx       - browse member XX with ISPF
   CHANGE zzz      - switch to the data set ZZZ
   COBANAL xx      - list COBANAL load module analysis for module XX
   COMPARE xxx yyy - compare members XXX and YYY with TSO COMPARE
   COMPRESS        - compress the data set
   CONDEND         - end -PDS86- if warning or error messages
   CONTROL noprom  - do not prompt for yes or no inputs
   COPY P7/ lib.xy - copy members containing P7 to data set LIB.XY
   DISPLAY rr tt   - display member names in the range RR thru TT999999
   DCF xx          - script a hardcopy of member XX with TSO SCRIPT
   DIRENTRY xx     - dump the directory entry for member XX
   DISASM xx       - disassemble load module XX
   DELETE xx       - delete member XX
   DLINK xx        - reconstruct object code for module XX
   DSNAME tso      - display the current allocation in TSO format
   DSPRINT xx prt  - print a hardcopy of member XX with TSO DSPRINT
   EDIT xx         - edit member XX with ISPF
   END             - terminate the -PDS86- command
   EDREC           - control ISPF edit recovery
   EXEC ccc        - execute -PDS86- subcommands from the CLIST CCC
   FIND xx =fff=   - list occurrences of the string FFF in member XX
   FIXPDS exp(30)  - add 30 directory blocks to the data set
   FSE xx          - edit member XX with TSO FSE
   HELP sss        - list the HELP entry for subcommand SSS
   HISTORY xx      - list HISTORY data for module XX
   IF mvs/ rent    - locate the ..MVS.. modules marked as reentrant
   ISPF 3.3        - invoke the ISPF primary panel with option 3.3
   ISPMODE         - enter ISPF session display mode
   ISPXEQ la open  - entry mode display when invoking -PDS86-
   LCS xx          - list Panvalet LCS information for load module XX
   LIST xx         - display member XX
   LMA xx          - list Debug Tool load module analysis for module XX
   LOAD xx pds     - load pds from xx IEBUPDTE member stream
   MAP xx short    - map the CSECT structure of module XX in short form
   MATCH pds       - match pds directory and data to current pds
   MEMBERS         - display the current member group
   MEMLIST         - enter ISPF member list mode
   MXIBAT          - display system information with the MXI program
   OFFLOAD * seq   - offload members to the SEQ data set
   OPTIONS         - display the menu of -PDS86- subcommands
   OUTCOPY xx      - output an IEBCOPY select statement for member XX
   PATTERN pp dd   - display all member names containing PP and DD
   PRINTOFF xx     - print a hardcopy of member XX with TSO PRINTOFF
   PTSEXP xx seq   - expand compacted SYSMOD member XX to SEQ data set
   RECALL          - display or reenter the previous subcommand
   RENAME xx yy    - rename member XX to YY
   REPLACE x /y/z/ - replace string Y with string Z in member X
   REPRO xx        - reconstruct member XX
   RESTORE xx      - resurrect member XX
   REVIEW xx       - browse member XX with TSO REVIEW
   SMPGEN : mac    - create SMP/E controls for all members
   SRCHFOR xx 'ss' - list occurrences of the string SS in member XX
   SUBMIT xx       - submit JCL member XX with TSO SUBMIT
   SUBLIST xx/     - form a member subgroup with members containing XX
   SVC xxx         - Displays the current SVC table entry for SVC XXX
   TRKMAP volume   - display track map for volume using DISKMAP program
   TSO yy z1 z2    - invoke the TSO command YY using operands Z1 and Z2
   TSOEDIT xx      - edit member XX with TSO EDIT
   TSOLIST xx      - display member XX with TSO LIST
   USAGE           - list directory and data set statistics
   VIEW xx         - view member XX with ISPF
   VERIFY          - validity check the data set
   VPSPRINT xx prt - print a hardcopy of member XX with TSO VPSPRINT
   VPDSE           - verify a PDSE directory structure
   XMIT P86/ drk   - transmit members containing P86 to nickname DRK

   Additional HELP only entries for -PDS86-:
   ABEND           - explains ABEND processing
   ATTN            - explains attention handling
   DEFINE          - defines member and data set terminology
   DIALOG          - explains the relationship to ISPF services
   GROUPS          - explains member groups and name forms allowed
   LIMITS          - documents several -PDS86- limitations
   UPDATE          - explains data set protection and SHR updates
   MESSAGES        - documents -PDS86- program messages.
   H MS MS(pds999) - explains the PDS999E program message

   Additional HELP only entries for -PDS86- (ISPMODE only):
   CAX             - documents Active Catalog Display
   LISTA           - documents List Allocation Display
   LISTC           - documents List Files Display
   LISTV           - documents List Volumes Display
   SET             - documents Set Defaults for Dialog Functions
   TCT             - documents PDS/TSO Command Table
   SHOW            - documents ISPMODE Session Log(s)
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ABE
K* AB

    Example -     ABE mema subcmds

 The ABE subcommand invokes the ABE editor to edit a member.

  ABE is an acronym for "A Better Editor".

  The ABE editor is an extremely sophisticated text editor which
    is written in PL1.  ABE requires the PL1 Optimizing Compiler
    Transient Library for its execution.

  ABE is a public-domain product, and may be obtained either from a
    NaSPA V.I.P. MVS tape, NaSPA, Milwaukee, WI. (414) 423-2420, or
    from the author, Tom G. Smith, Kimberly-Clark, Neenah, WI.
    (414) 735-2174.

  ABE also has an AID facility which guides the user to where he
    wants to go, while using this editor.

  PDS includes an excerpt from the TSO help that is offered with
    the ABE product.  This is a separate member in this install
    dataset called ABEHELP.  Much more detailed help comes with the
    ABE product as shipped.  The help information in ABEHELP is not
    complete or self-contained.  It is intended only to show the
    subcommands that are possible to use upon initial entry to the
    ABE editor.

 **** (If you are actually using ABE, delete these 2 lines and copy
 ****  member ABEHELP below. )

 ALIASES  - none.
 DEFAULTS - none.
 REQUIRED - none.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ATTRIB
K* A
K* AT
K* ATT
K* ATTR
K* ATTRI

    Example -     ATTRIB mema:memb rent reus refr

 The ATTRIB subcommand lists the attributes of a member.

 ***LOAD*** If the data set is a load library ***LOAD***  --
 The following linkage editor attributes are identified:
   AMODE     - addressing mode (if AMODE is not 24 or RMODE is not 24)
   AUTH      - APF authorized
   DC        - downward compatible (the module can be reprocessed by
               a level E linkage editor).
   LOAD ONLY - only loadable (OL -- the module can be brought into main
               storage only with a LOAD MACRO)
   NOT EDIT  - not editable (the module cannot be linkage edited)
   NOT EXEC  - not executable (the linkage editor noted an error and
               LET processing was not requested)
   OVERLAY   - overlay load module structure
   PAGE      - page alignment required
   REFR      - refreshable (replaceable by a new copy during execution)
   RENT      - reentrant (executable by several tasks simultaneously)
   REUS      - reusable (executable by several tasks in serial order)
   RLD error - if there is a mismatch between the directory RLD/CONTROL
               field and the first RLD entry of OS/VS linked modules
   RMODE     - residence mode (if RMODE is not 24 or AMODE is not 24)
   SCTR      - scatter load module structure
   SSI       - SSI information in hexadecimal
   TEST      - linked with the TEST option

 In addition, the ATTRIB subcommand can add or delete several linkage
 attributes for a load module.  When the ATTRIB subcommand is changing
 a module's attributes and the module is reentrant, the reusable
 attribute is also added as is done by the linkage editor.

 If a main module is assigned a RMODE or AMODE value, any associated
 alias directory entries are updated to reflect the same RMODE value
 and the main module's AMODE value.

 If the module is an alias (unless NOALIASINFO is specified or
 CONTROL NOALIASINFO is in effect), the name of any corresponding
 main member will be displayed if it exists; otherwise, the module
 name from the alias directory entry (the main module name at the
 time the alias was created) will be displayed.

 If the module is not an alias (unless NOALIASINFO is specified or
 CONTROL NOALIASINFO is in effect), the name of any corresponding
 alias members and any apparent aliases will be displayed.

 The ATTRIB subcommand has a single-line output format that is
 available for load modules; to use this format, enter SHORT as an
 ATTRIB keyword.  Note: if this format message is requested, many
 standard module checks are not performed and an incorrectly
 created or modified load module will not be detected.

 Caution: this subcommand modifies the data set if any attribute
 modifications are specified.  To ensure data set integrity, you
 should allocate the data set as OLD or be aware of the data set
 update protection provided by the -PDS86- command for SHR
 allocations (for details, enter HELP UPDATE).

 ***SOURCE*** If the data set is not a load library ***SOURCE***  --
 ISPF statistics are displayed for members last saved by ISPF edit,
 SSI information can be added or changed before being displayed and
 alias information is displayed as follows:
   A.  If the member is an alias, it can be converted to a main
       member with the UNALIAS keyword.
   B.  If the member is an alias, an -A is displayed after the member
       name; unless NOALIASINFO is specified or CONTROL NOALIASINFO
       is in effect, the name of any corresponding main member will
       also be displayed.
   C.  If the member is not an alias and if ALIASINFO is specified,
       the name of any corresponding alias members and any apparent
       aliases will be displayed.
   D.  If the member has ISPF statistics or SSI information, it can
       be deleted by using the NONE keyword.
   E.  If the member does not have ISPF statistics, they may be added
       by using the ADDSTATS keyword.  ADDSTATS with the EXTEND keyword
       will add extended ISPF statistics (supported in z/OS 1.11).
   F.  If the member has directory information in ISPF format, the
       keywords VER, MOD, ID/USERID, CREATED, MODIFIED/LAST, TIME,
       and SECS/SS can be specified to modify ISPF statistics.
   G.  If the LONG operand is specified, ISPF size statistics will be
       displayed in 99,999,999 format.
   SYNTAX -
     ATTRIB  member  AMODE24/AMODE31/AMODE64/AMODEANY
                     AUTH/NOAUTH  or  APF/NOAPF
                     DC/NODC
                     EDIT/NOEDIT
                     ENTRY(externalname)
                     EXEC/NOEXEC
                     LOADONLY/NOLOADONLY
                     PAGE/NOPAGE
                     REFR/NOREFR
                     RENT/NORENT
                     REUS/NOREUS
                     RLDFIX/NORLDFIX
                     RMODE24/RMODEANY
                     SSI(hxdata)/NOSSI
                     UNALIAS
                     NONE / ADDSTATS
                     EXTEND
                     VER(nn) / MOD(mm) / ID(who) / USERID(who)
                       CREATED(mm/dd/yy) MODIFIED(mm/dd/yy)
                       LAST(mm/dd/yy) TIME(hhmm) SECS(ss)
                     LKEDDATE/NOLKEDDATE
                     ALIASINFO/NOALIASINFO
                     SHORT
                     LONG

 ALIASES  - A, AT, ATT, ATTR, ATTRI, ATTRIB
 DEFAULTS - for load or alias members:  member,   LKEDDATE,   ALIASINFO
            for other members:          member, NOLKEDDATE, NOALIASINFO
 REQUIRED - none.
   OPERANDS -
  member   - optional, specifies the name of the member(s) whose
             attributes are to be displayed or the name of the load
             module(s) whose attributes are to be updated.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

  The following attributes can be modified:
  AMODE24     -  change addressing mode to 24
  AMODE31     -  change addressing mode to 31
  AMODE64     -  change addressing mode to 64
  AMODEANY    -  change addressing mode to ANY
  AUTH        -  authorize the module with APF
  NOAUTH      -  remove APF authorization from the module
  APF         -  authorize the module with APF
  NOAPF       -  remove APF authorization from the module
  DC          -  indicate that the module is downward compatible
  NODC        -  indicate that the module is not downward compatible
  EDIT        -  allow linkage editing of the module
  NOEDIT      -  disallow linkage editing of the module
  ENTRY(name) -  change the entry point address to the external
                 symbol specified
  EXEC        -  allow execution of the module
  NOEXEC      -  disallow execution of the module
  LOADONLY    -  allow module use only by a LOAD MACRO
  NOLOADONLY  -  allow module use by any means
  PAGE        -  require page alignment for the module
  NOPAGE      -  allow any alignment for the module
  REFR        -  add the refreshable attribute
  NOREFR      -  remove the refreshable attribute
  RENT        -  add the reentrant (and reusable) attribute
  NORENT      -  remove the reentrant attribute
  REUS        -  add the reusable attribute
  NOREUS      -  remove the reusable attribute
  RLDFIX      -  change the directory's RLD/CONTROL count to match
                 the value in the first RLD entry for modules linked
                 since OS/VS
  NORLDFIX    -  do not modify the directory's RLD/CONTROL count
  RMODE24     -  change residence mode to 24
  RMODEANY    -  change residence mode to ANY
  SSI(hxdata) -  add or change the SSI information for the member.  If
                 less than 8 digits are entered, leading digits on the
                 left will be assumed.
  NOSSI       -  remove any SSI information for the member
  UNALIAS     -  requests that an alias directory entry be converted
                 to a main entry.  Warning: if a main entry already
                 exists for a converted alias entry, you will have
                 an "apparent alias"; this situation can be detected
                 by a VERIFY subcommand or ATTRIB with the ALIASINFO
                 keyword.
  NONE        -  for source members, NONE may be used to remove
                 ISPF statistics or any SSI information; otherwise,
                 NONE is equivalent to entering: AMODE24, NOAUTH,
                 NODC, EDIT, EXEC, NOLOADONLY, NOPAGE, NOREFR,
                 NORENT, NOREUS, NOSSI and RMODE24.

                 Note:  NONE takes effect first; any additional
                 parameters override corresponding NONE parameters.

  ADDSTATS    -  for source members, add ISPF statistics
  EXTEND      -  add extended ISPF statistics (used with ADDSTATS)
  VER(nn)     -  for members with ISPF statistics, may be used to
                 to change the ISPF version number.
  MOD(mm)     -  for members with ISPF statistics, may be used to
                 to change the ISPF modification level.
  ID(who)     -  for members with ISPF statistics, may be used to
                 to change the last modifier's userid.
  USERID(who) -  for members with ISPF statistics, may be used to
                 to change the last modifier's userid.
  CREATED(..) -  for members with ISPF statistics, may be used to
                 to change the created date.
  MODIFIED(..)-  for members with ISPF statistics, may be used to
                 to change the modified date.
  LAST(..)    -  for members with ISPF statistics, may be used to
                 to change the modified date.
  TIME(hhmm)  -  for members with ISPF statistics, may be used to
                 to change the modified time.
  SECS(ss)    -  for members with ISPF statistics, may be used to
                 to change the modified time.  SS is an alias for
                 SECS.
  LKEDDATE    -  provide the date of the last linkage edit
  NOLKEDDATE  -  do not provide the date of the last linkage edit
  ALIASINFO   -  provide the names of any alias or main members
  NOALIASINFO -  do not provide the names of any alias or main members
  SHORT       -  display single-line output format for load modules
  LONG        -  display ISPF size statistics in 99,999,999 format
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ALIAS
K* AL
K* ALI
K* ALIA

    Example -     ALIAS mainmem aliasmem

  The ALIAS subcommand assigns an alias name to a member.

  If the data set is not a load library, the alias name may be used
  as an alternate name for the identified member.

  If the data set is a load library, then if the alias name is an
  imbedded external name within the load module, that external name
  will be used as the alias entry point; otherwise, the entry point
  of the named member will be used as the alias entry point.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the -PDS86- command for
  SHR allocations (for details, enter HELP UPDATE).
   SYNTAX -
     ALIAS  memname aliasname

 ALIASES  - AL, ALI, ALIA, ALIAS
 DEFAULTS - none.
 REQUIRED - memname, aliasname
   OPERANDS -
  memname   - specifies the member to which an alias is to be assigned.

  aliasname - specifies the alias name to be assigned.  Note that this
              alias name becomes the -PDS86- default member name.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=AMBLIST
K* AMBLI
K* AMBL
K* AMB
K* AM

    Example -     AMBLIST mema:memb

 The AMBLIST subcommand invokes the IBM AMBLIST program to list a
 load module map, cross-reference map, and CSECT identification
 records (IDR).  Optionally, a list of the control and text records
 with the ESD and RLD records can be displayed.

 The system's pasta maker. . .  take a lump of dough, send it
 through AMBLIST, and you come out with beautiful spaghetti!

   SYNTAX -
     AMBLIST  memgroup
                   XREF/BOTH

 ALIASES  - AM, AMB, AMBL, AMBLI, AMBLIS, AMBLIST
 DEFAULTS - XREF
 REQUIRED - memgroup.
   OPERANDS -
  memgroup      - specifies the name of the load module(s)
                  for which a module map, cross-reference map,
                  and CSECT IDR list is to be produced.

                  Default member names, member lists, member name
                  ranges and member name patterns are allowed; for
                  more information, enter HELP GROUP.

  XREF       - specifies that a module map and a cross-reference
               map be displayed.
  BOTH       - show MODLIST (Control/Text/ESD/RLD records)
               information in addition to XREF maps.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=BLK3380
K* BLK338

    Example -     BLK3380 133

  The BLK3380 command computes an optimal blocksize for a data set
  to be placed on a 3380 disk pack.  The program output includes
  the following reports:
     1.  A summary blocksize report for the given lrecl and key
         length which includes the recommended blocksize to use.
     2.  A recommended data set space allocation.
     3.  A optional track capacity report for the provided key length.

  The recommended blocksize value is for data sets in which the
  predominant access is sequential; for data sets where random
  access time is critical or the usual access is random, a small
  blocksize (500-2000 bytes) should probably be used.

  The recommended blocksize will usually tend to be near a half-track
  figure as this is considered to be the most efficient in terms of
  the trade-offs among buffer size, secondary storage requirements,
  channel use, number of input/outputs and overall processing time.
  This figure is only a general guide; for maximal efficiency
  considering other factors, study the generated blocksize summary
  report or a track capacity report.

  The program's recommendations assume a fairly large amount of data
  is to be stored; data sets which occupy only a few tracks should
  probably be placed in partitioned data sets.  In cases where this
  is not feasible, the use of a small blocksize (2400 - 4000 bytes)
  may be a good alternative practice.
   SYNTAX -
     BLK3380  lrecl  KEYLENGTH(keylen)
                       TRACKCAP / NOTRACKCAP
                       BLKSIZE(blklen)
                       NUMBER(recnum) / RECORDS(recnum)
                       VERIFY

 ALIASES  - BLK338, BLK3380
 DEFAULTS - KEYLENGTH(0), NOTRACKCAP,
            BLKSIZE(RECOMMENDED VALUE), NUMBER(100000)

 REQUIRED - lrecl
   OPERANDS -
 'lrecl'    - the logical record length of the data which is to be
              placed in the data set.
  KEYLENGTH(keylen)
            - the key length, in bytes, of the keys to be used in the
              data set.  the maximum legal key length is 255.
  TRACKCAP
            - specifies a track capacity report is to be provided for
              the device using the specified (or default) key length.

              Note that a track capacity report is also provided if
              notrackcap is not specified and lrecl exceeds the maximum
              blocksize for a track or BLKSIZE exceeds the maximum
              blocksize for a track.
  NOTRACKCAP
            - specifies that a track capacity report is not desired.
  BLKSIZE(blklen)
            - the blocksize to use for the allocation computation;
              if blksize is not entered (or zero is entered), the
              program's recommended blocksize will be used.
  NUMBER(recnum)
            - number of logical records that will be in the data set.
  RECORDS(recnum)
            - number of logical records that will be in the data set.
  VERIFY
            - specifies that the MVS "TRKCALC" routine is to be used to
              verify track capacity calculations.  if verify is used,
              the number of calls to "TRKCALC" to determine a track
              capacity table is output at the end of the output.

              Note: with verify on, a minimum of 34 calls is needed to
              determine a track capacity table; otherwise a minimum of
              17 calls is needed to determine the track capacity table.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=BLK3390
K* BLK339

    Example -     BLK3390 121

  The BLK3390 command computes an optimal blocksize for a data set
  to be placed on a 3390 disk pack.  The program output includes
  the following reports:
     1.  A summary blocksize report for the given lrecl and key
         length which includes the recommended blocksize to use.
     2.  A recommended data set space allocation.
     3.  A optional track capacity report for the provided key length.

  The recommended blocksize value is for data sets in which the
  predominant access is sequential; for data sets where random
  access time is critical or the usual access is random, a small
  blocksize (500-2000 bytes) should probably be used.

  The recommended blocksize will usually tend to be near a half-track
  figure as this is considered to be the most efficient in terms of
  the trade-offs among buffer size, secondary storage requirements,
  channel use, number of input/outputs and overall processing time.
  This figure is only a general guide; for maximal efficiency
  considering other factors, study the generated blocksize summary
  report or a track capacity report.

  The program's recommendations assume a fairly large amount of data
  is to be stored; data sets which occupy only a few tracks should
  probably be placed in partitioned data sets.  In cases where this
  is not feasible, the use of a small blocksize (2400 - 4000 bytes)
  may be a good alternative practice.
   SYNTAX -
     BLK3390  lrecl  KEYLENGTH(keylen)
                       TRACKCAP / NOTRACKCAP
                       BLKSIZE(blklen)
                       NUMBER(recnum) / RECORDS(recnum)
                       VERIFY

 ALIASES  - BLK339, BLK3390
 DEFAULTS - KEYLENGTH(0), NOTRACKCAP,
            BLKSIZE(RECOMMENDED VALUE), NUMBER(100000)

 REQUIRED - lrecl
   OPERANDS -
 'lrecl'    - the logical record length of the data which is to be
              placed in the data set.
  KEYLENGTH(keylen)
            - the key length, in bytes, of the keys to be used in the
              data set.  the maximum legal key length is 255.
  TRACKCAP
            - specifies a track capacity report is to be provided for
              the device using the specified (or default) key length.

              Note that a track capacity report is also provided if
              notrackcap is not specified and lrecl exceeds the maximum
              blocksize for a track or BLKSIZE exceeds the maximum
              blocksize for a track.
  NOTRACKCAP
            - specifies that a track capacity report is not desired.
  BLKSIZE(blklen)
            - the blocksize to use for the allocation computation;
              if blksize is not entered (or zero is entered), the
              program's recommended blocksize will be used.
  NUMBER(recnum)
            - number of logical records that will be in the data set.
  RECORDS(recnum)
            - number of logical records that will be in the data set.
  VERIFY
            - specifies that the MVS "TRKCALC" routine is to be used to
              verify track capacity calculations.  if verify is used,
              the number of calls to "TRKCALC" to determine a track
              capacity table is output at the end of the output.

              Note: with verify on, a minimum of 34 calls is needed to
              determine a track capacity table; otherwise a minimum of
              17 calls is needed to determine the track capacity table.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=BLK9345
K* BLK9
K* BLK93
K* BLK934

    Example -     BLK9345 80

  The BLK9345 command computes an optimal blocksize for a data set
  to be placed on a 9345 disk pack.  The program output includes
  the following reports:
     1.  A summary blocksize report for the given lrecl and key
         length which includes the recommended blocksize to use.
     2.  A recommended data set space allocation.
     3.  A optional track capacity report for the provided key length.

  The recommended blocksize value is for data sets in which the
  predominant access is sequential; for data sets where random
  access time is critical or the usual access is random, a small
  blocksize (500-2000 bytes) should probably be used.

  The recommended blocksize will usually tend to be near a half-track
  figure as this is considered to be the most efficient in terms of
  the trade-offs among buffer size, secondary storage requirements,
  channel use, number of input/outputs and overall processing time.
  This figure is only a general guide; for maximal efficiency
  considering other factors, study the generated blocksize summary
  report or a track capacity report.

  The program's recommendations assume a fairly large amount of data
  is to be stored; data sets which occupy only a few tracks should
  probably be placed in partitioned data sets.  In cases where this
  is not feasible, the use of a small blocksize (2400 - 4000 bytes)
  may be a good alternative practice.
   SYNTAX -
     BLK9345  lrecl  KEYLENGTH(keylen)
                       TRACKCAP / NOTRACKCAP
                       BLKSIZE(blklen)
                       NUMBER(recnum) / RECORDS(recnum)
                       VERIFY

 ALIASES  - BLK9, BLK93, BLK934, BLK9345
 DEFAULTS - KEYLENGTH(0), NOTRACKCAP,
            BLKSIZE(RECOMMENDED VALUE), NUMBER(100000)

 REQUIRED - lrecl
   OPERANDS -
 'lrecl'    - the logical record length of the data which is to be
              placed in the data set.
  KEYLENGTH(keylen)
            - the key length, in bytes, of the keys to be used in the
              data set.  the maximum legal key length is 255.
  TRACKCAP
            - specifies a track capacity report is to be provided for
              the device using the specified (or default) key length.

              Note that a track capacity report is also provided if
              notrackcap is not specified and lrecl exceeds the maximum
              blocksize for a track or BLKSIZE exceeds the maximum
              blocksize for a track.
  NOTRACKCAP
            - specifies that a track capacity report is not desired.
  BLKSIZE(blklen)
            - the blocksize to use for the allocation computation;
              if blksize is not entered (or zero is entered), the
              program's recommended blocksize will be used.
  NUMBER(recnum)
            - number of logical records that will be in the data set.
  RECORDS(recnum)
            - number of logical records that will be in the data set.
  VERIFY
            - specifies that the MVS "TRKCALC" routine is to be used to
              verify track capacity calculations.  if verify is used,
              the number of calls to "TRKCALC" to determine a track
              capacity table is output at the end of the output.

              Note: with verify on, a minimum of 34 calls is needed to
              determine a track capacity table; otherwise a minimum of
              17 calls is needed to determine the track capacity table.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=BROWSE
K* BROWS
K* BROW
K* BRO
K* BR
K* B

    Example -     BROWSE mema:memb

  The BROWSE subcommand enters ISPF browse for a member (for
  additional information on the relationship of -PDS86- and
  BROWSE, enter HELP DIALOG).
   SYNTAX -
     BROWSE  member

 ALIASES  - B, BR, BRO, BROW, BROWS, BROWSE
 DEFAULTS - member
 REQUIRED - none.
   OPERANDS -
  member    - optional, specifies the name of member(s) to be browsed.

              Default member names, member lists, member name
              ranges and member name patterns are allowed; for
              more information, enter HELP GROUP.

              Note - if : is entered for the member name position, ISPF
              will be requested to provide a member selection screen.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=CHANGE
K* C
K* CH
K* CHA
K* CHAN
K* CHANG
K* PDS
K* PD
K* PDS8
K* PDS86

    Example -     CHANGE lib.cntl old

 The CHANGE subcommand switches -PDS86- to a different data set.
   SYNTAX -
     CHANGE  FILE(ddname) NUMBER(numb) /
             dsn/*  VOLUME(name) VOLSET(name)  SHR/OLD

 ALIASES  - PD, PDS, C, CH, CHA, CHAN, CHANG, CHANGE
 DEFAULTS - SHR or previously used data set name and volume
            if no operands are entered.
 REQUIRED - none.
   OPERANDS -
  dsn          - specifies the data set name.  If the data set name is
                 not entered in quotes ('), your TSO PREFIX will be
                 appended to the start of the entered data set name.

                 If a data set name of * is entered, the previous data
                 set name is assumed (you are switched from the current
                 data set to the previous data set with the * operand;
                 another CHANGE * will switch data sets back again).

                 Note that if your system has password security, you
                 may enter your data set password after the data set
                 name and a slash (/).  The syntax is: dsn/password

  FILE(ddname) - specifies the data set is already allocated with the
                 provided ddname.  Note that only disk data sets are
                 supported.  If the FILE keyword is used, dsname,
                 SHR/OLD, VOLSET and VOLUME should not also be used.

                 However, if the data set is concatenated, the SHR
                 or OLD keyword may be used since -PDS86- will
                 reallocate the data set.
  NUMBER(numb) - for use with FILE only, numb defaults to 1; specifies
                 the concatenation number desired for the ddname
                 identified.  If numb is larger than the number of
                 concatenated data sets, the last data set in the
                 sequence will be used.
  VOLUME(name) - specifies the volume name on which the data set
                 resides.  If a volume name is entered, SYSALLDA is
                 assumed as the unit name; otherwise, the unit name
                 from the catalog is used.

                 Note:  this parameter should be used if the data set
                 is not cataloged or if the catalog entry is not to be
                 used.  To use the catalog for a CHANGE subcommand
                 even if VOLSET is in effect, you may enter VOLUME(*).
  VOLSET(name) - specifies a default volume name for data set
                 references.  For example, if VOLSET(NEWRES) were
                 entered, subsequent CHANGE subcommands with a data
                 set name and no VOLUME parameter will assume a
                 VOLUME(NEWRES) parameter.

                 Note:  this parameter should be used if a default
                 volume is desired.  To nullify the effect of VOLSET,
                 enter VOLSET(*) on a subsequent CHANGE subcommand.

  SHR          - specifies that the data set is to be allocated with
                 a disposition of SHR.
  OLD          - specifies that the data set is to be allocated with
                 a disposition of OLD to prevent the use of this data
                 set by other users.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=COBANAL
K* COBANA
K* COBAN
K* COBA
K* COB
K* ANALYZE

    Example -     COBANAL mema:memb

 The COBANAL subcommand invokes the COBANAL load module analyzer
 program (CBT 321) to display an analysis of a COBOL load module.

   SYNTAX -
     COBANAL  memgroup
                   LIST/NOLIST
                   SUMMARY/NOSUMMARY

 ALIASES  - COB, COBA, COBAN, COBANA, COBANAL
 DEFAULTS - SUMMARY, NOLIST
 REQUIRED - memgroup.
   OPERANDS -
  memgroup      - specifies the name of the COBOL load module(s)
                  for which a load module analysis is to be produced.

                  Default member names, member lists, member name
                  ranges and member name patterns are allowed; for
                  more information, enter HELP GROUP.

  LIST       - specifies that all COBANAL detail messages are to
               be displayed.
  NOLIST     - specifies that no COBANAL detail messages are to
               be displayed.
  SUMMARY    - specifies that COBANAL summary messages are to
               be displayed.
  NOSUMMARY  - specifies that no COBANAL summary messages are to
               be displayed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=COMPARE
K* CO
K* COM
K* COMP
K* COMPA
K* COMPAR

    Example -     COMPARE oldmem other.lib(newmem)

  The COMPARE subcommand displays differences between two members.
  The TSO COMPARE command, SuperC or the COMPAREX (R) program is used
  based on the value of global variable &CCAR:

    COMPARE$ - Yale TSO COMPARE program
    COMPAREC - ISPF SuperC compare program
    COMPAREW - COMPAREX compare program

   SYNTAX -
     COMPARE  membero membern  FULL           / ASM
                               IEBCOMPR       / ZIEBCOMPR
                               SYSOUT / PRINT / NOPRINT / OUTFILE(name)
                               OVOL(volname)  / NVOL(volume)

            Note: the above parameters are for TSO COMPARE.

     COMPARE  membero membern  BYTE   / FILE  / WORD / LINE
                               DELTA  / OVSUM / CHNG / LONG
                               OVOL(volname)
                               NVOL(volume)

            Note: the above parameters are for SuperC.

 ALIASES  - CO, COM, COMP, COMPA, COMPAR, COMPARE
 DEFAULTS - DELTA
 REQUIRED - membero, membern
   OPERANDS -
  membero       - the base member which is to be compared with membern.

                  Note: membero may be a data set and member name if
                  a member from a different data set is to be used.
                  And membero may be a data set name if sequential.

  membern       - the new member which is to be compared with membero.

                  Note: membern may be a data set and member name if
                  a member from a different data set is to be used.
                  And membern may be a data set name if sequential.

                  If the new data set is a partitioned data set and
                  no member name is coded, the base member name will
                  be used; this can be used to compare two different
                  levels of the same module.

  operands      - optional, may include any desired COMPARE operands.

                  Note: The first operand after the file/member
                  specification in a SuperC COMPARE can be
                  BYTE, FILE, or WORD to change the compare type
                  (from the LINE default).

                  For example,
                    compare member1 member2 word long
                    compare 'file1' 'file2' file
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=COMPRESS
K* COMPR
K* COMPRE
K* COMPRES

    Example -     COMPRESS summary

 The COMPRESS subcommand invokes IEBCOPY (or a compatible program)
 to compress a partitioned data set.

 Note: a COMPRESS operation should not be interrupted with an attention
 since data sets are updated in-place.

 Caution: this subcommand modifies the output data set.  To ensure
 data set integrity, you should allocate the output data set as OLD
 or NEW, or be aware of the data set update protection provided by
 the -PDS86- command for SHR allocations (for details, enter
 HELP UPDATE).
   SYNTAX -
     COMPRESS  SUMMARY / LIST / NOLIST

 ALIASES  - COMPR, COMPRE, COMPRES, COMPRESS
 DEFAULTS - SUMMARY
 REQUIRED - none.
   OPERANDS -
  SUMMARY  - specifies that only compress summary and error messages
             are to be displayed.
  LIST     - specifies that all compress messages are to be displayed.
  NOLIST   - specifies that no compress messages are to be displayed.
  SHR      - allows compressing data sets which are in use.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=CONDEND
K* COND
K* CONDE
K* CONDEN

    Example -     CONDEND ERRORS

   The CONDEND subcommand terminates -PDS86- if any subcommand
   has one or more warning or error level messages.  After -PDS86- is
   terminated by CONDEND, the return code will be 4 for warning
   messages (PDS400W-PDS599W) and 8 for error messages (PDS600E-
   PDS999E).

   This subcommand is normally used to check that a critical
   subcommand in background is working as expected.  Normally, -PDS86-
   will continue to execute after program warning or error
   messages are received.  With this facility, you can terminate a
   -PDS86- process when it is not functioning properly.

   Note: Use TSO program IKJEFT1A in background to terminate the
         jobstep after a non-zero return code is received.

   CONDEND in PDS works differently than CONDEND in StarTool.

   When CONDEND is issued in a PDS batch job or CLIST, it
   will remain in effect until it is triggered by a WARNING or
   ERROR message or until CONDEND OFF is issued.

   CONDEND in StarTool will only terminate the previous subcommand
   if it had one or more warning or error level messages.

   The subcommand groups below are equivalent.

   <PDS>
   condend errors
   copy pdshelp 'ad.help2'
   condend off
   </PDS>

   <Startool>
   copy pdshelp 'ad.help2'
   condend errors
   </Startool>
   SYNTAX -
     CONDEND  WARNINGS/ERRORS/OFF

 ALIASES  - COND, CONDE, CONDEN, CONDEND
 DEFAULTS - WARNINGS
 REQUIRED - none
   OPERANDS -
  WARNINGS - exit if any message issued by a subcommand is
             in the range PDS400W through PDS999E (warning or error
             messages) and set the return code to 4 (warning) or
             8 (error).
  ERRORS   - exit if any message issued by a subcommand is
             in the range PDS600E through PDS999E (error messages)
             and set the return code to 8 (error).
  OFF      - do not exit if a subcommand has one or more
             warning or error level messages.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=CONTROL
K* CON
K* CONT
K* CONTR
K* CONTRO

    Example -     CONTROL dsname(lib.cntl(pdsdata)) old

 The CONTROL subcommand specifies global and immediate processing
 options.

 Most CONTROL subcommand operands (such as ALIASINFO and SINGLE) are
 global in that they remain in effect until reset by another CONTROL
 subcommand.

 The other operands (such as TESTABEND and IOSTATS) are immediate and
 take effect for only a single CONTROL subcommand.

 CONTROL does not utilize ISPF services; however, when it is first
 invoked with either a SYSOUT or DSNAME keyword, -PDS86- attempts
 to establish an ISPF environment so that subsequent subcommands can
 utilize ISPF services.

 Note that the input buffering type (SINGLE, DOUBLE or MULTIPLE) is
 reset for each data set allocated according to the device type on
 which the data set resides.  MULTIPLE buffering is used for device
 types which support the READ MULTIPLE CCW and DOUBLE is used
 otherwise.
   SYNTAX -
     CONTROL  ALIASINFO  / NOALIASINFO
              LKEDDATE   / NOLKEDDATE
              PROMPT     / NOPROMPT
              RECOVER    / NORECOVER
              TRANSLATOR / NOTRANSLATOR
              SINGLE     / DOUBLE      /  MULTIPLE
              SYSOUT(c) / NOSYSOUT / FORM(ffff)/NOFORM/DEST(dst)/NODEST
              DSN(dsn)  / NODSN    / OLD/MOD/NEW/SHR
              IOSTATS   / TESTABEND   / TESTCPULOOP  /
                          TESTMSGS    / TESTOUTLOOP  / TESTREAD  /
              GLOBALMODS / ALLGLOBALS   /
              PDSMAIN    / MODS         / GEO       / LISTENV    /
                           COMPILER     / TSO       / ISPLOG     /
                           MBRVAL       / MEMLIST   / TOGGLES

 ALIASES  - CON, CONT, CONTR, CONTRO, CONTROL
 DEFAULTS - Initially in TSO:
            ALIASINFO, LKEDDATE, PROMPT, RECOVER, NOTRANS, MULTIPLE
          - Initially in the background:
            ALIASINFO, LKEDDATE, PROMPT, NORECOVER, NOTRANS, MULTIPLE
 REQUIRED - none.
   OPERANDS -
  ALIASINFO     - specifies that a MAP subcommand with no limiting
                  operands is to provide alias information for alias
                  members and that an ATTRIB subcommand is to provide
                  alias information.
  NOALIASINFO   - specifies that ATTRIB and MAP subcommands need not
                  provide alias or main member identification.
  LKEDDATE      - specifies that an ATTRIB subcommand should provide
                  the date of the linkage edit.
  NOLKEDDATE    - specifies that an ATTRIB subcommand should not
                  provide the date of the linkage edit.
  PROMPT        - specifies that YES/NO decision prompting should be
                  solicited from the terminal operator unless -PDS86-
                  is executing in the background, from CLIST input or
                  from a storage stack.

                  YES/NO prompting is normally performed at the
                  following decision points:
                     1.  before renaming a group of members
                     2.  before deleting a default member
                     3.  before deleting a list or a group of members
                     4.  before restoring a member found in scan mode
                     5.  before modifying a data set with FIXPDS
                     6.  before submitting a group of members
                     7.  before reproducing a group of members
  NOPROMPT      - specifies that YES/NO decision prompting should be
                  circumvented and that a YES response should be
                  assumed in each case.

                  YES/NO prompting is normally performed at the
                  following decision points:
                     1.  before renaming a group of members
                     2.  before deleting a default member
                     3.  before deleting a list or a group of members
                     4.  before restoring a member found in scan mode
                     5.  before modifying a data set with FIXPDS
                     6.  before submitting a group of members
                     7.  before reproducing a group of members
  RECOVER       - specifies that STAE recovery is to be attempted
                  after a program ABEND.
  NORECOVER     - specifies that STAE recovery is not to be attempted
                  after a program ABEND.  Note that subcommands which
                  specifically test for ABEND conditions (such as IF
                  with LOADERR or VERIFY with LOAD) should recover from
                  ABEND situations regardless of RECOVER/NORECOVER.
  TRANSLATOR    - specifies that HISTORY subcommands should output
                  TRANSLATOR information.
  NOTRANSLATOR  - specifies that HISTORY subcommands should not output
                  TRANSLATOR information.
  SYSOUT(c)     - specifies that a session log output is to be started
                  to the SYSOUT class specified.  The SYSOUT output
                  will continue until the end of the program or until
                  CONTROL SYSOUT/NOSYSOUT/DSNAME/NODSNAME is entered.

                  Note that DEST and FORM keywords can be entered as
                  additional SYSOUT specifications.
  NOSYSOUT      - specifies that any SYSOUT or DSNAME session log
                  output is to be terminated.
  DEST(dst)     - specifies the destination that is to receive SYSOUT
                  data (used only at SYSOUT allocation).
  NODEST        - specifies that the default destination is to be used
                  for routing SYSOUT data.
  FORM(ffff)    - specifies the forms name to be used for SYSOUT
                  (used only at SYSOUT allocation).
  NOFORM        - specifies that the default forms name is to be used
                  for SYSOUT data.
  DSNAME(dsn)   - specifies that a session log output is to be started
                  to the named data set.  The DSNAME output will
                  continue until the end of the program or until
                  CONTROL SYSOUT/NOSYSOUT/DSNAME/NODSNAME is entered.

                  Notes:
                    1.  A member name must be entered for session log
                        output to a partitioned data set.
                    2.  A data set password may be entered.
                    3.  A data set disposition (OLD/MOD/SHR/NEW)
                        may also be entered.
  NODSNAME      - specifies that any SYSOUT or DSNAME session log
                  output is to be terminated.
  OLD           - specifies that the session log data set should not
                  be shared with other users.
  MOD           - specifies that the session log output is to be added
                  to the end of an existing data set.  If the data set
                  does not exist, it will be created with
                  DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
  SHR           - specifies that the session log data set should be
                  shared with other users.  Note: since the data set
                  is modified, the use of this parameter should be
                  minimized.
  NEW           - specifies that the session log data set should be
                  created with DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
  SINGLE        - specifies that a single input buffer is to be used.
  DOUBLE        - specifies that two buffers are to be used wherever
                  possible for input operations.
  MULTIPLE      - specifies that an entire disk track is to be read
                  wherever possible for input operations.
  IOSTATS       - specifies that statistics relating to input
                  buffering be displayed.  Note: only non-zero
                  quantities are displayed and statistics are set
                  to zero after each display.

                  nn,nnn INPUT ROUTINE ENTRIES
                  nn,nnn TTR CHANGES
                  nn,nnn LOGICAL INPUTS PERFORMED
                  nn,nnn PHYSICAL TRACKS READ
                  nn,nnn PDSE DIRECTORY BLOCKS READ

  TESTABEND     - specifies that a S0C1 ABEND is to be provided for
                  program testing.
  TESTCPULOOP   - specifies that a program branch loop is to be
                  entered for program testing.
  TESTMSGS      - specifies that the program should issue all numbered
                  messages for program testing.
  TESTOUTLOOP   - specifies that a program output message loop is to be
                  entered for program testing.
  TESTREAD      - specifies that the program should test its input EXCP
                  routine using an initial TTR of 000001 for each of
                  the following cases:

          SINGLE: Read single (each read obtains one physical block).
                  The return code should be 00 and NEXT TTR ADDRESS
                  should be 000002 if sufficient data is available.

          DOUBLE: Read double (each read obtains two physical blocks).
                  The return code should be 00 and NEXT TTR ADDRESS
                  should be 000003 if sufficient data is available.

        MULTIPLE: Read multiple (each read obtains an entire track).
                  If the disk unit supports the READ MULTIPLE CCW, the
                  return code should be 00 and NEXT TTR ADDRESS
                  should be 000101 if sufficient data is available.

                  If the disk unit does not support the READ MULTIPLE
                  CCW, a PDS892E message should be received, the return
                  code should be 00 and NEXT TTR ADDRESS should be
                  000003 (double buffering is used).
  GLOBALMODS    - specifies that program messages should be output for
                  each global variable from the #PDSGEN members which
                  differs from the default value for that variable.
                  The message will include the variable name, the value
                  as set before the assembly, the default value for the
                  variable and a short description of the variable.
  ALLGLOBALS    - specifies that program messages should be output for
                  each global variable from the #PDSGEN members.
                  The message will include the variable name, the value
                  as set before the assembly, the default value for the
                  variable and a short description of the variable.
                  DEFAULTS is an alias for ALLGLOBALS.
  PDSMAIN       - specifies that the date/time stamp of the PDSMAIN
                  assembly be displayed.
  MODS          - specifies that the most recent modifications to the
                  PDS command processor be displayed.
  GEO           - specifies that the DASD geometry chart be displayed
                  for CKD devices.  DASD is an alias for GEO.
  LISTENV       - specifies that information on the software and
                  hardware environment be displayed.  MVS is an alias
                  for LISTENV.
  COMPILER      - specifies that information on IBM compiler products
                  be displayed.  IBM is an alias for COMPILER.
  TSO           - specifies that a sorted list of active TSO users
                  be displayed.  TSU is an alias for TSO.
  ISPLOG        - toggles whether all subcommands are written to
                  ISPLOG.  If toggle is OFF (default), NLO_ global
                  variables will determine what subcommands get
                  logged.
  MBRVAL        - toggles whether member name validation should be
                  performed for ISPF EDIT/BROWSE/VIEW.  If toggle
                  is ON (default), then member names can not have
                  imbedded periods or begin with a numeric character.
  MEMLIST       - toggles whether RESET should be added to all
                  MEMLIST subcommands.  If toggle is ON, then the
                  MEMLIST table is cleared before adding entries.
  TOGGLES       - the state of the previous three toggles are
                  displayed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=COPY
K* COP

    Example -     COPY mem1:mem2 other.dataset new tra spa(5,5) dir(20)

  The COPY subcommand builds copy control statements and invokes a
  copy program to selectively copy members to another data set.

  Note: members may not be copied back into the input data set;
  however, you can perform this function with a REPRO subcommand
  using the TO or AS keyword.

  In most instances, IEBCOPY is used to perform the actual data copy
  operation; however, in the following cases, IEBGENER is used
  instead of IEBCOPY:
    1. the input data set is sequential.
    2. a single member is copied to a sequential output data set.

  In addition, if the output data set is sequential and more than
  one input member is selected for copy, IEBCOPY will create an
  output data set in IEBCOPY unload format.

  If the TO (or the equivalent AS) keyword is used, each member is
  renamed in the copy in a generic fashion.  For example, if TO(X12)
  is entered, each resulting member name is formed by placing X12
  over the first three characters of the original member name.  An
  exception to this rule is made when only a single member is to be
  copied and its aliases are not also requested; in this case, the
  member name is taken directly from the TO keyword.

  Normally an IEBCOPY COPY operation is requested; however, if the
  data set contains load modules (RECFM is U) and the input and output
  blocksizes differ, a COPYMOD operation will be requested with a
  MAXBLK operand set to the output data set blocksize.  A COPYMOD
  operation may be explicitly requested for load module libraries by
  specifying MAXBLK and the maximum member blocksize.

  If the GENS operand is specified for PDSE member generation datasets,
  then a COPYGROUP operation will be requested with a GENS=ALL operand.
  All members and generations to be copied from the input PDSE data
  set are to replace any identically named members on the output
  PDSE data set.

  Caution: this subcommand modifies the output data set.  To ensure
  data set integrity, you should allocate the output data set as OLD
  or NEW, or be aware of the data set update protection provided by
  the -PDS86- command for SHR allocations (for details, enter
  HELP UPDATE).
   SYNTAX -
     COPY  memgroup  dsname / * / FILE(ddname) NUMBER(numb)
                        OLD/SHR/NEW
                                TRK/CYL  DIR(num)  SPACE(prim,sec)
                                DSNTYPE(LIBRARY/PDS) MAXGENS(num)
                        ALIAS/NOALIAS
                        AS(pname) / TO(pname)
                        CALL/NOCALL
                        EXIST/NOEXIST/EXCLUDE/NOBLDL
                        MAXBLK(num)
                        REPLACE/NOREPLACE
                        SUMMARY/LIST/NOLIST
                        VOLUME(volser)
                        GENS

 ALIASES  - COP, COPY
 DEFAULTS - SHR, NOALIAS, CALL, NOREPLACE, SUMMARY; If NEW is
            specified, TRK/CYL, DIR, SPACE, and DSNTYPE
            default to values used for the input data set.
 REQUIRED - memgroup, dsname / FILE(ddname)
   OPERANDS -
  memgroup   - specifies the name of the member(s) to be copied to
               the output data set.

               Default member names, member lists, member name
               ranges and member name patterns are allowed; for
               more information, enter HELP GROUP.

  dsname     - specifies the name of the output data set.  Standard
               TSO dsname syntax should be used.  Note that if * is
               entered in the dsname field, the previously used data
               set name (for a copy command) will be used instead.

               As an alternative to the AS or TO keywords, partial
               member names may be entered in parentheses following
               the data set name as in this example: 'the.dsn(pname)'

  FILE(name) - specifies the data set is already allocated with the
               provided ddname.  Note that only disk data sets are
               supported.  If the FILE format is used, dsname, OLD,
               SHR, NEW, TRK, CYL, DIR, SPACE, VOLUME, DSNTYPE, and
               MAXGENS keywords should not be used.

               However, if the data set is concatenated, the SHR
               or OLD keyword may be used since -PDS86- will
               reallocate the data set.
  NUMBER(nm) - for use with FILE only, nm defaults to 1; specifies
               the concatenation number desired for the ddname
               identified.  If nm is larger than the number of
               concatenated data sets, the last data set in the
               sequence will be used.
  OLD        - specifies that exclusive use of the output data set is
               to be obtained.
  SHR        - specifies that shared use of the output data set is
               sufficient; -PDS86- will provide output data set
               protection as documented under HELP UPDATE.
  NEW        - specifies that the output data set is to be created.
               When NEW is specified, TRK/CYL, DIR, SPACE, DSNTYPE,
               and MAXGENS keywords may also be specified.
  TRK        - specifies that the output data set is to be allocated
               in tracks.  If TRK or CYL is not entered, the default
               is calculated as follows:
                 a.  If SPACE is entered, TRK is the default.
                 b.  Otherwise, the default is taken from the input
                     data set.
  CYL        - specifies that the output data set is to be allocated
               in cylinder units.  If TRK or CYL is not entered,
               the default is calculated as follows:
                 a.  If SPACE is entered, TRK is the default.
                 b.  Otherwise, the default is taken from the input
                     data set.
  DIR(num)   - specifies the number of directory blocks for the
               output data set.  If DIR is not entered, the default
               is taken from the input data set.
  SPACE(p,s) - specifies the primary and secondary quantities for
               the output data set in track or cylinder units.

               If TRK or CYL is not entered but SPACE is entered,
               TRK is the default allocation quantity.

               If SPACE is not entered, the default is taken from
               the input data set.
  DSNTYPE(typ)-typ is specified as LIBRARY for a PDSE or PDS for a
               partitioned data set.
  MAXGENS(num)-specifies the maximum number of PDSE member generations
               to be retained by the system.  A number from 1 to
               2 billion and subject to the SMS MAXGENS_LIMIT.

               Note that DSNTYPE(LIBRARY) is required when using
               this operand if the input PDS is not a PDSE.
  ALIAS      - specifies that any associated members (aliases, apparent
               aliases and associated main members) are also to be
               copied.
  NOALIAS    - specifies that only the member(s) specifically
               identified are to be copied.
  AS(pname)  - pname defines the name of any output members.  For
               example, with AS(new) and the input members, AA, ABBA
               and IBM04, members named NEW, NEWA and NEW04 will be
               created.  AS and TO are equivalent keywords.

               Note that if only a single member is input and the
               ALIAS keyword is not entered, the resulting member
               name is taken only from the AS or TO keyword.
  TO(pname)  - pname defines the name of any output members.  For
               example, with TO(new) and the input members, AA, ABBA
               and IBM04, members named NEW, NEWA and NEW04 will be
               created.  TO and AS are equivalent keywords.

               Note that if only a single member is input and the
               ALIAS keyword is not entered, the resulting member
               name is taken only from the AS or TO keyword.
  CALL       - specifies that the copy program is to be invoked.
  NOCALL     - specifies that the copy program is not to be invoked;
               member checking, control card generation and data set
               allocations will still be performed.

               Note: since messages are issued for existing members
               in the output data set, this keyword could be used to
               verify member existence between different data sets.
  EXIST      - specifies that only the subset of memgroup that is
               also present in the output data set is to be copied
               (normally the REPLACE keyword would also be used).
  NOEXIST    - specifies that only the subset of memgroup that is
               not present in the output data set is to be copied.
  EXCLUDE    - invert the normal copy "select" statements to
               "exclude" statements.  The use of this option also
               turns off BLDL (member existence) checking for the
               target library.
  NOBLDL     - do not perform BLDL (member existence) checking in the
               target library.  Use this parameter when performance
               of the COPY subcommand is very important and BLDL
               checking by -PDS86- for possible errors is not
               important.
  MAXBLK(nm) - for RECFM=U members only, specifies the maximum member
               blocksize and that a COPYMOD operation is required.
               Note: for load module copies, a COPYMOD operation will
               also be invoked if the input and output data set
               blocksizes differ.
  REPLACE    - specifies that members in the output data set are to
               be replaced by any copied members.
  NOREPLACE  - specifies that no members in the output data set are
               to be replaced by any copied members; warning messages
               will be issued to document the uncopied member names
               unless EXIST or NOEXIST is also entered.
  SUMMARY    - specifies that only copy summary and error messages
               are to be displayed.
  LIST       - specifies that all copy messages are to be displayed.
  NOLIST     - specifies that no copy messages are to be displayed.
  VOLUME(vo) - for NEW data sets, specifies the output volume name;
               for existing data sets, this parameter should be used
               if the output data set is not cataloged.
  GENS       - Specifies that all members and generations to be copied
               from the input PDSE data set are to replace any
               identically named members on the output PDSE data set.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=CPKMAP
K* CPKM
K* CPK
K* CP
K* TRKMAP
K* TRKM
K* TRK
K* TR

    Example -     TRKMAP mvsres

 The TRKMAP subcommand displays a track map for a volume.

 The DISKMAP (CBT 792) program or the FDR COMPAKTOR program is used
 based on the value of global variable &MAPPGM:

    DISKMAP - CBT 792 DISKMAP program
    FDRCPK  - Innovation DP COMPAKTOR program

   SYNTAX -
     TRKMAP  volume

 ALIASES  - TR, TRK, TRKM, TRKMA, TRKMAP, CP, CPK, CPKM, CPKMA, CPKMAP
 DEFAULTS - none.
 REQUIRED - none.
   OPERANDS -
  volume  -      specifies the name of the volume for which a
                 a track map is to be produced.

                 Note:  Enter "*" to use the currently allocated
                 volume.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DISASM
K* DISAS
K* DISA

    Example -     DISASM member csect

   The DISASM subcommand reconstructs assembler language instructions
   from a module; this procedure is often referred to as "decoding" or
   "disassembling" instructions.

   The output will consist of the following:

   1.  Directory information.
   2.  External symbol table.
   3.  Hex dump of CSECT.
   4.  Assembler language instructions for CSECT.

   Global variable &ASMPGM determines which disassembler will be used.

   1. DISASM  - (CBT 217) with RESOURCE/REBUILD for PDSE's (CBT 234).
   2. ASMDASM - (HLASM toolkit).

   SYNTAX -
     DISASM  member csect

 ALIASES  - DISA, DISAS, DISASM
 DEFAULTS - none
 REQUIRED - member
   OPERANDS -
  member   - specifies the member to be disassembled.

  csect    - optional, specifies the CSECT to be disassembled.

             DISASM:
             If CSECT is omitted, then the first CSECT will be used.

             DISASM/RESOURCE/REBUILD (PDSE):
             CSECT name will default to the load module name.

             ASMDASM:
             The CSECT name is optional.  If it is specified, the named
             CSECT must exist in the module or object module.  If
             omitted, the CSECT with ESDID=0001 is disassembled.

  Note:  The ASMDASM program (HLASM toolkit) can disassemble an object
         module in a sequential or partitioned source dataset.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DISPLAY
K* D
K* DI
K* DIS
K* DISP
K* DISPL
K* DISPLA

    Example -     DISPLAY aa b4

   The DISPLAY subcommand lists member names from the data set
   directory.  Note: the default member group is not affected by
   either the DISPLAY or PATTERN subcommands.

   Note that -A is added following a displayed member name if the
   member name is an alias.  The member name is listed in a combined
   hexadecimal/character format if it does not contain upper case
   alphanumeric characters (including @, $ and #) or if the first
   character is numeric.  Unprintable characters (for 3270-type
   devices) in a member name are displayed as periods.
   SYNTAX -
     DISPLAY  name1 name2

 ALIASES  - D, DI, DIS, DISP, DISPL, DISPLA, DISPLAY
 DEFAULTS - entire directory
 REQUIRED - none.
   OPERANDS -
  name1   - optional, specifies the starting member name (or portion
            of the member name) at which the display is to start. If
            omitted, the entire directory is displayed.

            Note: a group name descriptor such as part1:part2,
            seg1/seg2 or part1*seg1 may be entered for name1, in
            which case, the output will consist of the member names
            which would be displayed by the MEMBERS subcommand.

  name2   - optional, specifies the ending member name (or portion of
            the member name) after which the display is to stop.  If
            omitted, the display continues to the end of the directory.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DCF
K* DC

    Example -     DCF mema:memb twopass index file(myfile)

   The DCF subcommand prints a hardcopy list of a member.  The TSO
   SCRIPT command is used; any desired SCRIPT operands may be added
   after the member name.
   SYNTAX -
     DCF  member
         BIND(obind {ebind})           PAGE{({PROMPT}{{FROM} p {TO} q}
         CHARS(font1..font4)            {{FROM} p FOR n}{{FROM} p ON})}
         CONTINUE/NOCONT               PRINT{(copies,class,fcb,ucs)}
         CTF                           PROFILE{(fileid)}/NOPROFILE
         DDUT/NODDUT                   QUIET
         DEST(station-id)              SEARCH(libname)(opnum...)
         DEVICE(devtype)               SEGLIB/NOSEGLIB
         FILE{(fileid)}                SPELLCHK
         FONTLIB({ftype}{fmodel})      STOP
         FPASSES n                     SYON/SYOFF
         INDEX                         SYSVAR(n value...)
         LIB(libename...)(opnum...)    TERM
         MESSAGE({DELAY}{D}{TRACE})    TLIB
         NOSPIE                        TWOPASS
         NOWAIT                        UNFORMAT
         NUMBER                        UPCASE
         OPTIONS{(fileid)}             @user-option

 ALIASES  - DC, DCF
 DEFAULTS - member
 REQUIRED - none.
   OPERANDS -
  member   - optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO SCRIPT
             command.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

 operands -  optional, may include any desired TSO SCRIPT operands.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DIRENTRY
K* DIR
K* DIRE
K* DIREN
K* DIRENT
K* DIRENTR

    Example -     DIRENTRY mema:memb

   The DIRENTRY subcommand dumps the directory entry of a member.

 OFFSET  NAME      DESCRIPTION  (from GC28-1049, Debugging Handbook #3)
 ------  --------  ----------------------------------------------------
  00     PDS2NAME  CL8   -- member name
  08     PDS2TTRP  XL3   -- TTR of first block of data
  0B     PDS2INDC  X'80' -- member is an alias
                   X'60' -- number of TTR's following (0 - 3)
                   X'1F' -- number of halfwords following (0 - 31)

 *** Load module section only:
  0C     PDS2TTRT  XL4   -- first text TTR, x'00'
  10     PDS2TTRN  XL4   -- Overlay: note list TTR, number of entries
                            Scatter: translation table TTR, x'00'
  14     PDS2ATR1  X'F0' -- Reentrant| Reusable | Overlay  | Test
                   X'0F' -- Only load| Scatter  |Executable| 1 Text
  15     PDS2ATR2  X'F0' -- Not DC   |Text org=0| EP=0     | No RLD's
                   X'0F' -- Not EDIT | Test     | LKED F   |Refreshable
  16     PDS2STOR  XL3   -- total contiguous storage required
  19     PDS2FTBL  XL2   -- length of first text block
  1B     PDS2EPA   XL3   -- entry point address of this member
  1E     PDS2FTB1  XL1   -- x'80' processed by OS/VS linkage editor
                            x'20' page alignment required
                            x'10' SSI information is present
                            x'08' APF information is valid
  1F     PDS2FTB2  XL1   -- x'11' RMODE 64
                            x'10' RMODE ANY
                            x'00' RMODE 24
                            x'0C' Alias entry point is AMODE ANY
                            x'08' Alias entry point is AMODE 31
                            x'04' Alias entry point is AMODE 64
                            x'00' Alias entry point is AMODE 24
                            x'03' Main entry point is AMODE ANY
                            x'02' Main entry point is AMODE 31
                            x'01' Main entry point is AMODE 64
                            x'00' Main entry point is AMODE 24
  20     PDS2FTB3  XL1   -- # of RLD/CONTROL records after first text

 *** Scatter load module section only:
  +0     PDS2SLSZ  XL2   -- number of bytes in scatter list
  +2     PDS2TTSZ  XL2   -- number of bytes in translation table
  +4     PDS2ESDT  XL2   -- ESD CSECT identifier of first text block
  +6     PDS2ESDC  XL2   -- ESD CSECT identifier of entry point

 *** Alias load module section only:
  +0     PDS2EPM   XL3   -- entry point address of main member
  +3     PDS2MNM   CL8   -- member name of main member

 *** SSI section (this section is aligned on a halfword boundary):
  +0     PDSSSIWD  XL4   -- SSI information

 *** APF section for OS/VS load modules:
  +0     PDSAPFCT  X'01' -- length of following APF information
  +1     PDSAPFAC  XL1   -- 0 is not authorized; otherwise, authorized

 *** LPO section for OS/VS load modules:
  +0     PDS2LPOL  X'0D' -- length of the large program object section
  +1     PDS2VSTR  XL4   -- virtual storage requirement for this module
  +5     PDS2MEPA  XL4   -- main entry point offset
  +9     PDS2AEPA  XL4   -- alias entry point offset

 *** ISPF statistics section for OS/VS source modules:
  0C     ISPVERS   X     -- version
  0D     ISPMOD    X     -- modification level
  0E     ISPFLAGS  X     -- flag byte
         ISPSCLM   X'80' -- stats created by SCLM
         ISPESTAT  X'20' -- extended statistics
  0F     ISPMSEC   X     -- seconds portion of mod time
  10     ISPCDATE  CL4   -- date statistics created
  14     ISPMDATE  CL4   -- date statistics modified
  18     ISPMTIME  CL2   -- time modified HHMM
  1A     ISPCLINE  CL2   -- current number of lines
  1C     ISPILINE  CL2   -- initial number of lines
  1E     ISPMLINE  CL2   -- number of modified lines
  20     ISPUSRID  CL8   -- userid
         ISPBLANK  CL2   -- reserved for ISPF
                   ORG   ISPBLANK   -- for extended statistics
  28     ISPECLIN  CL4   -- current number of lines
  2C     ISPEILIN  CL4   -- initial number of lines
  30     ISPEMLIN  CL4   -- number of modified lines
   SYNTAX -
     DIRENTRY  member SHORT/LONG DEBUG/ISPF

 ALIASES  - DIR, DIRE, DIREN, DIRENT, DIRENTR, DIRENTRY
 DEFAULTS - member, SHORT for THEN(DIR) or ELSE(DIR); otherwise, LONG,
            DEBUG
 REQUIRED - none.
   OPERANDS -
  member  - optional, specifies the name of the member(s) whose
            directory entry is to be dumped.

            Default member names, member lists, member name
            ranges and member name patterns are allowed; for
            more information, enter HELP GROUP.

  SHORT   - specifies that only a directory entry dump is desired.
  LONG    - specifies that a directory entry dump and a listing of
            elements in the directory entry are desired.
  DEBUG   - use directory name headers from IBM Debugging Handbook
  ISPF    - use directory name headers from ISPDSTAT mapping macro
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DELETE
K* DE
K* DEL
K* DELE
K* DELET
K* SC
K* SCR
K* SCRA
K* SCRAT
K* SCRATC
K* SCRATCH

    Example -     DELETE mema:memb

 The DELETE or SCRATCH subcommand deletes a member from the data set.
 If a member group is deleted, the members will be deleted in reverse
 collating sequence to optimize directory update operations.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the -PDS86- command for
  SHR allocations (for details, enter HELP UPDATE).
   SYNTAX -
     DELETE  member   ALIAS/NOALIAS

 ALIASES  - DE, DEL, DELE, DELET, DELETE,
            SC, SCR, SCRA, SCRAT, SCRATC, SCRATCH
 DEFAULTS - member, NOALIAS
 REQUIRED - none.
   OPERANDS -
  member  - optional, specifies the name of the member(s) to be
            deleted.

            Default member names, member lists, member name
            ranges and member name patterns are allowed; for
            more information, enter HELP GROUP.

  ALIAS   - specifies that any associated members (aliases, apparent
            aliases and associated main members) are also to be
            deleted.
  NOALIAS - specifies that only the member(s) specifically identified
            are candidates for deletion.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DLINK
K* DLIN
K* DLI
K* DL
K* DELINKI
K* DELINK

    Example -     DLINK member

 The DLINK subcommand invokes the DELINKI program (CBT 090) to
 reconstruct object code from a load member.

 Please note that this Delinker will not process scatter-load or
 segment-overlay programs correctly.  It will only process
 load modules, and not program objects.
   SYNTAX -
     DLINK  member

 ALIASES  - DL, DLI, DLIN, DLINK
 DEFAULTS - member
 REQUIRED - none.
   OPERANDS -
  member  -      specifies the name of the member to be decoded.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DSAT
K* DSA

    Example -     DSAT lib

 The DSAT command is used to display allocation information for data
 sets on a direct access device.

 DSAT will search the catalog for the entries for the data sets
 specified.  Allocation information will be obtained from the volume
 table of contents, formatted and displayed.  If a name is an index
 name, all data sets below the index will be displayed.

 You may bypass the catalog search by supplying the volume name
 on which the data set resides.  This option permits displaying
 information for uncataloged data sets.

 DSAT may be used in CLISTs to find the allocation of a data set or a
 group of data sets and set the return code to the specified value.
 The return code may then be tested with the WHEN command.  Output may
 be suppressed by specifying NOPRINT.  The HARDCOPY keyword may be
 used to direct the output to a pre-allocated data set.

 The attributes to be displayed may be selected by specifying
 keyword operands.

 The information that may be displayed is:
    1. Volume name on which the data set is located.
    2. File sequence number.
    3. Device type code from catalog entry.
    4. Allocation  (allocated, free, and extents).
    5. Secondary allocation (amount and units).
    6. Data set organization.
    7. DCB  (RECFM, BLKSIZE, and LRECL).
    8. Creation date.
    9. Expiration date.
   10. Last date referenced
   11. Fully qualified data set name.
   12. CCHHR of the Format 1 DSCB.
   13. Generation data group data.
   14. PDS directory information.
   15. System managed data set flag.

   SYNTAX -
     DSAT  (dsnamelist) SERIAL/NOSERIAL   ALLOC/NOALLOC
                       DSORG/NODSORG     DCB/NODCB
                       CRDATE/NOCRDATE   EXDATE/NOEXDATE
                       LASTREF/NOLASTREF
                       TOTALS/NOTOTALS   PRINT/NOPRINT
                       HEADER/NOHEADER   ALL/DAONLY
                       GDGDATA/NOGDGDATA SEQNO/NOSEQNO
                       DEVTYPE/NODEVTYPE DEVICE/NODEVICE
                       CCHHR/NOCCHHR     PDS/NOPDS
                       SECONDARY/NOSECONDARY
                       GENERIC           DSONLY
                       HARDCOPY(ddname)  VOLUME(name)
                       SMS/NOSMS
                       RC(TALLOC/TUSED/TDIFF/
                          LALLOC/LUSED/LDIFF/NUM/
                          PREVIOUS/DSORG/DIRALLOC/
                          DIRUSED/ENTRIES/ALIASES/MEMBERS)

 ALIASES  - DSA, DSAT
 DEFAULTS - dsnamelist defaults to 'prefix' to list a user's data sets.
            SERIAL   ALLOC   DSORG    DCB    CRDATE
            NOEXDATE TOTALS  PRINT    HEADER ALL
            NOPDS    NOSEQNO NODEVICE NODEVTYPE
            NOGDGDATA    NOLASTREF    NOSECONDARY
            NOSMS
            NOCCHHR      NOEXTENTS    NOFULL
            Note: If HARDCOPY is specified, NOPRINT is the default

 WITH FULL - same as defaults above with:
            EXDATE      PDS       DEVICE
            GDGDATA     LASTREF   SECONDARY
            CCHHR
            NODEVTYPE   NOSEQNO   NOEXTENTS
 REQUIRED - none.

 SAMPLE OUTPUTS -

 1. DSAT lib.cntl
 SERIAL ALLOC  FREE EX DSORG -DCB ATTRIBUTES- CR. DATE -DSNAME-
 STR849   280    36  3  PO   FB   23440    80 05/04/94 WSER07.LIB.CNTL

 2. DSAT lib.cntl last
 SERIAL ALLOC  FREE EX DSORG -DCB ATTRIBUTES- CR. DATE LAST REF  -DS...
 STR849   280    36  3  PO   FB   23440    80 05/04/94 08/03/94* WSE...

 3. DSAT lib.cntl full  (Note: output below wraps to about 160 bytes)
 SERIAL DEVICE ALLOC  FREE EX  SEC UNITS DSORG DIRA    DIRU    ENTR AL
 STR849 3380     280    36  3   60  TRK   PO     90      78     465   3
   -DCB ATTRIBUTES- CR. DATE EX. DATE LAST REF   C C H H R -DSNAME-
   FB   23440    80 05/04/94 05/06/94 08/03/94* 0000000930 WSER07.LIB.C

 4. DSAT link
 SERIAL ALLOC  FREE EX DSORG -DCB ATTRIBUTES- CR. DATE -DSNAME-
 STR80P    20    18  1 X-PO  U    32760    80 07/19/94 WSER07.LINK.ALIA
 STR81Z  1350   634  5 A-PO  U    32760    80 11/13/92 WSER07.LINK.LOAD
 MIGRAT                                                WSER07.LINK.USER
         1370   652                                       3 DATA SETS

 5. DSAT 'smpc.mvs' extents

  Display format for non-EAV devices < 65520 CYLS

 SERIAL   ALLOC    FREE EXT  DSORG -DCB ATTRIBUTES- CR. DATE   -DSNAME-
 SMP022     210       8   3   PO   FB    3120    80 08/26/2011 SMPC.MVS
     EXT#--START TRK----START----END TRK-----END------LENGTH--TYPE-----
       0   1E2F,0000   115905   1E38,000E   116054       150  CYL, DATA
       1   1E39,0000   116055   1E3A,000E   116084        30  CYL, DATA
       2   1E3B,0000   116085   1E3C,000E   116114        30  CYL, DATA

  Display format for EAV devices > 65520 CYLS

 SERIAL   ALLOC    FREE EXT  DSORG -DCB ATTRIBUTES- CR. DATE   -DSNAME-
 DB6117    3000           3   AMX  U     4096     0 08/17/2011 VBDFS0
     EXT#--START TRK----START----END TRK-----END------LENGTH--TYPE--
       0   000C441:0   753615   000C472:E   754364       750  CYL, DATA
       1   000C4A5:0   755115   000C508:E   756614      1500  CYL, DATA
       2   000C53B:0   757365   000C56C:E   758114       750  CYL, DATA

 6. DSAT 'sys1.proc' generic

 SERIAL ALLOC  FREE EX DSORG -DCB ATTRIBUTES- CR. DATE   -DSNAME-
 MPSYSM    75    53  1 A-PO  FB   27920    80 10/20/2005 SYS1.PROCLIB
 MPSYSM  1471  1452  1 A-PO  FB    6160    80 03/25/2007 SYS1.PROCLIB.A1
 MPSYSM NOT ON VOLUME                                    SYS1.PROCLIB.A2
 MPIP2M    15     5  1 A-PO  FB   27920    80 11/15/2006 SYS1.PROCLSSC
         1561  1510                                4 DATA SETS DISPLAYED

 7. DSAT ('pli' 'none')

 SERIAL ALLOC  FREE EX DSORG -DCB ATTRIBUTES- CR. DATE   -DSNAME-
 WLMDCT    15    13  1 A-PO  U     6144     0 02/24/2001 PLI.PLILINK
 WLMDCT     2     0  1 A-PO  FB    3120    80 02/24/2001 PLI.PLISAMP
 WLMDCT    15    11  1 A-PO  U     6144     0 02/24/2001 PLI.SIBMBASE
 WLMDCT    15     0  1 A-PO  U     6144     0 02/24/2001 PLI.SIBMLINK
 MTDOCM   225        1 X-AM  U     4096     0 10/20/2005 PLI
        NAME NOT FOUND                                   NONE
          272    24                                5 DATA SETS DISPLAYED

 8. DSAT 'papi.sedor' sms
 SERIAL ALLOC  FREE EX DSORG -DCB ATTRIBUTES- CR. DATE    wrap...>
 LMP007     4     0  1 A-PS  U    27998     0 10/02/2009  wrap...>

 ...>   SMS DATACLAS MGMTCLAS STORCLAS -DSNAME-
 ...>   YES DCLMPCNV (NULL)   SCLMPCNV PAPI.SEDOR

   OPERANDS -
 dsnamelist  - one or more data set or index level names. TSO naming
               conventions are used.  If a specified name is an index
               name, data sets under that level will be displayed.  If
               no name is specified, the prefix will be used.  If no
               name is specified and the profile specifies NOPREFIX,
               the USERID will be used.

               Note: if a keyword is entered, dsnamelist must be
               specified. If dsnamelist is omitted, it will not default
               to the prefix, but the keyword will be interpreted as
               the dsnamelist, not a keyword.
  SERIAL     - list volume names.
  NOSERIAL   - do not list volume names.
  SEQNO      - list file sequence numbers.
  NOSEQNO    - do not list file sequence numbers.
  DEVTYPE    - display device type code.
  NODEVTYPE  - do not display device type code.
  DEVICE     - list device name (3380, 9345, etc.).
  NODEVICE   - do not list device name.
  ALLOC      - list allocation information (tracks allocated, tracks
               free, and extents).
  NOALLOC    - do not list allocation information.
  SECONDARY  - display secondary allocation information.
  NOSECONDARY- do not display secondary allocation information.
  DSORG      - list data set organization.
  NODSORG    - do not list data set organization.
  PDS        - list PDS directory information (blocks alloc, used,
               entries, and aliases).
  NOPDS      - do not list PDS directory information.
  DCB        - list DCB information (RECFM, BLKSIZE, and LRECL).
  NODCB      - do not list DCB information.
  CRDATE     - list creation date.
  NOCRDATE   - do not list creation date.
  EXDATE     - list expiration date.
  NOEXDATE   - do not list expiration date.
  LASTREF    - display last date referenced
  NOLASTREF  - do not display last date referenced.
  CCHHR      - display Format 1 DSCB address.
  NOCCHHR    - do not display CCHHR.
  TOTALS     - display totals (tracks allocated, tracks free,
             - and data sets displayed).
  NOTOTALS   - do not display totals.
  PRINT      - output is to be displayed.
  NOPRINT    - output is not to be displayed, except for error
               messages.
  HEADER     - display a output header line.
  NOHEADER   - do not display a header line.
  ALL        - display all data set names under an index level.
  DAONLY     - display data sets on mounted direct access devices.
  GDGDATA    - information on generation data group indexes is to
               be displayed.
  NOGDGDATA  - generation data group data will not be displayed.
  GENERIC    - name specifies a generic key.
  DSONLY     - treat names as data set names, not index names.
  VOLUME     - specifies the volume to be searched for the data set.
  HARDCOPY   - specifies the ddname a pre-allocated data set to
               receive a copy of DSAT output.
  FULL       - format additional information for each data set: PDS,
               EXDATE, DEVICE, GDGDATA, LASTREF, SECONDARY, CCHHR.

               Other keywords (like NOPDS) may be specified after FULL
               to turn off options selectively.
  NOFULL     - do not format additional information.
  EXTENTS    - format extent information for each data set following
               the data set display line.

               The following fields are formatted for each extent:
                    EXT#       - extent number (0 TO 122)
                    START/CCHH - starting CCHH hex address
                    S/TRK      - starting CCHH in decimal
                    END/CCHH   - ending CCHH hex address
                    E/TRK      - ending CCHH in decimal
                    LENGTH     - size of extent in tracks
                    TYPE       - comments on extent use
                                 CYL     - cylinder allocation
                                 SHR     - sharing cylinder
                                 USR LBL - user labels
                                 IS INDX - ISAM index
                                 IS OVFL - ISAM overflow
  NOEXTENTS  - do not format extent information.
  SMS        - display SMS information: DATACLAS, MGMTCLAS, STORCLAS
  NOSMS      - do not display SMS information
  RC         - specifies how the return code is to be set:
               RC not specified:  4 - successful completion
                                 16 - unable to interpret command
               TALLOC               - total tracks used
               TUSED                - total tracks used
               TDIFF                - total overallocation
                                      (talloc-tused)
               LALLOC               - tracks allocated by last data
                                      set
               LUSED                - tracks used by last data set
               LDIFF                - last data set overallocation
                                      (lalloc-lused)
               NUM                  - number of data sets displayed
                                      (includes data sets not
                                      found, etc.)
               PREVIOUS             - assumes the return code of
                                      the previous command.
               DSORG                - sets the return code based
                                      on the data set organization
                                      of the data sets displayed.
                                      1 - All data sets were SEQ
                                      2 - All data sets were PDS
                                      3 - Data sets were mixed PDS
                                          and sequential
                                      4 - An error occurred or a
                                          data set other than PDS
                                          or sequential was
                                          processed
               DIRALLOC - sets the return code to the
                          number of directory blocks
                          allocated.
               DIRUSED  - sets the return code to the
                          number of directory blocks
                          used.
               ENTRIES  - sets the return code to the
                          number of entries in the
                          directory (members and
                          aliases).
               ALIASES  - sets the return code to the
                          number of aliases.
               MEMBERS  - sets the return code to
                          entries-aliases.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DSNAME
K* DSNAM
K* DSNA
K* DSN
K* DS

    Example -     DSN

   The DSNAME subcommand displays statistics on the current data
   set allocation using message format PDS200I, PDS210I or PDS220I
   depending on the last DSNAME operand (MSG, TSO, or JCL) entered.

   Note: the DSNAME subcommand is automatically invoked for several
   situations (such as in the CHANGE or FIXPDS subcommands).
   SYNTAX -
     DSNAME  MSG / TSO / JCL

 ALIASES  - DS, DSN, DSNA, DSNAM
 DEFAULTS - initially MSG; thereafter, previous MSG/TSO/JCL
 REQUIRED - none.
   OPERANDS -
  MSG       - specifies that allocation messages are to be in table
              format using the PDS200I message.
  TABLE     - specifies that allocation messages are to be in table
              format using the PDS200I message.
  TBL       - specifies that allocation messages are to be in table
              format using the PDS200I message.
  TSO       - specifies that allocation messages are to be in TSO
              format using the PDS210I message.
  JCL       - specifies that allocation messages are to be in JCL
              format using the PDS220I message.
  BATCH     - specifies that allocation messages are to be in JCL
              format using the PDS220I message.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DSPRINT
K* DSPRIN
K* DSPRI
K* DSPR
K* DSP

    Example -     DSPRINT mema:memb r130

   The DSPRINT subcommand prints a hardcopy list of a member.  The
   TSO DSPRINT command is used; any desired DSPRINT operands may
   be added after the member name.
   SYNTAX -
     DSPRINT  member printer DDNAME(ddname)  DIRECT(KEEP/DELETE)
                             LINES(linenum1:linenum2)
                             NUM(loc,length)/SNUM(loc,length)/NONUM
                             FCB(fcbname)  FORMS(formname)
                             CLASS(c)  HOLD/NOHOLD
                             COL(col1:col2, ...)  COPIES(number)
                             PAGELEN(num)  TMARGIN(num)  BMARGIN(num)
                             SINGLE/DOUBLE/CCHAR
                             FOLD(width)/TRUNCATE(width)
                             EJECT/NOEJECT  NOEJMESS  NOHEADER
                             TERMINAL  TRACE  WTR(wtrname)

 ALIASES  - DSP, DSPR, DSPRI, DSPRIN, DSPRINT
 DEFAULTS - NUM, CLASS(A), COPIES(1), NOHOLD, SINGLE, CCHAR, NOEJECT
 REQUIRED - member and printer
 NOTE     - The above operands are actually for the VPSPRINT product.
   OPERANDS -
  member  - specifies the member name(s) to be passed (along with
            the data set name) to the TSO DSPRINT command.

            Default member names, member lists, member name
            ranges and member name patterns are allowed; for
            more information, enter HELP GROUP.

  printer - specifies the name of the VTAM printer which is to
            print this data set.

 operands - optional, may include any desired TSO DSPRINT operands.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DVOL
K* DVO
K* DV

    Example -     DVOL tso long

 The DVOL command is used to display the amount of free space on a
 direct access device.

 DVOL will read the Format 4 and Format 5 DSCB's from the VTOC of a
 direct access volume and display:
   1.  Volume name
   2.  Unit address
   3.  Mount status and device type
   4.  Use status
   5.  Number of blank DSCB's in the VTOC
   6.  Condition of the VTOC indicators byte
   7.  Percent used space
   8.  Total free space in tracks
   9.  Number of free extents
  10.  Number of free cylinders
  11.  Size of largest extents (up to 5) in cylinders + tracks
  12.  Size of largest extents (up to 5) in tracks
       -or-
       User count

   Return code: the return code is set to the total number of tracks
                in the 5 largest extents (to a maximum of 4095) for
                the last volume displayed.

                If an error condition exists on the volume, the
                return code will be set to 0.

   SYNTAX -
     DVOL  (volumelist)/*
           SHORT/LONG
           USER/NOUSER
           HEADER/NOHEADER
           PRINT/NOPRINT
           SERONLY
           HARDCOPY(ddname)

 ALIASES  - DV, DVO, DVOL
 DEFAULTS - *, SHORT, HEADER, PRINT, NOUSER
            Note: IF HARDCOPY is specified, NOPRINT is the default
 REQUIRED - none.

 SAMPLE OUTPUTS -

 1. DVOL lds user
 SERIAL  --UNIT--   ATTRIB   %USED AVAIL -----TOTALS-----  LARGEST>USER
        ADDR TYPE   MOUNT/USE      DSCBS TRACKS EXT   CYL   CYL+TR>COUNT
 LDS116 29C0 3390-9 RES/PRIV    39  4199  90242  12  6010  5501+10    14
 LDS900 2990 3390-9 RES/PRIV     0  4495 150110   2 10007  9961+ 5     1

 2. DVOL lds116 long
 VOLUME SERIAL = LDS116     UNIT = 29C0    TYPE = 3390-9
 STATUS: RESIDENT   PRIVATE  ALLOCATED    ONLINE
 VTOC CONTAINS 4199 BLANK DSCB'S
 INDEXED VTOC CONTAINS  903 FREE VIR'S
 FREE SPACE IS  90242 TRACKS IN   12 EXTENTS INCLUDING  6010 FULL CYLIND
 LARGEST EXTENTS ARE: /CYL+TR/ 5501+10/  217+ 0/  156+20/  129+19/ 7+ 0/
                      /TRACKS/   82525/    3255/    2360/    1954/  105/
 VOLUME IS   39 PERCENT USED

   OPERANDS -
  volumelist  - is a list of one or more volume names of mounted
                direct access volumes or partial volume names.

                if no volume is entered, or if an * is specified, the
                information is displayed for each direct access volume
                on the system.

                if a volume name is entered with a u followed by one
                to three digits, the data is also used as a UCB name.

  SHORT       - request short form output.
  LONG        - request long form output.
  USER        - User count is to be displayed.
  NOUSER      - No user count is to be displayed.
  HEADER      - display a short form header.
  NOHEADER    - display no short form header.
  PRINT       - display output.
  NOPRINT     - display no output.
  SERONLY     - display only a list of mounted volumes.
  HARDCOPY    - specifies the DDNAME of a pre-allocated data set to
                receive a copy of DVOL output.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=EDIT
K* EDI
K* ED
K* E
K* SPFEDIT
K* SPFEDI
K* SPFED
K* SPFE
K* SPF
K* SP
K* S

    Example -     EDIT mema:memb

  The EDIT or SPFEDIT subcommand enters ISPF edit for a member
  (for additional information on the relationship of -PDS86- and
  ISPF edit, enter HELP DIALOG).

  Note: on the first entry of an EDIT or SPFEDIT subcommand -PDS86-
  will present any pending EDIT recovery sessions to you before
  entering EDIT for a selected member.
   SYNTAX -
     EDIT  member  OLD/NEW    MACRO(macname)    SM/SETMACRO(macname)
                            PROFILE(profname)   SP/SETPROF(profname)

 ALIASES  - E, ED, EDI, EDIT, S, SP, SPF, SPFE, SPFED, SPFEDI, SPFEDIT
 DEFAULTS - member
 REQUIRED - none.
   OPERANDS -
  member      - optional, specifies the name of the member(s) to be
                edited.

                Default member names, member lists, member name
                ranges and member name patterns are allowed; for
                more information, enter HELP GROUP.

                Note - if : is entered for the member name position,
                an ISPF member selection screen will be provided.

  OLD         - -PDS86- will verify that the member exists before
                invoking ISPF EDIT service.
  NEW         - -PDS86- will verify that the member does not exist
                before invoking ISPF EDIT service.
  MACRO(m)    - For ISPF Version 2, this parameter may be used to
                specify an initial edit macro name.
  SM(mname)   - For ISPF Version 2, this parameter may be used to
                specify a default initial edit macro name; to nullify
                this parameter, you may enter SM(*).
  SETMACRO(m) - For ISPF Version 2, this parameter may be used to
                specify a default initial edit macro name; to nullify
                this parameter, you may enter SETMACRO(*).
  PROFILE(p)  - For ISPF Version 2, this parameter may be used to
                specify the edit profile name (the supplied name will
                be used instead of the low-level DSNAME qualifier).
  SP(pname)   - For ISPF Version 2, this parameter may be used to
                specify a default edit profile name; to nullify this
                parameter, you may enter SP(*).
  SETPROF(p)  - For ISPF Version 2, this parameter may be used to
                specify a default edit profile name; to nullify this
                parameter, you may enter SETPROF(*).
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=END
K* EN
K* QUIT
K* QUI
K* QU
K* Q

    Example -     END

  The END subcommand terminates the -PDS86- command.
   SYNTAX -
     END

 ALIASES  - EN, END
   OPERANDS -
  no operands are supported.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=EDREC
K* EDRE
K* EDR

    Example -     EDREC

  The EDREC subcommand explicitly invokes ISPF edit recovery.
   SYNTAX -
     EDREC

 ALIASES  - ED, EDR, EDRE, EDREC
   OPERANDS -
  no operands are supported.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=EXEC
K* EX
K* EXE
K* %

    Example -     EXEC lib(clistmem) 'parms' list

  The EXEC or % subcommand executes a CLIST containing -PDS86-
  subcommands.  The TSO CLIST processor is used; both implicit (%... )
  and explicit (EXEC ... ) call forms are supported.

  Note: CLIST processing is not supported from MEMLIST or ISPMODE.

  Note: when subcommands are entered from a CLIST (or in batch mode
  or from a storage stack), YES/NO prompts are not provided; instead,
  YES responses are assumed in each case.
   SYNTAX -
     EXEC  clistname 'operands'   /     %clistmem  operands

 ALIASES  - %, EX, EXE, EXEC
 DEFAULTS - none.
 REQUIRED - clistname or clistmem
   OPERANDS -
  clistname - specifies the CLIST data set name.

  clistmem  - specifies the name of a member in the CLIST partitioned
              data set allocated to FILE(SYSPROC).

  operands  - optional, may include any parameters for the CLIST.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=FIND
K* F
K* FI
K* FIN

    Example -     FIND mema:memb /this data/

  The FIND subcommand displays portions of a member which contain a
  search string.  Optionally, the THEN or ELSE keywords may be entered
  to allow conditional execution of other subcommands.

  Unprintable characters for 3270-type devices are translated to
  periods before they are displayed.

  The FIND formats are NUM, SNUM, NONUM, LBLOCK, LDUMP, BLOCK and DUMP;
  for load modules, the NUM, SNUM and NONUM formats are equivalent
  to the LDUMP format.

  The default format is initially NUM; however, each time a format
  operand is entered on a LIST, FIND or REPLACE subcommand, the value
  entered is used as the output format for subsequent LIST, FIND and
  REPLACE subcommands.  Also, note the following:
    A. Formats NUM, SNUM and NONUM limit the search and display length
       for logical records to 256 characters.
    B. Column 72 is not searched for formats NUM or SNUM if the record
       format is fixed with 80 character records.
    C. Formats BLOCK and DUMP apply to physical records; the other
       formats apply to logical records; and for load modules, LBLOCK
       and LDUMP formats apply to CSECT data.
    D. Formats LBLOCK, LDUMP, BLOCK and DUMP display only those
       segments of a record which contain the search string; however,
       a following segment will also be displayed if the string spans
       a segment boundary.
   SYNTAX -
     FIND  member 'string' NUM/SNUM/NONUM/LBLOCK/LDUMP/BLOCK/DUMP
                         CAPS/ASIS/IGNORE
                         OFFSET(Hx) MODULE(Partm)
                         SKIPREC(n) MAXIN(n) MAXOUT(n) MAXFIND(n)
                         SKIPCOL(n) MAXLEN(n) FIRST/NOFIRST
                     THEN(ATTRIB/ BROWSE/ DIRENTRY/ DELETE/ EDIT/ NEWML/
                          END/ FIND/ FSE/ HISTORY/ LIST/ MAP/ MEMBERS/
                          MEMLIST/ OUTCOPY/ PRINTOFF/ REVIEW/ SUBMIT/
                          SUBLIST/ TSOEDIT/ TSOLIST/ VIEW/ VERIFY)
                     ELSE(ATTRIB/ BROWSE/ DIRENTRY/ DELETE/ EDIT/ NEWML/
                          END/ FIND/ FSE/ HISTORY/ LIST/ MAP/ MEMBERS/
                          MEMLIST/ OUTCOPY/ PRINTOFF/ REVIEW/ SUBMIT/
                          SUBLIST/ TSOEDIT/ TSOLIST/ VIEW/ VERIFY)

 ALIASES  - F, FI, FIN, FIND
 DEFAULTS - member, previous string,  CAPS,
                    NUM or previous LIST/FIND/REPLACE format
 REQUIRED - none.
   OPERANDS -
  member     -  optional, specifies the name of the member(s) to be
                scanned.

                Default member names, member lists, member name
                ranges and member name patterns are allowed; for
                more information, enter HELP GROUP.

  string     -  optional, the string to be searched for.  It is coded
                as a delimited string like +searched for+.  If the
                string is not entered or is null, the last string
                entered will be used. The string may contain one to
                32 characters.  If the ASIS keyword is entered, the
                string will not be translated to upper case letters.

                As an alternative, hexadecimal data may be entered as
                a string delimited with x's like x0123456789abcdefx.
                Note that the string may contain one to 64 characters
                and that x333x and x0333x are equivalent.

  FIND format control keywords are as follows:
  NUM        -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) of
                each logical record is examined; if the field is not
                numeric, formatting is switched to NONUM mode for the
                remainder of the member.

                For ISPF-saved members, the high-order six digits of
                the line number field is formatted; otherwise, the
                low-order six digits of the line number field is
                formatted by suppressing leading zeroes.  The line
                number segment is followed by a blank and up to 249
                characters of data from the logical record.
  SNUM       -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) is
                discarded.  Up to 256 bytes from a logical record are
                searched or displayed.
  NONUM      -  Up to 256 bytes from a logical record are searched or
                displayed.
  LBLOCK     -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record) and segments of 64 characters
                surrounded by asterisks.  Only formatted segments
                which contain the search string are displayed;
                however, a following segment will also be displayed
                if the string spans a segment boundary.

                Note: for load modules, only CSECT data will be
                searched or displayed and if the partial name Partm is
                entered in a MODULE operand, only those CSECT or ENTRY
                names matching Partm will be searched or displayed.
                CSECT records are formatted with two hexadecimal
                offsets (a module offset and a CSECT offset) and
                segments of 64 characters surrounded by asterisks.
  LDUMP      -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.  Only
                formatted segments which contain the search string
                are displayed; however, a following segment will also
                be displayed if the string spans a segment boundary.

                Note: for load modules, only CSECT data will be
                searched or displayed and if the partial name Partm is
                entered in a MODULE operand, only those CSECT or ENTRY
                names matching Partm will be searched or displayed.
                CSECT records are formatted with two hexadecimal
                offsets (a module offset and a CSECT offset), segments
                of up to 32 characters of hexadecimal data and up to
                16 bytes of characters surrounded by asterisks.
  BLOCK      -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record) and segments of 64 characters
                surrounded by asterisks.

                Only formatted segments which contain the search string
                are displayed; however, a following segment will also
                be displayed if the string spans a segment boundary.
  DUMP       -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.

                Only formatted segments which contain the search string
                are displayed; however, a following segment will also
                be displayed if the string spans a segment boundary.
  FIND search argument keywords are as follows:
  CAPS        - default, if a character string search argument is
                entered, it will be translated to upper case letters.
  ASIS        - if specified, a character search argument will not be
                translated to upper case letters.
  IGNORE      - if specified, search for upper and lower-case data
                matching the specified string.
  FIND control keywords are as follows:
  OFFSET(Hx)  - for LBLOCK and LDUMP formats only; Hx may be entered
                as a 1 to six digit hexadecimal number to specify
                the module offset at which the search is to begin.

                If both MODULE AND OFFSET keywords are entered, the
                offset applies to each module selected.
  MODULE(Partm)-for LBLOCK or LDUMP formats only; Partm may be entered
                as a 1 to 8 byte partial external name to limit the
                CSECT or ENTRY names to be searched or displayed to
                those matching the partial name Partm.

                If the form MODULE(*) is used, the previous partial
                name entered on any MODULE keyword will be used.

                If both MODULE AND OFFSET keywords are entered, the
                offset applies to each module selected.
  SKIPREC(n)  - n is coded as 0 through 9999999 to specify the number
                of logical records (physical records for BLOCK or
                DUMP formats) to ignore at the beginning of a member.
  MAXIN(n)    - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to input for a member after
                satisfying any SKIPREC operand.
  MAXOUT(n)   - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (partial logical records for
                LBLOCK or LDUMP formats; partial physical records for
                BLOCK or DUMP formats) to output for a member.
  MAXFIND(n)  - n is coded as 0 through 9999999 to specify the maximum
                number of strings that are to be located.
  SKIPCOL(n)  - n is coded as 0 through 99999 to specify the number
                of columns to ignore at the beginning of each logical
                record (physical record for BLOCK or DUMP formats).

                Note: for NUM or SNUM output format with record
                format V, SKIPCOL(0) refers to the first data position
                after the line number field.
  MAXLEN(n)   - n is coded as 0 through 99999 to specify the maximum
                length of a logical record (physical record for BLOCK
                or DUMP formats) to search or display.
  FIRST       - Specifies that all remaining data in the member is
                to be listed after the first occurrence of the string.
  NOFIRST     - Specifies that only string matches are to be listed.
  FIND conditional keywords are as follows:
  THEN(action) - The THEN subcommand is executed if the string is
                 found in a member.  The subcommand may be ATTRIB,
                 BROWSE, DIRENTRY, DELETE, EDIT, END, FIND, FSE,
                 HISTORY, LIST, MAP, MEMBERS, MEMLIST, NEWML, OUTCOPY,
                 PRINTOFF, REVIEW, SUBMIT, SUBLIST, TSOEDIT, TSOLIST,
                 VIEW or VERIFY.

                 NEWML is similar to MEMLIST except it also performs
                 a MEMLIST RESET.
  ELSE(action) - The ELSE subcommand is executed if the string is not
                 found in a member.  The subcommand may be ATTRIB,
                 BROWSE, DIRENTRY, DELETE, EDIT, END, FIND, FSE,
                 HISTORY, LIST, MAP, MEMBERS, MEMLIST, NEWML, OUTCOPY,
                 PRINTOFF, REVIEW, SUBMIT, SUBLIST, TSOEDIT, TSOLIST,
                 VIEW or VERIFY.

                 NEWML is similar to MEMLIST except it also performs
                 a MEMLIST RESET.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=FIXPDS
K* FIXPD
K* FIXP
K* FIX

    Example -     FIXPDS release recfm(fba)

  The FIXPDS subcommand can perform several data set utility
  functions for sequential, partitioned and PDSE data sets.

  After the FIXPDS subcommand gains control, it writes messages
  regarding the data set action to be taken and any potential error
  conditions.  FIXPDS will prompt the user before making any data set
  changes unless CONTROL NOPROMPT is in effect.


  Following are more detailed implementation notes on several of the
  different functions available through the FIXPDS subcommand:
    A.  EXPANDDIR (expand the directory -- ignored for sequential)
        or FREEDIR (adjust free blocks  -- ignored for sequential)
        1.  If no members exist in the data set, RESET is used
        2.  The names of any members that will be moved out of the
            way of the expanded directory are listed
        3.  If any of these members are in use by an ISPF edit session,
            a warning message is issued
        4.  As each member is moved, an informational message is issued
        5.  The additional directory blocks are written

    B.  RESET (reset the directory and the data set)
        1.  If any members exist in the data set, a warning message
            is issued
        2.  If any members are in use by an ISPF edit session, a
            warning message is issued
        3.  The data set's directory blocks are rewritten with null
            data, destroying any existing member information
        4.  The end of data marker (DS1LSTAR) is reset to indicate
            an empty partitioned data set.
        5.  The RESET of a PDSE directory is done with the STOW
            Initialize function.

    C.  INITDIR (initialize the directory)
        1.  If any members exist in the data set, a warning message
            is issued
        2.  If any members are in use by an ISPF edit session, a
            warning message is issued
        3.  The data set's directory blocks are rewritten with null
            data, destroying any existing member information
        4.  The end of data marker (DS1LSTAR) is not modified.

    C.  DCB (modify the DCB attributes)
        1.  If a data type keyword such as ASM, CLIST, CNTL, LOAD or
            OBJECT is entered, RECFM and LRECL default values are
            provided from a table and a BLKSIZE value is determined
            based on the allocated device type
        2.  If any RECFM, LRECL or BLKSIZE values are specifically
            requested by keyword, these values will override the
            values as determined from the data type keywords entered.
        3.  The data set is opened for output with any new DCB
            parameters

    D.  Release operands: each operand formats a call to
        the TSO RELEASE command as follows:
        1.  RELEASE     - RELEASE 'data.set.name'          VOL(volume)
        2.  RELEXT      - RELEASE 'data.set.name' EXTENT   VOL(volume)
        3.  RELSAVE(nn) - RELEASE 'data.set.name' SAVE(nn) VOL(volume)

    E.  MAXSPACE (mark all allocated space in use)
        1.  All extents of the data set are marked in use by setting
            the end of data marker (DS1LSTAR) value to the last disk
            address for the data set.
        2.  This could be used in conjunction with a RESTORE subcommand
            to attempt to recover members which were deleted prior to a
            data set compress.
        3.  For example, the following sequence of subcommands could be
            used to recover lost members after a PDS is destroyed by
            sequential output to the directory (the new data blocks will
            take one or more tracks followed by a blank track for the
            end of file marker):
            a.  FIXPDS MAXSPACE
                (to mark all allocated space in use).
            b.  FIXPDS INITDIR(80)
                (to reinitialize the directory).
            c.  RESTORE name REPEAT NOPROMPT NODISPLAY
                (to restore all deleted members).
            d.  VERIFY :
                (to find invalid members after the previous DS1LSTAR).
            e.  BROWSE name
                (to scan contents of members)
            f.  DELETE name
                (to delete members not needed).
            g.  Note: any members that were previously recorded on
                the tracks overwritten by the sequential data or the
                following track cannot be restored with this technique.

    F.  ADDTRK or ADDCYL (add one secondary extent)
        1.  An extent is added to the data set in the units given in
            the subcommand.  For example, ADDTRK(12) will add one
            secondary extent of 12 tracks while ADDCYL(4) will add
            one secondary extent of 4 cylinders.
        2.  Note that this operation is independent of any secondary
            extent information associated with the data set; it can
            add a single extent of the specified size to a data set
            even if the data set was allocated without secondary
            extents.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the -PDS86- command for
  SHR allocations (for details, enter HELP UPDATE).
   SYNTAX -
     FIXPDS  EXPANDDIR(Addblks) / FREEDIR(#unused) /
                       DCB / RESET(Totblks) /*RESET / INITDIR(rblks) /
                      *STOWINIT
                       CHECK/NOCHECK
             RELEASE / RELEXTENT / RELSAVE(trks) /
                       MAXSPACE  / ADDTRK(trka)  / ADDCYL(cyla)
             ASM / CLIST / CNTL / LOAD / OBJECT
             RECFM(F/FB/FT/FBT/FA/FBA/FTA/FBTA/FM/FBM/FTM/FBTM/
                   V/VB/VT/VBT/VA/VBA/VTA/VBTA/VM/VBM/VTM/VBTM/
                   U/UT/UA/UM/UTA/UTM)
             LRECL(L1)
            *BLKSIZE(L2)
            *OPTCD(W/WC/WCZ/C/CZ/Z) /*NOOPTCD

 ALIASES  - FIX, FIXP, FIXPD, FIXPDS
 DEFAULTS - DCB, CHECK
            RECFM(previous value), LRECL(previous value),
            BLKSIZE(previous value), OPTCD(previous value)
 REQUIRED - none.
 *NOTE    - Items with an asterisk are supported for PDSE data sets.
   OPERANDS -
  EXPANDDIR(Addblks) - specifies that the directory is to be expanded
                       by the number of specified directory blocks.
                       Addblks may be entered as a number from 0
                       through 99999 and it defaults to 50.
  FREEDIR(#unused)   - specifies that the directory is to be adjusted
                       as necessary to obtain the number of unused
                       directory blocks specified.  #unused may be
                       entered as a number from 0 through 99999 and
                       it defaults to 5.
  DCB                - specifies that the DCB for the data set is to be
                       modified.
  RESET(Totblks)     - specifies that the directory is to be over-
                       written with null directory blocks.  Totblks may
                       be entered as a number from 1 through 99999 and
                       it defaults to the number of directory blocks
                       already allocated.  After the directory blocks
                       are written, the end of data marker (DS1LSTAR)
                       is reset to indicate a null partitioned data set.
  RESET              - specifies that the data set is to be reset to
                       a null data set.  EMPTY is an alias for RESET.
  INITDIR(rblks)     - specifies that the directory is to be over-
                       written with null directory blocks.  Rblks may
                       be entered as a number from 1 through 99999 and
                       it defaults to the number of directory blocks
                       already allocated.
  STOWINIT           - specifies that the data set is to be reset to
                       a null data set via the STOW Initialize option.
  CHECK              - specifies that each member should be checked to
                       see if it is being edited for options RESET and
                       INITDIR.
  NOCHECK            - specifies that no edit check is desired.
  RELEASE            - specifies that any unused space is to be
                       returned to the system by the TSO RELEASE
                       command.  If the data set was allocated with
                       cylinder boundaries, space will be returned
                       to the system in cylinder increments.
  RELEXTENT          - specifies that any unused disk extents are to
                       returned to the system by the TSO RELEASE
                       command.
  RELSAVE(nnn)       - specifies that any unused space (except for
                       the first nnn tracks) are to be returned to
                       the system by the TSO RELEASE command.  If
                       the data set was allocated with cylinder
                       boundaries, space will be returned to the
                       system in cylinder increments.
  MAXSPACE           - specifies that the all extents of the data set
                       are to be marked "in-use" by adjusting the
                       end of data set marker (DS1LSTAR).  This could
                       be used after a data set compress to RESTORE
                       members after the used portion of the data set.
  ADDTRK(trka)       - specifies a number of disk tracks that are to
                       be added as a single secondary extent.  Note
                       that this operation is independent of secondary
                       space indicators from the data set label.
  ADDCYL(cyla)       - specifies a number of disk cylinders that are
                       to be added as a single secondary extent.  Note
                       that this operation is independent of secondary
                       space indicators from the data set label.
  ASM         - specifies the equivalent of RECFM(FB) LRECL(80) and
                the following BLKSIZE values.  Note that RECFM, LRECL
                and BLKSIZE may also be explicitly specified.

    DEVICE      2314   3330   3340   3350   3375   3380   3390
                ----   ----   ----   ----   ----   ----   ----
    BLKSIZE     3520   6400   4080   6160   6800   6320  27920

  CLIST       - specifies the equivalent of RECFM(VB) LRECL(255) and
                the following BLKSIZE values.  Note that RECFM, LRECL
                and BLKSIZE may also be explicitly specified.

    DEVICE      2314   3330   3340   3350   3375   3380   3390
                ----   ----   ----   ----   ----   ----   ----
    BLKSIZE     2296   4252   1964   6232   6816   6356  27998

  CNTL        - specifies the equivalent of RECFM(FB) LRECL(80) and
                the following BLKSIZE values.  Note that RECFM, LRECL
                and BLKSIZE may also be explicitly specified.

    DEVICE      2314   3330   3340   3350   3375   3380   3390
                ----   ----   ----   ----   ----   ----   ----
    BLKSIZE     3520   6400   4080   6160   6800   6320  27920

  LOAD        - specifies the equivalent of RECFM(U) and the following
                BLKSIZE values.  Note that RECFM and BLKSIZE may also
                be explicitly specified.

    DEVICE      2314   3330   3340   3350   3375   3380   3390
                ----   ----   ----   ----   ----   ----   ----
    BLKSIZE     7294  13030   8368  19069  19069  32760  32760

  OBJECT      - specifies the equivalent of RECFM(FB) LRECL(80) and
                the optimal BLKSIZE for the device which does not
                exceed 3200 bytes as follows.  Note that RECFM, LRECL
                and BLKSIZE may also be explicitly specified.

    DEVICE      2314   3330   3340   3350   3375   3380   3390
                ----   ----   ----   ----   ----   ----   ----
    BLKSIZE     2240   3120   2640   2960   3200   3120   3120

  RECFM(Newr) - specifies a new DCB RECFM value for the data set.
                Newr defaults to its previous value for the data set
                or may be entered as any one of the following:
                F, FB, FT, FBT, FA, FBA, FTA, FBTA, FM, FBM, FTM, FBTM,
                V, VB, VT, VBT, VA, VBA, VTA, VBTA, VM, VBM, VTM, VBTM,
                U, UT, UA, UM, UTA or UTM.
  LRECL(L1)   - specifies a new DCB LRECL value for the data set.
                L1 defaults to its previous value for the data set
                or may be entered as a number from 1 through 32767.
  BLKSIZE(L2) - specifies a new DCB BLKSIZE value for the data set.
                L2 defaults to its previous value for the data set
                or may be entered as a number from 1 through 32767.
                Note:  enter 99999 for PDS-determined blocksize (PDB).
                This is for fixed and variable formats.
  OPTCD(Newo) - specifies the desired OPTCD value for the data set.
                Newo defaults to its previous value for the data set
                or may be changed to any of the following:
                W, WC, WCZ, C, CZ or Z.
  NOOPTCD     - specifies that any current OPTCD value (from W, C or Z)
                is to be turned off.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=FSE
K* FS

    Example -     FSE mema:memb cntl

 The FSE subcommand edits a member.  The TSO FSE command is used;
 both the FSE+ product from Applied Software, Inc. and the command
 called FSE from the CBT MVS SHARE tape (file 207) are compatible
 with the interface provided by this subcommand.

 If an EDIT type keyword is entered, that keyword is passed to FSE
 as the descriptive qualifier; otherwise, a descriptive qualifier is
 chosen as follows:
   A. If the low-level qualifier of the partitioned data set name is
      one of the valid descriptive qualifiers for FSE (ASM, BASIC,
      CLIST, CNTL, COBOL, DATA, IPLI, LIST, PLI, TEXT or VSBASIC),
      that qualifier is passed to FSE.
   B. If the low-level qualifier is FORT, GOFORT is passed to FSE.
   C. Otherwise, the data type qualifier is not a valid descriptive
      qualifier and the general descriptive qualifier, DATA, is
      passed to FSE.
   SYNTAX -
     FSE  member NONUM ASIS  OLD/NEW
                 ASM/BASIC/CLIST/CNTL/COBOL/DATA/
                 FORTE/FORTG/FORTGI/FORTH/GOFORT/
                 IPLI/LIST/PLI/PLIF/TEXT/VSBASIC

 ALIASES  - FS, FSE
 DEFAULTS - member, EDIT type based on the data set name
 REQUIRED - none.
   OPERANDS -
  member  - optional, specifies the member name(s) to be passed (along
            with the data set name) to the TSO FSE command.

            Default member names, member lists, member name
            ranges and member name patterns are allowed; for
            more information, enter HELP GROUP.

  NONUM   - specifies that the member is to be edited without line
            numbers.
  ASIS    - specifies that the member is to be edited with upper and
            lower case data.
  OLD     - specifies that -PDS86- is to verify that the member
            exists before calling FSE.
  NEW     - specifies that -PDS86- is to verify that the member
            does not exist before calling FSE.

 EDIT type keywords are as follows:
  ASM     -  EDIT type is assembly
  BASIC   -  EDIT type is BASIC
  CLIST   -  EDIT type is CLIST
  CNTL    -  EDIT type is CNTL
  COBOL   -  EDIT type is COBOL
  DATA    -  EDIT type is DATA
  FORTE   -  EDIT type is FORTRAN level "E"
  FORTG   -  EDIT type is FORTRAN level "G"
  FORTGI  -  EDIT type is FORTRAN level "GI"
  FORTH   -  EDIT type is FORTRAN level "H"
  GOFORT  -  EDIT type is GOFORT
  IPLI    -  EDIT type is IPLI
  LIST    -  EDIT type is LIST
  PLI     -  EDIT type is PLI
  PLIF    -  EDIT type is PLI (F-level)
  TEXT    -  EDIT type is TEXT
  VSBASIC -  EDIT type is VSBASIC
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=HELP
K* H
K* HE
K* HEL

    Example -     HELP control s

  The HELP subcommand lists data from the HELP data set.  The TSO
  HELP command is used; if the HELP subcommand is entered without
  operands, a list of valid subcommands is displayed.
   SYNTAX -
     HELP  subcommand FUNCTION SYNTAX OPERAND/OPERAND(k)

 ALIASES  - H, HE, HEL, HELP
 DEFAULTS - none.
 REQUIRED - none.
   OPERANDS -
  subcommand - optional, specifies the name of a subcommand (or the
               alias name of a subcommand) for which HELP is to be
               displayed.  If the subcommand name is omitted, a list
               of valid subcommands is displayed.

  FUNCTION   - specifies that function information for the subcommand
               is to be displayed.
  SYNTAX     - specifies that syntax information for the subcommand
               is to be displayed.
  OPERAND(k) - specifies that information for the keyword identified
               in the (k) operand is to be displayed.  If the (k)
               operand is omitted, information on all operands of the
               subcommand will be displayed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=HISTORY
K* HI
K* HIS
K* HIST
K* HISTO
K* HISTOR

    Example -     HISTORY mema:memb

 The HISTORY subcommand displays the last linkage edit date for a
 module and lists any CSECT IDR data assigned to a load module.

 If any CSECTS in a load member were compiled by a COBOL compiler,
 several compile time options will be listed for each COBOL CSECT.

 Note: if a member is not a load module, any ISPF statistics or any
 SSI information will be displayed for the member and any HISTORY
 keyword information will be ignored.  If the LONG operand is
 specified, ISPF size statistics will be displayed in 99,999,999
 format.
   SYNTAX -
     HISTORY  member  MODULE(Partm)
                      LKED(Partl)
                      TRANS(Partt)
                      USERDATA(Partu) / SYSMOD(Partu)
                      ZAP(Partz)
                      LONG

 ALIASES  - HI, HIS, HIST, HISTO, HISTOR, HISTORY
 DEFAULTS - member, TRANS/NOTRANS from CONTROL, LKED, USERDATA, ZAP;
            but if LKED, USERDATA, ZAP or TRANS are specified, only
            the corresponding types of data will be provided.
 REQUIRED - none.
   OPERANDS -
  member         - optional, specifies the name of the load module(s)
                   for which a HISTORY summary is to be produced.

                   Default member names, member lists, member name
                   ranges and member name patterns are allowed; for
                   more information, enter HELP GROUP.

  MODULE(Partm)  - specifies that CSECTS defined by the partial name,
                   Partm, are to be listed. Partm may be entered as a
                   partial CSECT name with one to eight characters.

                   Note that if MODULE(Partm) is entered, any TRANS,
                   SYSMOD/USERDATA or ZAP keywords apply only to CSECTs
                   whose names match the partial CSECT name, Partm.

                   If the form MODULE(*) is used, the previous partial
                   name entered on any MODULE keyword will be used.
  LKED(Partl)    - specifies that if the linkage editor name matches
                   the partial name, Partl, a line identifying the
                   editor is to be listed. Partl may be entered as a
                   partial linkage editor name with one to ten
                   characters.
  SYSMOD(Partu)  - specifies that user IDR data which matches the
                   partial name, Partu, is to be listed. Partu may
                   be entered as partial IDR data with one to eight
                   characters.
                   Note that if MODULE(Partm) is also entered, any
                   SYSMOD operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  TRANS(Partt)   - specifies that CSECTS identified as having been
                   assembled or compiled by the translator defined by
                   the partial name, Partt, are to be listed. Partt
                   may be entered as a partial translator name with
                   one to ten characters.
                   Note that if MODULE(Partm) is also entered, any
                   TRANS operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  USERDATA(Partu) - specifies that user IDR data which matches the
                   partial name, Partu, is to be listed. Partu may
                   be entered as partial IDR data with one to eight
                   characters.
                   Note that if MODULE(Partm) is also entered, any
                   USERDATA operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  ZAP(Partz)     - specifies that zap IDR data which matches the
                   partial name, Partz, is to be listed. Partz may be
                   entered as partial zap IDR data with one to eight
                   characters.
                   Note that if MODULE(Partm) is also entered, any
                   ZAP operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  LONG           - display ISPF size statistics in 99,999,999 format.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=IF
K* I

    Example -     IF mema:memb changed(11/24/84:11/30/84) then(edit)

  The IF subcommand searches for members meeting defined conditions.
  The action to be taken is specified by the THEN and ELSE keywords.
  Either the THEN or ELSE keyword may be omitted; if both THEN and ELSE
  are omitted, a default of THEN(ATTRIB) is provided.

  If all conditions are met for a given member, any THEN action is
  taken for that member; otherwise, any ELSE action is taken.

   SYNTAX -
     IF  member  SINCE/BEFORE
                 TODAY/YESTERDAY/WEEK/CURRENT/BIWEEK/
                       MONTH/BIMONTH/QUARTER/HALFYEAR/YEAR/BIYEAR/
                       LAST(numdays)/DATE(mm/dd/yy)/
                       PREV0/PREV1/PREV2/PREV3/PREV4/PREV5/PREV6/PREV7/
                       PREV8/PREV9/PREV10/PREV11/PREV12/PREV13/PREV14
                 CHANGED(yyddd:yyddd) / CHANGED(mm/dd/yy:mm/dd/yy)
                 CREATED(yyddd:yyddd) / CREATED(mm/dd/yy:mm/dd/yy)
                 ABOVE(Count1)
                 ALIAS/NOALIAS
                 AMODE24/AMODE31/AMODE64/AMODEANY/NOAMODE24/NOAMODE31/
                         NOAMODE64/NOAMODEANY  (load modules only)
                 APFERR/NOAPFERR               (load modules only)
                 APPARENTALIAS/NOAPPARENTALIAS
                 AUTH/NOAUTH  or  APF/NOAPF    (load modules only)
                 BELOW(Count2)
                 BLOCKERR/MAXBLK(size)/NOBLOCKERR
                 DC/NODC                       (load modules only)
                 EDIT/NOEDIT                   (load modules only)
                 EXEC/NOEXEC                   (load modules only)
                 EXTERN/WKEXTERN               (load modules only)
                 FLEVEL/NOFLEVEL               (load modules only)
                 HASALIAS/NOHASALIAS
                 ID(Puid)/NOID/NOTID(Puid)
                 XSTATS/NOXSTATS
                 IOERR/NOIOERR
                 LKED(Partl)                   (load modules only)
                 LKEDERR/NOLKEDERR             (load modules only)
                 LOADERR/NOLOADERR             (load modules only)
                 LOADONLY/NOLOADONLY           (load modules only)
                 LRECLERR/NOLRECLERR
                 MODULE(Partm)                 (load modules only)
                 NAMEERR/NONAMEERR
                 NULL/NONULL
                 ORPHAN/NOORPHAN
                 OVERLAY/NOOVERLAY             (load modules only)
                 PACKED/NOPACKED
                 PAGE/NOPAGE                   (load modules only)
                 REFR/NOREFR                   (load modules only)
                 RENT/NORENT                   (load modules only)
                 REUS/NOREUS                   (load modules only)
                 RLDERR/NORLDERR               (load modules only)
                 RLDZERO/NORLDZERO             (load modules only)
                 RMODE24/RMODEANY/
                         NORMODE24/NORMODEANY  (load modules only)
                 SCTR/NOSCTR                   (load modules only)
                 SPFEDIT/NOSPFEDIT
                 SSI(hexdata)/SSI/NOSSI/PARTSSI(hexdata)
                 SYSMOD(Partu) / USERDATA(Partu) (load modules only)
                 TEST/NOTEST                   (load modules only)
                 TRANS(Partt)                  (load modules only)
                 TTR(Lttr:Httr)
                 USERDATA(Partu) / SYSMOD(Partu) (load modules only)
                 USERID(Puid)/NOUSERID/NOTUSERID(Puid)
                 VSLKED/NOVSLKED               (load modules only)
                 ZAP(Partz)                    (load modules only)
                 THEN(ATTRIB/ BROWSE/ DIRENTRY/ DELETE/ EDIT/ NEWML/
                      END/ FIND/ FSE/ HISTORY/ LIST/ MAP/ MEMBERS/
                      MEMLIST/ OUTCOPY/ PRINTOFF/ REVIEW/ SUBMIT/
                      SUBLIST/ TSOEDIT/ TSOLIST/ VIEW/ VERIFY)
                 ELSE(ATTRIB/ BROWSE/ DIRENTRY/ DELETE/ EDIT/ NEWML/
                      END/ FIND/ FSE/ HISTORY/ LIST/ MAP/ MEMBERS/
                      MEMLIST/ OUTCOPY/ PRINTOFF/ REVIEW/ SUBMIT/
                      SUBLIST/ TSOEDIT/ TSOLIST/ VIEW/ VERIFY)

 ALIASES  - I, IF
 DEFAULTS - member, THEN(ATTRIB) if neither THEN nor ELSE is entered
 REQUIRED - none
   OPERANDS -
  member         - optional, specifies the name of the member(s) whose
                   attributes are to be examined.

                   Default member names, member lists, member name
                   ranges and member name patterns are allowed; for
                   more information, enter HELP GROUP.

  SINCE          - dates from the specified date to the current date.
                   SINCE indicates that the implied date range (TODAY,
                   YESTERDAY, ... LAST, DATE) follows the date given.
                   For source modules, the date referenced is the ISPF
                   modification date; for load modules, it is the
                   linkage edit date.
  FROM           - dates from the specified date to the current date.
                   FROM indicates that the implied date range (TODAY,
                   YESTERDAY, ... LAST, DATE) follows the date given.
                   For source modules, the date referenced is the ISPF
                   modification date; for load modules, it is the
                   linkage edit date.
  BEFORE         - dates before (and including) the specified date.
                   BEFORE indicates that the implied date range (TODAY,
                   YESTERDAY, ... LAST, DATE) is before the given date.
                   For source modules, the date referenced is the ISPF
                   modification date; for load modules, it is the
                   linkage edit date.
  TO             - dates before (and including) the specified date.
                   TO indicates that the implied date range (TODAY,
                   YESTERDAY, ... LAST, DATE) is before the given date.
                   For source modules, the date referenced is the ISPF
                   modification date; for load modules, it is the
                   linkage edit date.
  TODAY          - a date, equivalent to LAST(0)
  YESTERDAY      - a date, equivalent to LAST(1)
  WEEK           - a date, equivalent to LAST(7)
  CURRENT        - a date, equivalent to LAST(10)
  BIWEEK         - a date, equivalent to LAST(14)
  MONTH          - a date, equivalent to LAST(30)
  BIMONTH        - a date, equivalent to LAST(60)
  QUARTER        - a date, equivalent to LAST(90)
  HALFYEAR       - a date, equivalent to LAST(183)
  YEAR           - a date, equivalent to LAST(365)
  BIYEAR         - a date, equivalent to LAST(730)
  LAST(numdays)  - a date, indicates the number of days before today.
  DATE(cdate)    - a date, indicates the actual date; it may be
                   entered in Gregorian format (mm/dd/yy),
                   ISPF format (yy/mm/dd), or Julian format (yyddd).
                   Note:  ISPF format assumed if yy is >= 60.
  PREV0          - a date, equivalent to LAST(0)
  PREV1          - a date, equivalent to LAST(1)
  PREV2          - a date, equivalent to LAST(2)
  PREV3          - a date, equivalent to LAST(3)
  PREV4          - a date, equivalent to LAST(4)
  PREV5          - a date, equivalent to LAST(5)
  PREV6          - a date, equivalent to LAST(6)
  PREV7          - a date, equivalent to LAST(7)
  PREV8          - a date, equivalent to LAST(8)
  PREV9          - a date, equivalent to LAST(9)
  PREV10         - a date, equivalent to LAST(10)
  PREV11         - a date, equivalent to LAST(11)
  PREV12         - a date, equivalent to LAST(12)
  PREV13         - a date, equivalent to LAST(13)
  PREV14         - a date, equivalent to LAST(14)
  CHANGED(yyddd: - specifies that members which were modified by an
                   ISPF editor or a ZAP program between the dates
                   specified are desired.  If only a single date is
                   entered, only that date is checked.  Note that only
                   members with ISPF statistics or members created by a
                   linkage editor are supported.
                   Either of the following examples are equivalent:
                   CHANGED(85001:85074) and  CHANGED(1/1/85:3/15/85)
  CREATED(yyddd: - specifies that members which were created with ISPF
                   statistics or by the linkage editor between the
                   dates specified are desired.  If only a single date
                   is entered, only that date is checked.
                   Either of the following examples are equivalent:
                   CREATED(85001:85074) and  CREATED(1/1/85:3/15/85)
  ABOVE(Count1)  - specifies that members with more than the number of
                   lines (amount of storage for load modules) defined
                   by the number, Count1, are desired.
  ALIAS          - specifies that alias members are desired.
  NOALIAS        - specifies that main members are desired.
  AMODE24        - specifies that modules with addressing mode 24 are
                   desired.
  NOAMODE24      - specifies that modules with addressing mode 31, 64,
                   or ANY are desired.
  AMODE31        - specifies that modules with addressing mode 31 are
                   desired.
  NOAMODE31      - specifies that modules with addressing mode 24, 64,
                   or ANY are desired.
  AMODE64        - specifies that modules with addressing mode 64 are
                   desired.
  NOAMODE64      - specifies that modules with addressing mode 24, 31,
                   or ANY are desired.
  AMODEANY       - specifies that modules with addressing mode ANY
                   are desired.
  NOAMODEANY     - specifies that modules with addressing mode 24, 64,
                   or 31 are desired.
  APFERR         - specifies that modules linked by the MVS OS/VS
                   linkage editor with invalid APF length indicators
                   are desired.
  NOAPFERR       - specifies that modules linked by the MVS OS/VS
                   linkage editor with valid APF length indicators
                   or modules linked with previous linkage editors
                   are desired.
  APPARENTALIAS  - specifies that main members whose start addresses
                   match the start address of another main member
                   are desired.
  NOAPPARENTALIAS - specifies that alias members or main members whose
                   start addresses do not match the start address of
                   another main member are desired.
  AUTH           - specifies that APF authorized modules are desired.
  NOAUTH         - specifies that non-authorized modules are desired.
  APF            - specifies that APF authorized modules are desired.
  NOAPF          - specifies that non-authorized modules are desired.
  BELOW(Count2)  - specifies that members with less than the number of
                   lines (amount of storage for load modules) defined
                   by the number, Count2, are desired.
  BLOCKERR       - specifies that members with input blocksizes
                   exceeding the DCB BLKSIZE are desired.
  MAXBLK(sizeb)  - specifies that members with input blocksizes
                   exceeding sizeb are desired.
  NOBLOCKERR     - specifies that members without blocksize errors
                   are desired.
  DC             - specifies that downward-compatible modules are
                   desired.
  NODC           - specifies that no downward-compatible modules are
                   desired.
  EDIT           - specifies that modules which can be reprocessed
                   by the linkage editor are desired.
  NOEDIT         - specifies that modules which can not be reprocessed
                   by the linkage editor are desired.
  EXEC           - specifies that EXECUTABLE modules are desired.
  NOEXEC         - specifies that non-EXECUTABLE modules are desired.
  EXTERN         - specifies that load modules with missing external
                   symbols are desired.  The MODULE keyword may also
                   be specified to search for specific missing symbols.
  WKEXTERN       - specifies that load modules missing weak external
                   symbols are desired.  The MODULE keyword may also
                   be specified to search for specific missing symbols.
  FLEVEL         - specifies that modules processed by the
                   F-level linkage editor are desired.
  NOFLEVEL       - specifies that modules not processed by the
                   F-level linkage editor are desired.
  HASALIAS       - specifies that main members which have one or more
                   aliases are desired.
  NOHASALIAS     - specifies that alias members or main members without
                   any aliases are desired.
  ID(Puid)       - specifies that members with ISPF statistics and
                   userids matching the partial name, Puid, are
                   desired.  Puid may be entered as a partial TSO
                   userid with one to eight characters.
                   ID is an alias of USERID.
  NOID           - specifies that members without ISPF statistics are
                   desired.  NOID is an alias of NOUSERID.
  NOTID(Puid)    - specifies that members without ISPF statistics or
                   members with ISPF statistics and userids which do
                   not match the partial name, Puid, are desired.
                   Puid may be entered as a partial TSO userid with
                   one to eight characters.
                   NOTID is an alias of NOTUSERID.
  XSTATS         - specifies that members with extended ISPF
                   statistics are desired.
  NOXSTATS       - specifies that members without extended ISPF
                   statistics are desired.
  IOERR          - specifies that members with I/O errors are
                   desired.
  NOIOERR        - specifies that members without I/O errors are
                   desired.
  LKED(Partl)    - specifies that modules identified as linked by the
                   linkage editor defined by the partial name, Partl,
                   are desired.  Partl may be entered as a partial
                   linkage editor IDR name with one to ten characters.
  LKEDERR        - specifies that modules with any of the following
                   illegal linkage edit attribute combinations are
                   desired:
                     1.  Modules with RENT and NOREUS attributes
                     2.  Modules with RMODEANY and AMODE24 or
                         AMODEANY attributes
                     3.  Modules with OVLY and RENT, REUS, REFR, SCTR,
                         RMODEANY, AMODE31, AMODE64, or AMODEANY
                         attributes
                     4.  Modules with TEST and NOEDIT attributes
                     5.  Modules with REUS and SCTR attributes
  NOLKEDERR      - specifies that modules with none of the following
                   illegal linkage edit attribute combinations are
                   desired:
                     1.  Modules with RENT and NOREUS attributes
                     2.  Modules with RMODEANY and AMODE24 or
                         AMODEANY attributes
                     3.  Modules with OVLY and RENT, REUS, REFR, SCTR,
                         RMODEANY, AMODE31, AMODE64, or AMODEANY
                         attributes
                     4.  Modules with TEST and NOEDIT attributes
                     5.  Modules with REUS and SCTR attributes
  LOADERR        - specifies that modules which cause ABENDs when
                   they are LOADED are desired.
  NOLOADERR      - specifies that modules which can be LOADED
                   without errors are desired.
  LOADONLY       - specifies that modules marked for LOAD ONLY
                   are desired.
  NOLOADONLY     - specifies that modules not marked for LOAD ONLY
                   are desired.
  LRECLERR       - specifies that members with any of the following
                   errors are desired:
                     a.  Input blocksize/LRECL not integral (RECFM=F)
                     b.  Input LRECL exceeding maximum LRECL (RECFM=V)
                     c.  Input LRECL less than 4 bytes (RECFM=V)
  NOLRECLERR     - specifies that members with none of the following
                   LRECL errors are desired:
                     a.  Input blocksize/LRECL not integral (RECFM=F)
                     b.  Input LRECL exceeding maximum LRECL (RECFM=V)
                     c.  Input LRECL less than 4 bytes (RECFM=V)
  MODULE(Partm)  - specifies that modules with CSECTS defined by the
                   partial name, Partm, are desired.  Partm may be
                   entered as a partial CSECT name with one to eight
                   characters.

                   Note that if MODULE(Partm) is entered, any TRANS,
                   SYSMOD/USERDATA or ZAP keywords apply only to CSECTs
                   whose names match the partial CSECT name, Partm.

                   If the form MODULE(*) is used, the previous partial
                   name entered on any MODULE keyword will be used.
  NAMEERR        - specifies that members whose member names are not
                   upper case alphanumeric or whose first character
                   is numeric are desired.
  NONAMEERR      - specifies that members whose member names are
                   upper case alphanumeric and whose first character
                   is not numeric are desired.
  NULL           - specifies that members with no data are desired.
  NONULL         - specifies that members with some data are desired.
  ORPHAN         - specifies that alias members which have no
                   associated main member are desired.
  NOORPHAN       - specifies that main members or alias members which
                   have an associated main member are desired.
  OVERLAY        - specifies that OVERLAY modules are desired.
  NOOVERLAY      - specifies that non-OVERLAY modules are desired.
  PACKED         - specifies that ISPF packed source members are
                   desired.
  NOPACKED       - specifies that ISPF packed source members are not
                   desired.
  PAGE           - specifies that modules marked for loading on
                   a page boundary are desired.
  NOPAGE         - specifies that modules not marked for loading on
                   a page boundary are desired.
  REFR           - specifies that refreshable modules are desired.
  NOREFR         - specifies that non-refreshable modules are desired.
  RENT           - specifies that reentrant modules are desired.
  NORENT         - specifies that non-reentrant modules are desired.
  REUS           - specifies that reusable modules are desired.
  NOREUS         - specifies that non-reusable modules are desired.
  RLDERR         - specifies that modules linked since OS/VS whose
                   RLD/CONTROL count from the directory does not match
                   the first RLD entry are desired.
  NORLDERR       - specifies that modules whose RLD/CONTROL count
                   from the directory match the first RLD entry or
                   modules linked before OS/VS are desired.
  RLDZERO        - specifies that modules whose RLD/CONTROL count is
                   zero are desired.
  NORLDZERO      - specifies that modules whose RLD/CONTROL count is
                   not zero are desired.
  RMODE24        - specifies that modules with residence mode 24 are
                   desired.
  NORMODE24      - specifies that modules with residence mode ANY
                   are desired.
  RMODEANY       - specifies that modules with residence mode ANY
                   are desired.
  NORMODEANY     - specifies that modules with residence mode 24 are
                   desired.
  SCTR           - specifies that scatter-loaded modules are desired.
  NOSCTR         - specifies that no scatter-loaded modules are desired.
  SPFEDIT        - specifies that members which are currently in-use
                   by an ISPF EDIT session are desired.
  NOSPFEDIT      - specifies that members which are not currently
                   in-use by an ISPF EDIT session are desired.
  SSI(hexdata)   - specifies that members with matching SSI data are
                   desired.  Note that this is implemented as a generic
                   search matching SSI characters from left to right
                   for the number of characters entered.
  SSI            - specifies that members with SSI data are desired.
  NOSSI          - specifies that members without SSI data are desired.
  PARTSSI(hx)    - specifies that members with matching SSI data are
                   desired.  Note that this is implemented as a pattern
                   search matching SSI digits as a string anywhere in
                   the SSI field of the member.
  SYSMOD(Partu)  - specifies that modules with user IDR data which
                   matches the partial name, Partu, are desired.
                   Partu may be entered as partial IDR data with
                   one to eight characters.
                   Note that if MODULE(Partm) is also entered, the
                   SYSMOD operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  TEST           - specifies that modules with the TEST attribute
                   are desired.
  NOTEST         - specifies that modules without the TEST attribute
                   are desired.
  TRANS(Partt)   - specifies that modules with CSECTS identified as
                   having been assembled or compiled by the translator
                   defined by the partial name, Partt, are desired.
                   Partt may be entered as a partial translator IDR
                   name with one to ten characters.
                   Note that if MODULE(Partm) is also entered, the
                   TRANS operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  TTR(Lttr:Httr) - specifies that members whose start address is in
                   the specified TTR range are desired.
                   Lttr defaults to 0 and may be entered as a
                   hexadecimal TTR value from 0 through FFFFFF.
                   Httr defaults to FFFFFF and may be entered as
                   a hexadecimal TTR value from 0 through FFFFFF.
  USERDATA(Partu) - specifies that modules with user IDR data which
                   matches the partial name, Partu, are desired.
                   Partu may be entered as partial IDR data with
                   one to eight characters.
                   Note that if MODULE(Partm) is also entered, the
                   USERDATA operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  USERID(Puid)   - specifies that members with ISPF statistics and
                   userids matching the partial name, Puid, are
                   desired.  Puid may be entered as a partial TSO
                   userid with one to eight characters.
                   USERID is an alias of ID.
  NOUSERID       - specifies that members without ISPF statistics are
                   desired.  NOUSERID is an alias of NOID.
  NOTUSERID(Puid) - specifies that members without ISPF statistics or
                   members with ISPF statistics and userids which do
                   not match the partial name, Puid, are desired.
                   Puid may be entered as a partial TSO userid with
                   one to eight characters.
                   NOTUSERID is an alias of NOTID.
  VSLKED         - specifies that modules linked by the MVS OS/VS
                   linkage editor are desired.
  NOVSLKED       - specifies that modules not linked by the MVS OS/VS
                   linkage editor are desired.
  ZAP(Partz)     - specifies that modules with zap IDR data which
                   matches the partial name, Partz, are desired.
                   Partz may be entered as partial zap IDR data with
                   one to eight characters.
                   Note that if MODULE(Partm) is also entered, the
                   ZAP operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  THEN(action)   - The THEN subcommand is executed if all conditions
                   are met for a member.  The subcommand may be
                   ATTRIB, BROWSE, DIRENTRY, DELETE, EDIT, END, FIND,
                   FSE, HISTORY, LIST, MAP, MEMBERS, MEMLIST, NEWML,
                   OUTCOPY, PRINTOFF, REVIEW, SUBMIT, SUBLIST, TSOEDIT,
                   TSOLIST, VIEW or VERIFY.

                   Note that if neither a THEN nor an ELSE operand is
                   entered, THEN(ATTRIB) is the default condition.

                   NEWML is similar to MEMLIST except it also performs
                   a MEMLIST RESET.
  ELSE(action)   - The ELSE subcommand is executed if any condition is
                   not met for a member.  The subcommand may be
                   ATTRIB, BROWSE, DIRENTRY, DELETE, EDIT, END, FIND,
                   FSE, HISTORY, LIST, MAP, MEMBERS, MEMLIST, NEWML,
                   OUTCOPY, PRINTOFF, REVIEW, SUBMIT, SUBLIST, TSOEDIT,
                   TSOLIST, VIEW or VERIFY.

                   Note that if neither a THEN nor an ELSE operand is
                   entered, THEN(ATTRIB) is the default condition.

                   NEWML is similar to MEMLIST except it also performs
                   a MEMLIST RESET.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ISPF
K* IS
K* ISP

    Example -     ISPF 3.3

  The ISPF subcommand invokes the ISPF primary panel with any option
  (for additional information on the relationship of -PDS86- and the
  ISPF subcommand, enter HELP DIALOG).
   SYNTAX -
     ISPF  option

 ALIASES  - IS, ISP, ISPF
 DEFAULTS - none.
 REQUIRED - none.
   OPERANDS -
  option  - optional, specifies a option (such as 3.3) so that the
            primary panel can be bypassed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ISPMODE
K* ISPM
K* ISPMO
K* ISPMOD

    Example -     ISPMODE

  The ISPMODE subcommand switches -PDS86- to a full screen
  session display mode.  Subcommands entered and the outputs from
  internal -PDS86- subcommands are maintained in a session log.

  There can be nine session logs and they can be displayed with
  the SHOW command.  Enter SHOW ? to display the prompting panel.

  SHOW operands:
     n       - switch to one of 9 log tables (value 1 to 9)
     RESET   - Clear table before building a new table.
     NODISPL - after switching or resetting the table do not display it
               but return to previous function table display

  For more specific information on ISPMODE, enter the ISPF HELP command
  while in ISPMODE.

  For additional information on the relationship of -PDS86- and
  the ISPMODE subcommand, enter HELP DIALOG.


  In the following, ISPMODE processing provided in -PDS86- is
  described in more detail:

   A.  When ISPMODE is active, the PUTLINE and PUTGET routines are
       monitored for data.

       1.  As each output line is added by PUTLINE, ISPMODE adds
           another session table entry.

       2.  If an output checkpoint (default is 5000 output lines) is
           reached for a subcommand, ISPMODE positions the session
           display to the beginning of the output of this subcommand
           and allows the user to continue or terminate.  Note: this
           screen must be responded to before any -PDS86- subcommands
           may be entered.  Valid responses are as follows:
             a.  0   - continue with the subcommand's output
             b.  END - terminate the subcommand
             c.  F   - search the ISPMODE log
             d.  X   - clear portions of the ISPMODE log
             e.  an ISPF command or PF key

       3.  When a PUTGET is issued by -PDS86-, ISPMODE positions the
           session display to the beginning of the output of the
           just completed subcommand.  A -PDS86- subcommand, an ISPF
           command, a PF key or an ISPMODE session control code may
           be entered at this time.

   B.  The ISPMODE session (or special) control codes are as follows:

       1 - Suspend ISPMODE: this control code terminates ISPMODE,
           retains the session log and enters line mode processing.
           ISPMODE can be restarted using the previous session log
           with another ISPMODE subcommand.  At the end of -PDS86-
           processing, the session log is always discarded.

           Note:  XISPMODE is an alias for this control code.

       2 - Clear log: discards all lines of the session log.

       4 - Sets the sublist to members in the current MEMLIST.  Same as
           SUBLIST=MEMLISI.

       5 - Check aliases: checks main and alias members by TTR
           in current MEMLIST.

       6 - MEMLIST (all members): invokes a scrollable member list
           for all members.  PDS line commands can be entered on
           individual member lines.

       7 - Output ISPMODE table: invokes a panel which prompts for
           a SYSOUT class or data set name which is to contain a
           copy of the ISPMODE table.

       8 - View log.

       9 - Swap panels (NORM, ALT, DUAL).

           NORM - Swap to normal display (left display)
           ALT  - Swap to alternate table display (right display)
           DUAL - Swap to dual line or 3rd table display
                  (LEFT and RIGHT scroll commands or PFK keys
                   can be used if set up during installation)

       F - Find log: finds character strings in the session view
           log and positions the current display start location
           and cursor position on the current line.

       O - Options: subcommand selection menu.

       X - Clear log: discards some portion (ALL, ABOVE or BELOW)
           of the session log relative to the current table location.

           X ABOVE or UP    -  delete all lines above the current line
           X BELOW or DOWN  -  delete all lines below the current line
           X ALL            -  delete all lines
           X -nnn           -  delete nnn lines above the current line
           X nnn            -  delete nnn lines below the current line

       = - sets the sublist to members in the current MEMLIST.  Same as
           SUBLIST=MEMLISI.

       * - sets the MEMLIST to the current member group.  Same as
           MEMLIST *.

      FN - ISPMODE function selection.

           fn.lista  -  jump to list allocation prompt
           fn.listc  -  jump to list file prompt
           fn.listf  -  jump to list file prompt
           fn.listv  -  jump to list volume prompt

      FU - ISPMODE function status display.


  ISPMODE notes:

    1.  Only the first 158 characters of an output line are retained
        in the output table; this is a consideration for the LIST and
        FIND subcommands with output formats NUM, SNUM and NONUM.

    2.  Echoed input lines are identified with a > character in the
        first log position and any continuation lines are identified
        by a - character in the first log position.

    3.  The f command is a log search command and not the -PDS86-
        FIND subcommand.  If you want the FIND subcommand, enter fi,
        fin or find.

    4.  ISPF commands FIND, RFIND, RCHANGE, LEFT and RIGHT are not
        functional with ISPF table handling.

    5.  Subcommands END, HELP and TSO are intercepted by ISPF instead
        of the -PDS86- program; if you wish to use these subcommands,
        you must use an abbreviated name (EN, H, HE, HEL and T or TS).

    6.  Since ISPMODE only displays -PDS86- output at a checkpoint or
        at the completion of a subcommand, output from a subcommand
        cannot be monitored as it is produced.  Therefore, if -PDS86-
        is in a CPU loop, the screen will lock until an attention is
        received.  At that time, any outputs generated will be
        displayed and an appropriate response may be given.

    7.  If a -PDS86- subcommand is too long for the 48 character input
        field, you may enter the first 47 or less characters followed
        by a + to indicate more data is required and a continuation
        panel with more room for operand entry will be provided.

    8.  The EXEC processor does not work as usual; CLIST processing
        is not currently supported from ISPMODE or MEMLIST.

        Suspend ISPF mode (special control code 1) or invoke PDS with
        the XISPMODE option.  When PDS subcommands are entered from a
        CLIST, YES/NO prompts are not provided; instead, YES responses
        are assumed in each case.

    9.  The CHANGE command with no operands presents a data set name
        prompting panel.

   10.  The COLS subcommand inserts a line into the session log
        containing column tick marks.  There are 4 variations of COLS.

        >COLS
        ....+....1....+....2....+....3....+....4....+....5....+....6....

        >COLS ISPF
        ----+----1----+----2----+----3----+----4----+----5----+----6----

        >COLS GLOBAL
        --------  ASSEMBLY  DEFAULT   ----------------------------------

        >COLS SUPERC
        SRCHFOR  ----+----1----+----2----+----3----+----4----+----5----+

   11.  The ST line command (on a MEMLIST Load Member List entry)
        will display the status of a load module by issuing the ATTRIB,
        HISTORY, and MAP subcommands.

   12.  / and ? are synonyms for the O(ptions) line command in all
        dialog table displays.

   13.  Special line commands:

       =    - repeat previous line command
       S    - SELECT line command
       K    - kill and clear all following line commands
       O    - provide line command operand assistance
       X    - delete this line from the table display
       UT   - extended/user/installation utility command panel
       TAG  - tag member with *TAG* in the DATA field
       LOG  - format and copy line to session log

   14.  Point-and-shoot column headers in all dialog table displays
        will change the sort direction on successive shots.

        To easily identify which column headers can be sorted on,
        use the ISPF PSCOLOR command to change the default
        point-and-shoot color to something other than TURQ.

   SYNTAX -
     ISPMODE

 ALIASES  - ISPM, ISPMO, ISPMOD, ISPMODE
   OPERANDS -
  no operands are supported.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ISPXEQ
K* ISPXE
K* ISPX

    Example -     ISPXEQ LISTA OPEN

  The ISPXEQ subcommand is normally used to enter -PDS86- in LISTA
  or LISTV dialog mode instead of the usual ISPMODE or MEMLIST mode.
   SYNTAX -
     ISPXEQ command

 ALIASES  - ISPX, ISPXE, ISPXEQ
 DEFAULTS - none.
 REQUIRED - none.
   OPERANDS -
  command  - The LISTA or LISTV command to be executed after -PDS86-
             initialization.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=KLEAR
K* K

    Example -     KLEAR

  The K OR KLEAR subcommand clears the screen in non-dialog mode.

  The K line command in dialog mode clears the data area.

   SYNTAX -
     KLEAR

 ALIASES  - K
   OPERANDS -
  no operands are supported.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LCS

    Example -     LCS mema:memb

 The LCS subcommand lists the Panvalet® Library Control System (LCS)
 information for a load module.  The User IDR contains the source
 member name, version, date and time of update, and Panvalet library
 dsname for a dummy CSECT.

  IDENTIFY HIGDUMMY('LCSCNTL         å SN1002M0 TECH.DATAMGMT')
 4CCCDECCE4CCCCEDDE47DCECDED00000010143EDFFFFDF1ECCC4CCECDCDE754
 094553968089744448DD3323533000004354782510024033538B41314743DD0
                     |           |  |  |       ||
                     |           |  |  |       |v
                     v           |  |  |       |Dsname LLQ
                     Control     |  |  v       |
                                 |  |  Member  v
                                 |  |          Version
                                 |  v
                                 |  Time
                                 v
                                 Date

 Note:  This is a user modification from The Hartford Group.
        "Belle, Phyllis R (ISD, IT)" <pbelle@thehartford.com>

   SYNTAX -
     LCS  memgroup

 ALIASES  - none.
 DEFAULTS - none.
 REQUIRED - memgroup.
   OPERANDS -
  memgroup      - specifies the name of the load module(s) for
                  which the Panvalet® Library Control System (LCS)
                  information is to be produced.

                  Default member names, member lists, member name
                  ranges and member name patterns are allowed; for
                  more information, enter HELP GROUP.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LIST
K* L
K* LI
K* LIS

    Example -     LIST mema:memb

  The LIST subcommand displays data from a member.

  Unprintable characters for 3270-type devices are translated to
  periods before they are displayed.

  The LIST formats are NUM, SNUM, NONUM, LBLOCK, LDUMP, BLOCK and DUMP;
  for load modules, the NUM, SNUM and NONUM formats are equivalent
  to the LDUMP format.

  The default format is initially NUM; however, each time a format
  operand is entered on a LIST, FIND or REPLACE subcommand, the value
  entered is used as the output format for subsequent LIST, FIND and
  REPLACE subcommands.  Also, note the following:
    A. Formats NUM, SNUM and NONUM limit the display length for logical
       records to 256 characters.
    B. Formats BLOCK and DUMP apply to physical records; the other
       formats apply to logical records; and for load modules, LBLOCK
       and LDUMP formats apply to CSECT data.
   SYNTAX -
     LIST  member NUM/SNUM/NONUM/LBLOCK/LDUMP/BLOCK/DUMP
                  OFFSET(Hx) MODULE(Partm)
                  SKIPREC(n) MAXIN(n) MAXOUT(n)
                  SKIPCOL(n) MAXLEN(n)

 ALIASES  - L, LI, LIS, LIST
 DEFAULTS - member, NUM or previous LIST/FIND/REPLACE format
 REQUIRED - none.
   OPERANDS -
  member     -  optional, specifies the name of the member(s) to be
                listed.

                Default member names, member lists, member name
                ranges and member name patterns are allowed; for
                more information, enter HELP GROUP.

  LIST format keywords are as follows:
  NUM        -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) of
                each logical record is examined; if the field is not
                numeric, formatting is switched to NONUM mode for the
                remainder of the member.

                For ISPF-saved members, the high-order six digits of
                the line number field is formatted; otherwise, the
                low-order six digits of the line number field is
                formatted by suppressing leading zeroes.  The line
                number segment is followed by a blank and up to 249
                characters of data from a logical record.
  SNUM       -  The line number field (the last 8 bytes for a fixed-
                format record or the first 8 otherwise) is discarded.
                Up to 256 bytes from a logical record are displayed.
  NONUM      -  Up to 256 bytes from a logical record are displayed.
  LBLOCK     -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record) and segments of 64 characters
                surrounded by asterisks.

                Note: for load modules, only CSECT data will be
                displayed and if the partial name Partm is entered
                in a MODULE operand, only those CSECT or ENTRY names
                matching Partm will be displayed.  CSECT records
                are formatted with two hexadecimal offsets (a module
                offset and a CSECT offset) and segments of 64
                characters surrounded by asterisks.
  LDUMP      -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.

                Note: for load modules, only CSECT data will be
                displayed and if the partial name Partm is entered in
                a MODULE operand, only those CSECT or ENTRY names
                matching Partm will be displayed.  CSECT records are
                formatted with two hexadecimal offsets (a module offset
                and a CSECT offset), segments of up to 32 characters of
                hexadecimal data and up to 16 bytes of characters
                surrounded by asterisks.
  BLOCK      -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record) and segments of 64 characters
                surrounded by asterisks.
  DUMP       -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.
  LIST control keywords are as follows:
  OFFSET(Hx)  - for LBLOCK and LDUMP formats only; Hx may be entered
                as a 1 to six digit hexadecimal number to specify
                the module offset at which the display is to begin.

                If both MODULE AND OFFSET keywords are entered, the
                offset applies to each module selected.
  MODULE(Partm)-for LBLOCK or LDUMP formats only; Partm may be entered
                as a 1 to 8 byte partial external name to limit the
                CSECT or ENTRY names to be displayed to those matching
                the partial name Partm.

                If the form MODULE(*) is used, the previous partial
                name entered on any MODULE keyword will be used.

                If both MODULE AND OFFSET keywords are entered, the
                offset applies to each module selected.
  SKIPREC(n)  - n is coded as 0 through 9999999 to specify the number
                of logical records (physical records for BLOCK or
                DUMP formats) to ignore at the beginning of a member.
  MAXIN(n)    - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to input for a member after
                satisfying any SKIPREC operand.
  MAXOUT(n)   - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to output for a member.
  SKIPCOL(n)  - n is coded as 0 through 99999 to specify the number
                of columns to ignore at the beginning of each logical
                record (physical record for BLOCK or DUMP formats).

                Note:  for NUM or SNUM output format with record
                format V, SKIPCOL(0) refers to the first data position
                after the line number field.
  MAXLEN(n)   - n is coded as 0 through 99999 to specify the maximum
                length of a logical record (physical record for BLOCK
                or DUMP formats) to display.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LMA
K* LM

    Example -     LMA mema:memb

 The LMA subcommand invokes the IBM Debug Tool Load Module Analyzer
 (EQALMA) program to display an analysis of a load module.

   SYNTAX -
     LMA  memgroup
                   LOUD
                   SHOWLIB
                   OSVSONLY
                   CKVOLFPRS
                   LEINFO
                   LESCAN
                   LISTLD
                   DATEFMT(fmt)
                   SORTBY(field)

 ALIASES  - LM
 DEFAULTS - DATEFMT(YYYYMMDD), SORTBY(OFFSET)
 REQUIRED - memgroup.
   OPERANDS -
  memgroup      - specifies the name of the load module(s)
                  for which a load module analysis is to be produced.

                  Default member names, member lists, member name
                  ranges and member name patterns are allowed; for
                  more information, enter HELP GROUP.

  LOUD          - print values read from EQASYSPF and EQPGMNM.
  SHOWLIB       - show all output for system library routines.
  OSVSONLY      - suppress output except for OS/VS COBOL programs
                  (do not use with CKVOLFPRS).
  CKVOLFPRS     - check for volatile floating point registers.
  LEINFO        - include output extracted from Language Environment
                  prologues.
  LESCAN        - scan for Language Environment entry points that do
                  not correspond to external entry points.
  LISTLD        - includes all Label Definitions in addition to CSECTs
                  in the output.
  DATEFMT(fmt)  - format translator dates in this format.
                  YYYYMMDD - format dates as YYYY/MM/DD
                  MMDDYYYY - format dates as MM/DD/YYYY
                  DDMMYYYY - format dates as DD/MM/YYYY
  SORTBY(field) - sort CSECT's in this order.
                  OFFSET   - sort by offset in load module
                  NAME     - sort by CSECT name
                  PROGRAM  - sort by Translator program number
                  LANGUAGE - sort by Source language
                  DATE     - sort by Translation date
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LOAD
K* LO
K* LOA
K* SEPARATE
K* SEP
K* SEPA
K* SEPAR
K* SEPARA
K* SEPARAT

    Example -     LOAD thismem output.lib

 The LOAD subcommand splits a member into it's component members.
 The input to LOAD is assumed to be one or more members separated
 by "./ ADD NAME=" statements.  The input member is typically
 created by the OFFLOAD subcommand.

 Note that ISPF statistics are preserved if they exist.
 If extended ISPF statistics: 99,999,999 max for SIZE and INIT.

 The LOAD subcommand invokes the PDSLOAD program (CBT 093).

   SYNTAX -
     LOAD member output.dataset  LIST/NOLIST
                                 OLD/SHR/NEW
                                         TRK/CYL DIR(num) SPACE(pri,sec)
                                         VOLUME(volser)

 ALIASES  - LO, LOA, LOAD, SEP, SEPA, SEPAR, SEPARA, SEPARAT, SEPARATE
 DEFAULTS - SHR, LIST
 REQUIRED - member, output.dataset
   OPERANDS -
  member        - identifies the source of the input for load.

  output.data   - identifies the output data set.  This should be a
                  partitioned data set.  Standard TSO dsname syntax
                  should be used.

  LIST          - specifies that all messages are to be displayed.
  NOLIST        - specifies that no messages are to be displayed.
  OLD           - obtain exclusive use of the output data set.
  SHR           - allow shared use of the output data set.
  NEW           - specifies that the output data set is to be created.
                  When NEW is specified, TRK/CYL, DIR, SPACE, and
                  VOLUME keywords may also be specified.
  TRK           - specifies that the output data set is to be allocated
                  in tracks.
  CYL           - specifies that the output data set is to be allocated
                  in cylinder units.
  DIR(num)      - specifies that the number of directory blocks for the
                  output data set.  If DIR is not entered, the default
                  is 150.
  SPACE(p,s)    - specifies the primary and secondary quantities for
                  the output data set in track or cylinder units.

                  If TRK or CYL is not entered but SPACE is entered,
                  TRK is the default allocation quantity.

                  If SPACE is not entered, the default is (15,15).
  VOLUME(vo)    - for NEW data sets, specifies the output volume name.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=MAP
K* M
K* MA

    Example -     MAP mema:memb

 The MAP subcommand lists the CSECT structure of a load module.
 This map is similar in nature to the output produced by the MAP
 option of the linkage editor.

 Note that unresolved external references are also displayed by
 this subcommand.
   SYNTAX -
     MAP  member  FULL/SHORT/ENTRY/
     RELINK/JCL   IEBUPDTE
     MODULE(Partm)

 ALIASES  - M, MA, MAP
 DEFAULTS - member, FULL
 REQUIRED - none.
   OPERANDS -
  member        - optional, specifies the name of the load module(s)
                  for which a module MAP is to be produced.

                  Default member names, member lists, member name
                  ranges and member name patterns are allowed; for
                  more information, enter HELP GROUP.

  FULL          - a full CSECT map is to be provided; this option also
                  provides the name of the corresponding main module
                  for alias members unless CONTROL NOALIASINFO is in
                  effect.
  SHORT         - a CSECT map is to be provided with the following
                  information omitted:
                    * entry names within CSECTS
                    * missing weak external references
                    * alias module names
  ENTRY         - only the ENTRY point symbol is to be displayed.
  RELINK        - JCL and linkage editor control statements are to
                  be generated for use in relinking this module.
  JCL           - JCL and linkage editor control statements are to
                  be generated for use in relinking this module.
  IEBUPDTE      - used in conjunction with RELINK/JCL to place
                  IEBUPDTE/PDSLOAD ./ ADD NAME=member statements
                  before each member output which can later be used
                  to build a PDS for SMP/E MCS use.
  MODULE(Partm) - specifies a partial external name, which is used to
                  mask entry symbols and CSECT names in the member.
                  Partm may be entered as a partial external name
                  with one to eight characters.

                  If the form MODULE(*) is used, the previous partial
                  name entered on any MODULE keyword will be used.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=MATCH
K* MATC
K* MAT
K* COMPDIR
K* COMPDI
K* COMPD

    Example -     MATCH pds

 The MATCH subcommand invokes the Bill Godfrey PDSMATCH program
 to compare the directory and data from two PDS's.  Members are said
 to match if their names, and optionally their userdata, or data are
 the same.

 The MATCH subcommand is useful in comparing two PDS's which
 contain members with a known relationship (e.g., a PDS
 containing a new level of a software product).  BSAM is used to
 read the data blocks when the DATA operand is specified.

 PDSMATCH messages:

 member    <-- NEWER  member    LIBRARY1 IS MORE RECENT
 member    NEWER -->  member    LIBRARY2 IS MORE RECENT
 member    <UNEQUAL>  member    LIBRARY DATA IS NOT SAME
 member                         MEMBER IN LIBRARY1 ONLY
                      member    MEMBER IN LIBRARY2 ONLY
 member    *********  member    NEITHER MEMBER HAS USERDATA
 member    *********  member    NON-SPF USER DATA EQUAL
 member    *********  member    NON-SPF USER DATA UNEQUAL
 member    *********  member    SPF STATS DIFFER BUT NOT IN DATE
 member    *********  member    ONLY LIBRARY2 HAS SPF STATS
 member    *********  member    ONLY LIBRARY1 HAS SPF STATS
   SYNTAX -
     MATCH input.pds             NEONLY/EQONLY
                                 DATA/USER
                                 CHANGED/NOCHANGED/DIRCHANGE/NODIRCHANGE
                                 VOLUME(volser)
                                 SUBLIST

 ALIASES  - MAT, MATC, MATCH
 DEFAULTS - NEONLY
 REQUIRED - input.pds
   OPERANDS -
  input.pds     - identifies the input pds whose directory and
                  data is to be matched against the current pds.
                  This should be a partitioned data set.  Standard
                  TSO dsname syntax should be used.

  NEONLY        - only members that don't match will be listed.
  EQONLY        - only members that match will be listed.
  DATA          - members that are present in both libraries
                  will be compared for matching data.
                  If two members have the same name and both are
                  empty, they are treated as unequal,
                  with a unique message for this case.
  USER          - members that are present in both libraries
                  will be compared for matching userdata.
                  userdata consists of up to 64 bytes of data
                  in the directory entry which is stowed by
                  the Linkage Editor, ISPF Edit, REVEDIT,
                  PDS REPLACE subcommand, and others.
                  If two members have the same name and neither
                  has any userdata, they are treated as unequal,
                  with a unique message for this case.
  CHANGED       - list members that are either not present in
                  the input compare data set or those members which
                  do not contain identical data.
                  CHANGED is equivalent to entering:  NEONLY, DATA
  NOCHANGED     - list members that are present in the input
                  compare data set and whose members contain
                  identical data.
                  NOCHANGED is equivalent to entering:  EQONLY, DATA
  DIRCHANGE     - list members that are either not present in
                  the input compare data set or those members which
                  do not have identical directory entries.
                  DIRCHANGE is equivalent to entering:  NEONLY, USER
  NODIRCHANGE   - list members that are present in the input
                  compare data set and whose members have identical
                  directory entries.
                  NODIRCHANGE is equivalent to entering:  EQONLY, USER
  VOLUME(volser)- specifies the volume name if the input pds
                  is not cataloged.
  SUBLIST       - build a new sublist with the compare list results.
                  If no members meet the comparison criteria, a null
                  sublist is the result.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=MEMBERS
K* ME
K* MEM
K* MEMB
K* MEMBE
K* MEMBER

    Example -     MEMBERS mema:memb

   The MEMBERS subcommand lists member names from the data set
   directory.  The members in the specified member group are
   displayed using the PDS165I message.

   Note that the MEMBERS subcommand may be used to check member names
   in a given group before invoking another subcommand which processes
   member groups.

   SYNTAX -
     MEMBERS  memgroup COUNT / NOCOUNT

 ALIASES  - ME, MEM, MEMB, MEMBE, MEMBER, MEMBERS
 DEFAULTS - memgroup  COUNT
 REQUIRED - none.
   OPERANDS -
  memgroup - optional, specifies the group of members whose names
             are to be displayed.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

  COUNT    - specifies that a message is to be issued to display the
             number of members in the displayed group.
  NOCOUNT  - specifies that no number of members message is required.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=MEMLIST
K* MEML
K* MEMLI
K* MEMLIS
K* ML

    Example -     MEMLIST mema:memb

   The MEMLIST subcommand provides a scrollable member list display
   on which -PDS86- subcommands can be entered as line commands to
   process individual members.  In addition, ISPF commands, normal
   -PDS86- subcommands and session control codes may be entered to
   the right of COMMAND ===>

   MEMLIST processing includes the ISPMODE session display; thus,
   subcommands entered and their outputs are maintained in the
   ISPMODE log; more specific information can be obtained from the
   ISPF tutorial panels by entering the ISPF HELP command while in
   MEMLIST mode.

   If a -PDS86- subcommand is too long for the 48 character input
   field, you may enter the first 47 or less characters followed by
   a + to indicate more data is required and a continuation panel
   with more room for operand entry will be provided.

   For additional information on the relationship of -PDS86- and the
   MEMLIST subcommand, enter HELP DIALOG; for further information on
   ISPMODE, enter HELP ISPMODE.
   SYNTAX -
     MEMLIST  memgroup SINCE/BEFORE
                 TODAY/YESTERDAY/WEEK/CURRENT/BIWEEK/
                       MONTH/BIMONTH/QUARTER/HALFYEAR/YEAR/BIYEAR/
                       LAST(numdays)/DATE(mm/dd/yy)/
                       PREV0/PREV1/PREV2/PREV3/PREV4/PREV5/PREV6/PREV7/
                       PREV8/PREV9/PREV10/PREV11/PREV12/PREV13/PREV14
                 CHANGED(yyddd:yyddd) / CHANGED(mm/dd/yy:mm/dd/yy)
                 CREATED(yyddd:yyddd) / CREATED(mm/dd/yy:mm/dd/yy)
                 ABOVE(Count1)
                 ALIAS/NOALIAS
                 AMODE24/AMODE31/AMODE64/AMODEANY/NOAMODE24/NOAMODE31/
                         NOAMODE64/NOAMODEANY  (load modules only)
                 AUTH/NOAUTH  or  APF/NOAPF    (load modules only)
                 BELOW(Count2)
                 DC/NODC                       (load modules only)
                 EDIT/NOEDIT                   (load modules only)
                 EXEC/NOEXEC                   (load modules only)
                 FLEVEL/NOFLEVEL               (load modules only)
                 ID(Puid)/NOID/NOTID(Puid)
                 XSTATS/NOXSTATS
                 HASALIAS/NOHASALIAS
                 LKED(Partl)                   (load modules only)
                 LOADONLY/NOLOADONLY           (load modules only)
                 MODULE(Partm)                 (load modules only)
                 NULL/NONULL
                 ORPHAN/NOORPHAN
                 OVERLAY/NOOVERLAY             (load modules only)
                 PAGE/NOPAGE                   (load modules only)
                 REFR/NOREFR                   (load modules only)
                 RENT/NORENT                   (load modules only)
                 REUS/NOREUS                   (load modules only)
                 RMODE24/RMODEANY/
                         NORMODE24/NORMODEANY  (load modules only)
                 SCTR/NOSCTR                   (load modules only)
                 SSI(hexdata)/SSI/NOSSI/PARTSSI(hexdata)
                 SYSMOD(Partu) / USERDATA(Partu) (load modules only)
                 TEST/NOTEST                   (load modules only)
                 TRANS(Partt)                  (load modules only)
                 TTR(Lttr:Httr)
                 USERDATA(Partu) / SYSMOD(Partu) (load modules only)
                 USERID(Puid)/NOUSERID/NOTUSERID(Puid)
                 VSLKED/NOVSLKED               (load modules only)
                 ZAP(Partz)                    (load modules only)
                 RESET/NORESET
                 LKEDDATE/NOLKEDDATE           (load modules only)

 ALIASES  - MEML, MEMLI, MEMLIS, MEMLIST
 DEFAULTS - memgroup, NORESET, LKEDDATE, SINCE
 REQUIRED - none.
   OPERANDS -
  memgroup       - optional, specifies the group of members
                   to be contained in the scrollable member
                   list.

                   Default member names, member lists, member name
                   ranges and member name patterns are allowed; for
                   more information, enter HELP GROUP.

  SINCE          - dates from the specified date to the current date.
                   SINCE indicates that the implied date range (TODAY,
                   YESTERDAY, ... LAST, DATE) follows the date given.
                   For source modules, the date referenced is the ISPF
                   modification date; for load modules, it is the
                   linkage edit date.
  FROM           - dates from the specified date to the current date.
                   FROM indicates that the implied date range (TODAY,
                   YESTERDAY, ... LAST, DATE) follows the date given.
                   For source modules, the date referenced is the ISPF
                   modification date; for load modules, it is the
                   linkage edit date.
  BEFORE         - dates before (and including) the specified date.
                   BEFORE indicates that the implied date range (TODAY,
                   YESTERDAY, ... LAST, DATE) is before the given date.
                   For source modules, the date referenced is the ISPF
                   modification date; for load modules, it is the
                   linkage edit date.
  TO             - dates before (and including) the specified date.
                   TO indicates that the implied date range (TODAY,
                   YESTERDAY, ... LAST, DATE) is before the given date.
                   For source modules, the date referenced is the ISPF
                   modification date; for load modules, it is the
                   linkage edit date.
  TODAY          - a date, equivalent to LAST(0)
  YESTERDAY      - a date, equivalent to LAST(1)
  WEEK           - a date, equivalent to LAST(7)
  CURRENT        - a date, equivalent to LAST(10)
  BIWEEK         - a date, equivalent to LAST(14)
  MONTH          - a date, equivalent to LAST(30)
  BIMONTH        - a date, equivalent to LAST(60)
  QUARTER        - a date, equivalent to LAST(90)
  HALFYEAR       - a date, equivalent to LAST(183)
  YEAR           - a date, equivalent to LAST(365)
  BIYEAR         - a date, equivalent to LAST(730)
  LAST(numdays)  - a date, indicates the number of days before today.
  DATE(cdate)    - a date, indicates the actual date; it may be
                   entered in Gregorian format (mm/dd/yy),
                   ISPF format (yy/mm/dd), or Julian format (yyddd).
                   Note:  ISPF format assumed if yy is >= 60.
  PREV0          - a date, equivalent to LAST(0)
  PREV1          - a date, equivalent to LAST(1)
  PREV2          - a date, equivalent to LAST(2)
  PREV3          - a date, equivalent to LAST(3)
  PREV4          - a date, equivalent to LAST(4)
  PREV5          - a date, equivalent to LAST(5)
  PREV6          - a date, equivalent to LAST(6)
  PREV7          - a date, equivalent to LAST(7)
  PREV8          - a date, equivalent to LAST(8)
  PREV9          - a date, equivalent to LAST(9)
  PREV10         - a date, equivalent to LAST(10)
  PREV11         - a date, equivalent to LAST(11)
  PREV12         - a date, equivalent to LAST(12)
  PREV13         - a date, equivalent to LAST(13)
  PREV14         - a date, equivalent to LAST(14)
  CHANGED(yyddd: - specifies that members which were modified by an
                   ISPF editor or a ZAP program between the dates
                   specified are desired.  If only a single date is
                   entered, only that date is checked.  Note that only
                   members with ISPF statistics or members created by a
                   linkage editor are supported.
                   Either of the following examples are equivalent:
                   CHANGED(85001:85074) and  CHANGED(1/1/85:3/15/85)
  CREATED(yyddd: - specifies that members which were created with ISPF
                   statistics or by the linkage editor between the
                   dates specified are desired.  If only a single date
                   is entered, only that date is checked.
                   Either of the following examples are equivalent:
                   CREATED(85001:85074) and  CREATED(1/1/85:3/15/85)
  ABOVE(Count1)  - specifies that members with more than the number of
                   lines (amount of storage for load modules) defined
                   by the number, Count1, are desired.
  ALIAS          - specifies that alias members are desired.
  NOALIAS        - specifies that main members are desired.
  AMODE24        - specifies that modules with addressing mode 24 are
                   desired.
  NOAMODE24      - specifies that modules with addressing mode 31, 64,
                   or ANY are desired.
  AMODE31        - specifies that modules with addressing mode 31 are
                   desired.
  NOAMODE31      - specifies that modules with addressing mode 24, 64,
                   or ANY are desired.
  AMODE64        - specifies that modules with addressing mode 64 are
                   desired.
  NOAMODE64      - specifies that modules with addressing mode 24, 31,
                   or ANY are desired.
  AMODEANY       - specifies that modules with addressing mode ANY
                   are desired.
  NOAMODEANY     - specifies that modules with addressing mode 24, 64,
                   or 31 are desired.
  AUTH           - specifies that APF authorized modules are desired.
  NOAUTH         - specifies that non-authorized modules are desired.
  APF            - specifies that APF authorized modules are desired.
  NOAPF          - specifies that non-authorized modules are desired.
  BELOW(Count2)  - specifies that members with less than the number of
                   lines (amount of storage for load modules) defined
                   by the number, Count2, are desired.
  DC             - specifies that downward-compatible modules are
                   desired.
  NODC           - specifies that no downward-compatible modules are
                   desired.
  EDIT           - specifies that modules which can be reprocessed
                   by the linkage editor are desired.
  NOEDIT         - specifies that modules which can not be reprocessed
                   by the linkage editor are desired.
  EXEC           - specifies that EXECUTABLE modules are desired.
  NOEXEC         - specifies that non-EXECUTABLE modules are desired.
  FLEVEL         - specifies that modules processed by the
                   F-level linkage editor are desired.
  NOFLEVEL       - specifies that modules not processed by the
                   F-level linkage editor are desired.
  ID(Puid)       - specifies that members with ISPF statistics and
                   userids matching the partial name, Puid, are
                   desired.  Puid may be entered as a partial TSO
                   userid with one to eight characters.
                   ID is an alias of USERID.
  NOID           - specifies that members without ISPF statistics are
                   desired.  NOID is an alias of NOUSERID.
  NOTID(Puid)    - specifies that members without ISPF statistics or
                   members with ISPF statistics and userids which do
                   not match the partial name, Puid, are desired.
                   Puid may be entered as a partial TSO userid with
                   one to eight characters.
                   NOTID is an alias of NOTUSERID.
  XSTATS         - specifies that members with extended ISPF
                   statistics are desired.
  NOXSTATS       - specifies that members without extended ISPF
                   statistics are desired.
  HASALIAS       - specifies that main members which have one or more
                   aliases are desired.
  NOHASALIAS     - specifies that alias members or main members without
                   any aliases are desired.
  LKED(Partl)    - specifies that modules identified as linked by the
                   linkage editor defined by the partial name, Partl,
                   are desired.  Partl may be entered as a partial
                   linkage editor IDR name with one to ten characters.
  LOADONLY       - specifies that modules marked for LOAD ONLY
                   are desired.
  NOLOADONLY     - specifies that modules not marked for LOAD ONLY
                   are desired.
  MODULE(Partm)  - specifies that modules with CSECTS defined by the
                   partial name, Partm, are desired.  Partm may be
                   entered as a partial CSECT name with one to eight
                   characters.

                   Note that if MODULE(Partm) is entered, any TRANS,
                   SYSMOD/USERDATA or ZAP keywords apply only to CSECTs
                   whose names match the partial CSECT name, Partm.

                   If the form MODULE(*) is used, the previous partial
                   name entered on any MODULE keyword will be used.
  ORPHAN         - specifies that alias members which have no
                   associated main member are desired.
  NOORPHAN       - specifies that main members or alias members which
                   have an associated main member are desired.
  OVERLAY        - specifies that OVERLAY modules are desired.
  NOOVERLAY      - specifies that non-OVERLAY modules are desired.
  PAGE           - specifies that modules marked for loading on
                   a page boundary are desired.
  NOPAGE         - specifies that modules not marked for loading on
                   a page boundary are desired.
  REFR           - specifies that refreshable modules are desired.
  NOREFR         - specifies that non-refreshable modules are desired.
  RENT           - specifies that reentrant modules are desired.
  NORENT         - specifies that non-reentrant modules are desired.
  REUS           - specifies that reusable modules are desired.
  NOREUS         - specifies that non-reusable modules are desired.
  RMODE24        - specifies that modules with residence mode 24 are
                   desired.
  NORMODE24      - specifies that modules with residence mode ANY
                   are desired.
  RMODEANY       - specifies that modules with residence mode ANY
                   are desired.
  NORMODEANY     - specifies that modules with residence mode 24 are
                   desired.
  SCTR           - specifies that scatter-loaded modules are desired.
  NOSCTR         - specifies that no scatter-loaded modules are desired.
  SSI(hexdata)   - specifies that members with matching SSI data are
                   desired.  Note that this is implemented as a generic
                   search matching SSI characters from left to right
                   for the number of characters entered.
  SSI            - specifies that members with SSI data are desired.
  NOSSI          - specifies that members without SSI data are desired.
  PARTSSI(hx)    - specifies that members with matching SSI data are
                   desired.  Note that this is implemented as a pattern
                   search matching SSI digits as a string anywhere in
                   the SSI field of the member.
  SYSMOD(Partu)  - specifies that modules with user IDR data which
                   matches the partial name, Partu, are desired.
                   Partu may be entered as partial IDR data with
                   one to eight characters.
                   Note that if MODULE(Partm) is also entered, the
                   SYSMOD operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  TEST           - specifies that modules with the TEST attribute
                   are desired.
  NOTEST         - specifies that modules without the TEST attribute
                   are desired.
  TRANS(Partt)   - specifies that modules with CSECTS identified as
                   having been assembled or compiled by the translator
                   defined by the partial name, Partt, are desired.
                   Partt may be entered as a partial translator IDR
                   name with one to ten characters.
                   Note that if MODULE(Partm) is also entered, the
                   TRANS operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  TTR(Lttr:Httr) - specifies that members whose start address is in
                   the specified TTR range are desired.
                   Lttr defaults to 0 and may be entered as a
                   hexadecimal TTR value from 0 through FFFFFF.
                   Httr defaults to FFFFFF and may be entered as
                   a hexadecimal TTR value from 0 through FFFFFF.
  USERDATA(Partu) - specifies that modules with user IDR data which
                   matches the partial name, Partu, are desired.
                   Partu may be entered as partial IDR data with
                   one to eight characters.
                   Note that if MODULE(Partm) is also entered, the
                   USERDATA operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  USERID(Puid)   - specifies that members with ISPF statistics and
                   userids matching the partial name, Puid, are
                   desired.  Puid may be entered as a partial TSO
                   userid with one to eight characters.
                   USERID is an alias of ID.
  NOUSERID       - specifies that members without ISPF statistics are
                   desired.  NOUSERID is an alias of NOID.
  NOTUSERID(Puid) - specifies that members without ISPF statistics or
                   members with ISPF statistics and userids which do
                   not match the partial name, Puid, are desired.
                   Puid may be entered as a partial TSO userid with
                   one to eight characters.
                   NOTUSERID is an alias of NOTID.
  VSLKED         - specifies that modules linked by the MVS OS/VS
                   linkage editor are desired.
  NOVSLKED       - specifies that modules not linked by the MVS OS/VS
                   linkage editor are desired.
  ZAP(Partz)     - specifies that modules with zap IDR data which
                   matches the partial name, Partz, are desired.
                   Partz may be entered as partial zap IDR data with
                   one to eight characters.
                   Note that if MODULE(Partm) is also entered, the
                   ZAP operand applies only to CSECT's whose names
                   match the partial CSECT name, Partm.
  RESET      - specifies that the member list is to contain only
               the group of members named with this subcommand.
  NORESET    - specifies that any existing member list is to be merged
               with the group of members named with this subcommand.
  LKEDDATE   - specifies that linkage edit date information for load
               members is desired (the IDR data must be read).
  NOLKEDDATE - specifies that linkage edit date information for load
               members is not required.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=MXIBAT
K* MXIBA
K* MXIB
K* MXI
K* MX

    Example -     MXIBAT command

 The MXIBAT subcommand invokes the Rob Scott MXI program in batch mode.

 Rob Scott's MXI (MVS eXtended Information) can be downloaded
 from the CBT (files 409, 410).  MXI Version 4.3 GenLevel 050126.
   SYNTAX -
     MXIBAT  command

 ALIASES  - MX, >MXI, MXIB, MXIBA, MXIBAT
 DEFAULTS - none.
 REQUIRED - none.
   OPERANDS -
  command -      specifies the name of the MXI command to be executed.

  Name                Description                          Group

  AGRP                SMS Aggregate Groups                 SMS
  APF                 APF List Datasets                    DATASET
  ASID                Address Space Usage Information      SYSTEM
  CAT                 Catalog Information                  DATASET
  CA1                 CA-1 Configuration Information       SMS
  CDE                 JPAQ and TCB loaded modules          MODULE
  CDR                 Device Configuration Data            UNIT
  CF                  Coupling Facility Information        PLEX
  CHP                 Online Channel Paths                 UNIT
  CON                 Console Screen Image                 UNIT
  CPF                 Command Prefix Table                 SYSTEM
  CPU                 CPU and LPAR Information             UNIT
  CS                  Common Storage Usage                 STORAGE
  CSR                 Common Storage Remaining             STORAGE
  DA                  Active Address Space Information     SYSTEM
  DA ONLY(JOB)        Active Batch Jobs                    SYSTEM
  DA ONLY(STC)        Active Started Tasks                 SYSTEM
  DA ONLY(TSU)        Active TSO Users                     SYSTEM
  DAE                 Dump Elimination Information         SYSTEM
  DASD                Online DASD Information              UNIT
  DASD NOT(SMS)       Online Non-SMS DASD Volumes          UNIT
  DASD ONLY(SMS)      Online SMS DASD Volumes              SMS
  DB                  DB2 Subsystems                       DB2
  DBBP                DB2 Buffer Pools                     DB2
  DBDA                DB2 Active Threads                   DB2
  DBEP                DB2 EDM Statistics                   DB2
  DBGP                DB2 Getpage Requests                 DB2
  DBLK                DB2 Locking Statistics               DB2
  DBZP                DB2 System Parameters                DB2
  DCLS                SMS Data Class Information           SMS
  DDNS                Allocated Dataset Information        DATASET
  DEV                 DASD Activity                        UNIT
  DS                  Personal Dataset List                DATASET
  DSP                 Dataspace Information                STORAGE
  DYNX                Dynamic Exit Information             MODULE
  EDT                 Eligible Device Table                UNIT
  EMCS                E-MCS Information                    UNIT
  ENC                 Enclave Information                  PLEX
  ENQ                 Enqueue Information                  SYSTEM
  ENQC                Enqueue Contention and RESERVEs      SYSTEM
  EXC                 System Exceptions                    SYSTEM
  GQE                 Common Storage GQEs                  STORAGE
  GRS                 GRS Resource Name Lists              SYSTEM
  HFS                 OpenEdition File Systems             DATASET
  HFS VIEW(DSN)       OpenEdition Datasets                 DATASET
  HSM                 HSM Configuration                    SMS
  HSMQ                HSM Request Queues                   SMS
  INIT                JES2 Initiators                      SYSTEM
  IPL                 IPL and Load Information             SYSTEM
  LINK                Linklist Dataset Information         DATASET
  LLA                 LLA Fetch Statistics                 DATASET
  LLS                 Linklist Set Information             DATASET
  LLSU                Linklist Set Usage Information       DATASET
  LOGR                Log Stream Information               PLEX
  LPA                 LPA List Dataset Information         DATASET
  LPD                 Link Pack Directory Entries          MODULE
  LX                  Linkage Indexes and PC Routines      MODULE
  MAKE                Change Address Space                 SYSTEM
  MCLS                SMS Management Class Information     SMS
  MCS                 MCS Consoles                         UNIT
  MDQ                 Memory Delete Queue                  STORAGE
  MEM                 Display Memory                       STORAGE
  MPF                 MPF Information                      SYSTEM
  MQ                  MQ Series Subsystems                 MQ
  MQC                 MQ Series Channels                   MQ
  MQCS                MQ Series Channel Status             MQ
  MQDA                MQ Series Active Threads             MQ
  MQQ                 MQ Series Queues                     MQ
  MQU                 MQ Series Page Set Usage             MQ
  NTOK                System Name/Token Information        SYSTEM
  NUC                 System Nucleus Modules               MODULE
  OMVS                OpenEdition Configuration            SYSTEM
  PAGE                Page Dataset Information             SYSTEM
  PARM                Active PARMLIB Information           SYSTEM
  PEEK                Show ISPF Screens                    SYSTEM
  PID                 OpenEdition Processes                SYSTEM
  PLEX                Sysplex Information                  PLEX
  PPT                 Program Properties Information       MODULE
  RACF                RACF Information                     RACF
  RCLS                RACF Class Information               RACF
  RCLS DATASET        RACF Dataset Profiles                RACF
  RCLS GROUP          RACF Groups                          RACF
  RCLS USER           RACF Userids                         RACF
  RL                  RACF Profile Information             RACF
  RS                  Real Storage Usage Information       STORAGE
  RSYS                Remote System Selection              SYSTEM
  SCLS                SMS Storage Class Information        SMS
  SGRP                SMS Storage Group Information        SMS
  SMF                 SMF General Information              SYSTEM
  SMFD                SMF Dataset Information              DATASET
  SMS                 SMS Configuration Information        SMS
  SMSM                SMS Module Map                       SMS
  SOFT                System Software Levels               SYSTEM
  SP                  Common Storage Subpool Usage         STORAGE
  SPD                 Subpool Definitions                  STORAGE
  SSI                 Subsystem Information                SYSTEM
  SRVC                WLM Service Class Information        PLEX
  STOR                System Storage Information           STORAGE
  SVC                 SVC Information                      MODULE
  SYM                 System Symbols                       SYSTEM
  SYSX                System Exit Information              MODULE
  TAPE                Online TAPE Information              UNIT
  TCB                 TCB and RB Information               SYSTEM
  UCB                 UCB Information                      UNIT
  UIC                 UIC Information                      STORAGE
  USP                 User Subpool Information             STORAGE
  VER                 MXI Version Information              SYSTEM
  VMAP                Virtual Storage Map                  STORAGE
  WLM                 WLM Policy Information               PLEX
  WLMA                WLM Application Environments         PLEX
  WLMC                WLM Classification Rules             PLEX
  WLMG                WLM Classification Groups            PLEX
  WLMS                WLM Scheduling Environments          PLEX
  WTOR                Outstanding Operator Replies         SYSTEM
  XCFM                XCF Members                          PLEX
  XCFS                XCF Structures                       PLEX
  XM                  Cross Memory Connections             STORAGE
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=OPTIONS
K* O
K* OP
K* OPT
K* OPTI
K* OPTIO
K* OPTION

    Example -     OPTIONS

 The OPTIONS subcommand displays the subcommands (or options)
 supported by the -PDS86- command. Note that this display varies
 when a non-partitioned data set is being processed.

 Notes:
 1. When in ISPMODE or MEMLIST, if the O alias of OPTIONS is entered
    after COMMAND ===>, a panel of options are presented to assist in
    entering -PDS86- subcommands.
 2. When in MEMLIST, if the o alias of OPTIONS is entered as a line
    command, a panel of member options is presented to assist in
    entering -PDS86- subcommands.
   SYNTAX -
     OPTIONS

 ALIASES  - O, OP, OPT, OPTI, OPTIO, OPTION, OPTIONS
   OPERANDS -
  no operands are supported.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=OFFLOAD
K* OFFLOA
K* OFFLO
K* OFFL
K* OFF
K* OF
K* COMBINE
K* COMBIN
K* COMBI
K* COMB

    Example -     OFFLOAD a:c seq

  The OFFLOAD subcommand offloads members of a PDS to a member of
  a PDS or a sequential data set.  An IEBUPDTE "./ ADD NAME="
  control statement is added before each output member and ISPF
  statistics are included for use by the PDSLOAD program (CBT 093).
  If extended ISPF statistics: 99,999,999 max for SIZE and INIT.

  Note: ./ in the input members is translated to >< in the output.

  The OFFLOAD subcommand invokes the David Brockway Cole OFFLOAD
  program (CBT 093).

   SYNTAX -
     OFFLOAD  memgroup  output.dataset
                       ALIAS/NOALIAS
                       IEBUPDTE/NOSEP
                       OLD/SHR/MOD/NEW
                                   TRK/CYL       SPACE(prim,sec)
                                   VOLUME(volser)

 ALIASES  - OF, OFF, OFFL, OFFLO, OFFLOA, OFFLOAD
 DEFAULTS - NOALIAS, SHR, IEBUPDTE
 REQUIRED - memgroup, output.dataset
   OPERANDS -
  memgroup   - specifies the name of the member(s) to be transmitted.

               Default member names, member lists, member name
               ranges and member name patterns are allowed; for
               more information, enter HELP GROUP.

 output.data - specifies the name of the output data set.  Standard
               TSO dsname syntax should be used.  This should be a
               cataloged sequential dataset unless NEW is specified.

               Note:  A member name must be entered if offloading to an
               existing partitioned data set.

  ALIAS      - specifies that any associated members (aliases, apparent
               aliases and associated main members) are also to be
               offloaded.
  NOALIAS    - specifies that only the member(s) specifically identified
               are candidates for offloading.
  IEBUPDTE   - record in IEBUPDTE format (add a "./ ADD NAME="
               statement before each output member and preserve ISPF
               statistics).
  NOSEP      - place no separators between output members.
  OLD        - obtain exclusive use of the output data set.
  SHR        - allow shared use of the output data set.
  MOD        - specifies that the member(s) are to be added to the end
               of the output dataset.  APPEND is an alias for MOD.
  NEW        - specifies that the output data set is to be created.
               When NEW is specified, TRK/CYL, SPACE, and
               VOLUME keywords may also be specified.
  TRK        - specifies that the output data set is to be allocated
               in tracks.
  CYL        - specifies that the output data set is to be allocated
               in cylinder units.
  SPACE(p,s) - specifies the primary and secondary quantities for
               the output data set in track or cylinder units.

               If TRK or CYL is not entered but SPACE is entered,
               TRK is the default allocation quantity.

               If SPACE is not entered, the default is (15,15).
  VOLUME(vo) - for NEW data sets, specifies the output volume name.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=OUTCOPY
K* OU
K* OUT
K* OUTC
K* OUTCO
K* OUTCOP

    Example -     OUTCOPY mema:memb

  The OUTCOPY subcommand formats utility control statements
  which can be used by IEBCOPY to select members from a data set.

  OUTCOPY does not utilize ISPF services; however, when it is first
  invoked, it attempts to establish an ISPF environment so that
  subsequent subcommands can utilize ISPF services.

  OUTCOPY usage notes:
   A.  Output is directed to FILE(PDSOUT).
   B.  PDSOUT must be allocated to a sequential data set or to a
       member of a partitioned data set with fixed, 80 character
       records prior to entering the first OUTCOPY subcommand.
   C.  For new data sets, the default DCB attributes of
       DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)  will be used.
   D.  An IEBCOPY COPY statement is written before the first SELECT
       statement for each data set as determined by the CHANGE
       subcommand; the COPY statement is of the form:
       COPY  OUTDD=OUTPUT,INDD=xxx
       where xxx is the low-level qualifier of the input data set name.
   E.  The default IEBCOPY select statement is of the form:
       S M=memname ,memname))
       Note -- memname is the member name; this format output statement
       can be modified by an editor if member rename or member replace
       functions are to be performed.

       If TEXT('Any String') was specified, each subsequent IEBCOPY
       statement changes to the form:
          S M=memname  ANY STRING
   F.  OUTCOPY maintains a list of member names written after each
       copy statement and does not output a member name more than once.
   G.  A CLIST such as the following could be established for IEBCOPY
       use:
        PROC 3 FROMDSN FROMQUAL TODSN CONTROLS(PDSOUT.CNTL)
        ALLOC F(SYSIN) DA(&CONTROLS.) SHR
        ALLOC F(SYSPRINT) DA(*)
        ALLOC F(&FROMQUAL.) DA(&FROMDSN.) SHR
        ALLOC F(OUTPUT) DA(&TODSN.) OLD
        CALL 'SYS1.LINKLIB(IEBCOPY)'

   H.  Assuming that OUTCOPY has created output in PDSOUT.CNTL, you
       could copy selected members from your LIB.LOAD data set to
       'SYS1.LINKLIB2', by entering the following line from
       READY mode:
       %copyout lib.load load 'sys1.linklib2'

   SYNTAX -
     OUTCOPY  member   ECHO/NOECHO   CLOSE/NOCLOSE  IEBUPDTE/NOIEBUPDTE
                       ALIAS/NOALIAS TEXT('string')/NOTEXT

 ALIASES  - OU, OUT, OUTC, OUTCO, OUTCOP, OUTCOPY
 DEFAULTS - initially:  member, ECHO, NOCLOSE, NOALIAS,
                                      NOTEXT,  NOIEBUPDTE
            thereafter: member, NOCLOSE,
                        previous(ALIAS/NOALIAS; ECHO/NOECHO;
                                 TEXT/NOTTEXT; IEBUPDTE/NOIEBUPDTE)
 REQUIRED - none.
   OPERANDS -
  member     - optional, specifies the member name(s) to be output on
               an IEBCOPY format SELECT statement.

               Default member names, member lists, member name
               ranges and member name patterns are allowed; for
               more information, enter HELP GROUP.

  ALIAS      - Specifies that the names of any associated members
               (aliases, apparent aliases and associated main members)
               are also to be written to the PDSOUT data set.
  NOALIAS    - Specifies that only the names of members actually
               identified are to be written to the PDSOUT data set.
  ECHO       - Each IEBCOPY statement is to be written to the terminal
               as well as to the PDSOUT data set.
  NOECHO     - IEBCOPY statements are to be written to the PDSOUT
               data set only.
  IEBUPDTE   - Each output statement is to be written in IEBUPDTE
               format instead of the standard IEBCOPY format;
               Note: the use of this format also suppresses any COPY
               statements generated for data set changes.
  NOIEBUPDTE - Each output statement is to be written in IEBCOPY
               format.
  CLOSE      - The PDSOUT file is to be closed.  Note: the member or
               member group specified with the close operand is not
               output to the PDSOUT file.
  NOCLOSE    - The PDSOUT data set is to be opened or to stay open.
  TEXT('st') - The string, ST, is to replace the second member name on
               each subsequent SELECT output statement.
  NOTEXT     - The TEXT operand is to be nullified and the usual second
               member name is to be output on each subsequent SELECT
               output statement.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PATTERN
K* P
K* PA
K* PAT
K* PATT
K* PATTE
K* PATTER

    Example -     PATTERN  pds/70

   The PATTERN subcommand lists member names from the data set
   directory.  Only those member names which contain the PATTERN
   name segments specified are displayed.  Note that the default
   member group is not affected by the DISPLAY or PATTERN subcommands.

   One or two member name segments may be entered as patterns.  If two
   segments are entered, both segments must occur in a member name for
   it to be displayed.  For example, with the pattern segments xx and
   1x, members named M1X4XX, M1XX and XX1X would be displayed by this
   subcommand while members named X1X or MXX13X would not be displayed.

   Note that -A is added following a displayed member name if the
   member name is an alias.  The member name is listed in a combined
   hexadecimal/character format if it does not contain upper case
   alphanumeric characters (including @, $ and #) or if the first
   character is numeric.  Unprintable characters (for 3270-type
   devices) in a member name are displayed as periods.
   SYNTAX -
     PATTERN  segment1 segment2

 ALIASES  - P, PA, PAT, PATT, PATTE, PATTER, PATTERN
 DEFAULTS - previously entered segment1 and segment2 operands
 REQUIRED - none.
   OPERANDS -
  segment1 - optional, specifies a name segment which must be found
             in a member name for the member name to be displayed.

             Note: a group name descriptor such as part1:part2,
             seg1/seg2 or part1*seg1 may be entered for name1, in
             which case, the output will consist of the member names
             which would be displayed by the MEMBERS subcommand.

  segment2 - optional, specifies a second name segment which must
             also be found in a member name for the member name to
             be displayed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PRINTOFF
K* PRINTOF
K* PRINTO
K* PRINT
K* PRIN
K* PRI
K* PR

    Example -     PRINTOFF mema:memb form(0012) asa

   The PRINTOFF subcommand prints a hardcopy list of a member.  The
   TSO PRINTOFF command is used; any desired PRINTOFF operands may
   be added after the member name.
   SYNTAX -
     PRINTOFF  member ASA                 HOLD/NOHOLD
                      ASIS/CAPS           LIST/NOLIST
                      CLASS(c)            NOMSG
                      COPIES(num)         PRINT/NOPRINT
                      DEST(destname)      PROG(progname)
                      FCB(fcbname)        SNUM
                      FORMS(formname)     TEXT
                      HEADING/NOHEADING   UCS(ucsname)
                                          VOLUME(volname)

 ALIASES  - PR, PRI, PRIN, PRINT, PRINTO, PRINTOF, PRINTOFF
 DEFAULTS - member, CLASS(A), NOHOLD, LIST, PRINT, ASIS, HEADING
 REQUIRED - none.
   OPERANDS -
  member   - optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO PRINTOFF
             command.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

 operands -  optional, may include any desired TSO PRINTOFF operands.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PTSEXP
K* PTSEX
K* PTSE
K* PTS
K* PT

    Example -     PTSEXP member SEQ

 The PTSEXP subcommand expands compacted SYSMOD data from a source
 member using the IBM GIMCPTS service routine.

   SYNTAX -
     PTSEXP  member output.dataset
                   LIST/NOLIST
                   OLD/SHR/MOD/NEW
                               TRK/CYL       SPACE(prim,sec)
                               VOLUME(volser)

 ALIASES  - PT, PTS, PTSE, PTSEX
 DEFAULTS - SHR, LIST
 REQUIRED - member, output.dataset
   OPERANDS -
 member      - specifies the name of the member to be expanded.

               If member name is ALL, then all members of the input
               PDS will be expanded to members of an output PDS.

 output.data - specifies the name of the output data set.  Standard
               TSO dsname syntax should be used.  This should be a
               cataloged sequential dataset unless NEW is specified.

               Note:  A member name must be entered if expanding to an
               existing partitioned data set.

  LIST       - specifies that the expanded SYSMOD data is to be
               displayed.
  NOLIST     - specifies that the expanded SYSMOD data is not to be
               displayed.
  OLD        - obtain exclusive use of the output data set.
  SHR        - allow shared use of the output data set.
  MOD        - specifies that the expanded SYSMOD data is to be added
               to the end of the output dataset.  APPEND is an alias
               for MOD.
  NEW        - specifies that the output data set is to be created.
               When NEW is specified, TRK/CYL, SPACE, and
               VOLUME keywords may also be specified.
  TRK        - specifies that the output data set is to be allocated
               in tracks.
  CYL        - specifies that the output data set is to be allocated
               in cylinder units.
  SPACE(p,s) - specifies the primary and secondary quantities for
               the output data set in track or cylinder units.

               If TRK or CYL is not entered but SPACE is entered,
               TRK is the default allocation quantity.

               If SPACE is not entered, the default is (15,15).
  VOLUME(vo) - for NEW data sets, specifies the output volume name.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=RECALL
K* R
K* RC
K* RE
K* REC
K* RECA
K* RECAL

    Example -     RECALL enter

  The RECALL subcommand displays the previous subcommand or
  displays and reenters the previous subcommand for execution.

  Note: the following subcommands are ignored for the purposes of
  the RECALL subcommand: CHANGE, HELP, K or KLEAR and X.
   SYNTAX -
     RECALL  ENTER/NOENTER/CHANGE

 ALIASES  - R, RE, REC, RECA, RECAL, RECALL
 DEFAULTS - NOENTER
 REQUIRED - none.
   OPERANDS -
  ENTER     - the previous subcommand is to be displayed and
              reentered for execution.
  CHANGE    - a prototype CHANGE subcommand is to be generated
              for the currently allocated data set.
  NOENTER   - the previous subcommand is to be displayed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=RENAME
K* REN
K* RENA
K* RENAM

    Example -     RENAME thismem thatmem

  The RENAME subcommand updates a member's name.

  If a main load member is renamed, any associated alias directory
  entries will be updated to reflect the new base member name.

  Note: if a main load member is renamed to itself, any associated
  alias entries will be checked and updated as needed.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the -PDS86- command for
  SHR allocations (for details, enter HELP UPDATE).
   SYNTAX -
     RENAME  curname newname   SWAP/NOSWAP  GROUP/NOGROUP  REPBY(repnm)

 ALIASES  - REN, RENA, RENAM, RENAME
 DEFAULTS - NOSWAP, NOGROUP
 REQUIRED - curname, newname
   OPERANDS -
  curname   - specifies the current name of the member.

  newname   - specifies the new name for the member.  Note that this
              new name becomes the -PDS86- default member name.

  SWAP      - the members named are to exchange directory entries.
  NOSWAP    - no member name exchange is to be performed.
  GROUP     - specifies that a group rename is to be performed.  The
              range of names affected is defined by the first operand
              and the resulting member name is obtained by replacing
              the first characters of the member name by the second
              group of characters from the RENAME command.

              For example, if  RENAME IEB ABCD GROUP  were entered,
              all members beginning IEB... would be renamed to ABCD...
                1.  With the statement, RENAME IEB ABCD GROUP,
                    a member named IEB12 would be assigned the
                    name ABCD12
                2.  With the statement, RENAME IEB OX GROUP,
                    a member named IEB12 would be assigned the
                    name OX12

  NOGROUP   - only the member specifically identified is to be renamed.
  REPBY(rp) - rp specifies a replacement member for curname.
              For example, the following subcommand:
              RENAME ONE TWO REPBY(NEWONE)

              is equivalent to the following two subcommands:
              RENAME ONE TWO
              RENAME NEWONE ONE
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=REPLACE
K* REP
K* REPL
K* REPLA
K* REPLAC

    Example -     REPLACE mema:memb /before/after/ write

  The REPLACE subcommand changes portions of a member which contain a
  search string.  Only those portions of the member which contain the
  search string are displayed after a character string substitution.

  If the WRITE keyword is specified, the data is updated in-place;
  otherwise, only potential changes are listed.

  Unprintable characters for 3270-type devices are translated to
  periods before they are displayed.

  REPLACE formats are NUM, SNUM, NONUM, LBLOCK, LDUMP, BLOCK and DUMP;
  for load modules, the NUM, SNUM and NONUM formats are equivalent
  to the LDUMP format.

  The default format is initially NUM; however, each time a format
  operand is entered on a REPLACE, FIND or LIST subcommand, the value
  entered is used as the output format for subsequent REPLACE, FIND
  and LIST subcommands.  Also, note the following:
    A. Formats NUM, SNUM and NONUM limit the search and update length
       for logical records to 256 characters.
    B. Column 72 is not modified for formats NUM or SNUM if the record
       format is fixed with 80 character records.
    C. Formats BLOCK and DUMP apply to physical records; the other
       formats apply to logical records; and for load modules, LBLOCK
       and LDUMP formats update and display only CSECT data.
    D. Formats LBLOCK, LDUMP, BLOCK and DUMP display only the updated
       segments of a record which contained the search string; however,
       a following segment will also be displayed if the string spanned
       a segment boundary.
    E. Formats LBLOCK, LDUMP, BLOCK and DUMP require equal length
       search and replacement strings; formats NUM, SNUM and NONUM
       allow different length strings with string expansion (shifting
       the data over to multiple blanks) and string contraction
       (shifting the data from the next blank to the replacement data).

   SYNTAX -
     REPLACE  member +stringa+stringb+
                    NUM/SNUM/NONUM/LBLOCK/LDUMP/BLOCK/DUMP
                    CAPS/ASIS/IGNORE  WRITE/NOWRITE  STATS/NOSTATS
                    OFFSET(Hx) MODULE(Partm)
                    SKIPREC(n) MAXIN(n) MAXOUT(n)
                    SKIPCOL(n) MAXLEN(n) MAXFIND(n)

 ALIASES  - REP, REPL, ,REPLA, REPLAC, REPLACE
 DEFAULTS - member, previous stringa, CAPS, NOWRITE, STATS,
                    NUM or previous REPLACE/FIND/LIST format
 REQUIRED - none.
   OPERANDS -
  member     -  optional, specifies the name of the member(s) to be
                scanned and updated.

                Default member names, member lists, member name
                ranges and member name patterns are allowed; for
                more information, enter HELP GROUP.

  stringa    -  optional, the string to be searched for.  It is coded
                as a delimited string like +searched for+.  If the
                string is not entered or is null, the last string
                entered will be used. The string may contain one to
                32 characters.  If the ASIS keyword is entered, neither
                string will be translated to upper case letters.

                As an alternative, both strings may be entered as
                hexadecimal strings delimited with x's like
                x0123456789xabcdefx.  Note that each string may
                contain one to 64 characters and that x333x1x and
                x0333x01x are equivalent.

  stringb    -  optional, the replacement string.  It is coded as a
                delimited string like +replaced with+.  If the string
                is not entered or is null, the string is assumed to
                be null.  The string may contain zero to 32 characters.
                If the ASIS keyword is entered, neither string will be
                translated to upper case letters.  If the IGNORE
                keyword is entered (or defaulted to) stringb will not
                be translated to upper case letters.

                As an alternative, both strings may be entered as
                hexadecimal strings delimited with x's like
                x0123456789xabcdefx.  Note that each string may
                contain one to 64 characters and that x333x1x and
                x0333x01x are equivalent.

  REPLACE format control keywords are as follows:
  NUM        -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) of
                each logical record is examined; if the field is not
                numeric, formatting is switched to NONUM mode for the
                remainder of the member.

                For ISPF-saved members, the high-order six digits of
                the line number field is formatted; otherwise, the
                low-order six digits of the line number field is
                formatted by suppressing leading zeroes.  The line
                number segment is followed by a blank and up to 249
                characters of data from the logical record.
  SNUM       -  The line number field (the last 8 bytes of a fixed-
                format record or the first 8 bytes otherwise) is
                discarded.  Up to 256 bytes from a logical record are
                searched or updated.
  NONUM      -  Up to 256 bytes from a logical record are searched or
                updated.
  LBLOCK     -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record) and segments of 64 characters
                surrounded by asterisks.  Only formatted segments which
                contain the search string are updated and displayed;
                however, a following segment will also be displayed if
                the string spans a segment boundary.

                Note: for load modules, only CSECT data will be
                searched or updated and if the partial name Partm is
                entered in a MODULE operand, only those CSECT or ENTRY
                names matching Partm will be searched or updated.
                CSECT records are formatted with two hexadecimal
                offsets (a module offset and a CSECT offset) and
                segments of 64 characters surrounded by asterisks.
  LDUMP      -  Logical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the logical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.  Only
                formatted segments which contain the search string
                are updated and displayed; however, a following
                segment will also be displayed if the string spans a
                segment boundary.

                Note: for load modules, only CSECT data will be
                searched or updated and if the partial name Partm is
                entered in a MODULE operand, only those CSECT or ENTRY
                names matching Partm will be searched or updated.
                CSECT records are formatted with two hexadecimal
                offsets (a module offset and a CSECT offset), segments
                of up to 32 characters of hexadecimal data and up to
                16 bytes of characters surrounded by asterisks.
  BLOCK      -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record) and segments of 64 characters
                surrounded by asterisks.

                Only formatted segments which contain the search
                string are updated and displayed; however, a following
                segment will also be displayed if the string spans a
                segment boundary.
  DUMP       -  Physical records are formatted with two hexadecimal
                offsets (displacement in the member and displacement
                in the physical record), segments of up to 32
                characters of hexadecimal data and up to 16 bytes of
                equivalent characters surrounded by asterisks.

                Only formatted segments which contain the search
                string are updated and displayed; however, a following
                segment will also be displayed if the string spans a
                segment boundary.
  REPLACE argument translation keywords are as follows:
  CAPS        - default, if character string arguments are entered,
                they will be translated to upper case letters.
  ASIS        - if specified, character arguments will not be
                translated to upper case letters.
  IGNORE      - if specified, search for upper and lower-case data
                matching the specified string.
  REPLACE control keywords are as follows:
  WRITE       - indicates that the member is to be updated in place.
                UPDATE is an alias of WRITE.
  NOWRITE     - indicates that no changed records are to be written.
  STATS       - indicates that ISPF statistics or a ZAP IDR record is
                to be updated if any member data is changed.
  NOSTATS     - indicates that ISPF statistics or a ZAP IDR record is
                not to be updated even if member data is changed.
  OFFSET(Hx)  - for LBLOCK and LDUMP formats only; Hx may be entered
                as a 1 to six digit hexadecimal number to specify
                the module offset at which the search is to begin.

                If both MODULE AND OFFSET keywords are entered, the
                offset applies to each module selected.
  MODULE(Partm)-for LBLOCK or LDUMP formats only; Partm may be entered
                as a 1 to 8 byte partial external name to limit the
                CSECT or ENTRY names to be searched or updated to
                those matching the partial name Partm.

                If the form MODULE(*) is used, the previous partial
                name entered on any MODULE keyword will be used.

                If both MODULE AND OFFSET keywords are entered, the
                offset applies to each module selected.
  SKIPREC(n)  - n is coded as 0 through 9999999 to specify the number
                of logical records (physical records for BLOCK or
                DUMP formats) to ignore at the beginning of a member.
  MAXIN(n)    - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (physical records for BLOCK
                or DUMP formats) to input for a member after
                satisfying any SKIPREC operand.
  MAXOUT(n)   - n is coded as 0 through 9999999 to specify the maximum
                number of logical records (partial logical records for
                LBLOCK or LDUMP formats; partial physical records for
                BLOCK or DUMP formats) to output for a member.
  SKIPCOL(n)  - n is coded as 0 through 99999 to specify the number
                of columns to ignore at the beginning of each logical
                record (physical record for BLOCK or DUMP formats).

                Note: for NUM or SNUM output format with record
                format V, SKIPCOL(0) refers to the first data position
                after the line number field.
  MAXLEN(n)   - n is coded as 0 through 99999 to specify the maximum
                length of a logical record (physical record for BLOCK
                or DUMP formats) to search or update.
  MAXFIND(n)  - n is coded as 0 through 9999999 to specify the maximum
                number of strings that are to be located and updated.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=REPRO
K* REPR

    Example -     REPRO mem1:mem2 maxblk(2400)

  The REPRO subcommand rebuilds members.  It can also create new
  members based on existing members in the data set.

  If the TO (or the equivalent AS) keyword is used, each new member
  is named in a generic fashion.  For example, if TO(X12) is entered,
  each resulting member name is formed by placing X12 over the first
  three characters of the original member name.  An exception to this
  rule is made when only a single member is to be created and its
  aliases are not also requested; in this case, the member name is
  taken directly from the TO keyword.

  For load members, a null ZAP IDR record can be added when the
  member is rebuilt; for non-load members, the member can be
  reblocked as specified by the MAXBLK keyword.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the -PDS86- command for
  SHR allocations (for details, enter HELP UPDATE).
   SYNTAX -
     REPRO  memgroup  ADDZAP
                      ALIAS/NOALIAS
                      MAXBLK(size)
                      TO(pname) / AS(pname)
                      REPLACE/NOREPLACE

 ALIASES  - REPR, REPRO
 DEFAULTS - memgroup, MAXBLK(current BLKSIZE), NOALIAS
 REQUIRED - none.
   OPERANDS -
  memgroup   - optional, specifies the name of the member(s) to be
               rebuilt (or used as input for new member(s)).

               Default member names, member lists, member name
               ranges and member name patterns are allowed; for
               more information, enter HELP GROUP.

  ADDZAP     - for load members only, specifies that a ZAP IDR record
               is to be added (each ZAP IDR record contains space for
               19 historical entries).
  ALIAS      - specifies that any associated members (aliases, apparent
               aliases and associated main members) are also to be
               input.
  NOALIAS    - specifies that only the member(s) specifically
               identified are to be input.
  MAXBLK(sz) - for RECFM=V or RECFM=F members only, specifies the
               maximum output blocksize to be used when the members
               are reconstructed.
  TO(pname)  - pname defines the name of any output members.  For
               example, with TO(new) and the input members, AA, ABBA
               and IBM04, members named NEW, NEWA and NEW04 will be
               created (the original members will not be changed).

               Note that if only a single member is input and the
               ALIAS keyword is not entered, the resulting member
               name is taken only from the AS or TO keyword.
  AS(pname)  - pname defines the name of any output members.  For
               example, with AS(new) and the input members, AA, ABBA
               and IBM04, members named NEW, NEWA and NEW04 will be
               created (the original members will not be changed).

               Note that if only a single member is input and the
               ALIAS keyword is not entered, the resulting member
               name is taken only from the AS or TO keyword.
  REPLACE    - for use with AS or TO only, specifies that current
               members in the data set are to be replaced by any
               identically named output members.
  NOREPLACE  - default for AS or TO, if any members in the data set
               will be replaced by any identically named output
               members, an error message will be generated.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=RESTORE
K* RES
K* REST
K* RESTO
K* RESTOR

    Example -     RESTORE oldname

  The RESTORE subcommand resurrects deleted members.  Deleted members
  remain in a partitioned data set until the data set is compressed.

  It may be possible to resurrect members which were deleted before
  compressing a data set if you mark all of the data set's space as
  in-use with a "FIXPDS MAXSPACE" statement before the restore attempt.

  The attributes authorized, not editable, not executable, only
  loadable, page boundary, reentrant, refreshable and reusable can
  not be determined from load module records; however, these attributes
  can be assigned based on a model member with the LIKE operand or they
  may be selectively assigned with the ATTRIB subcommand.

  If the data set is a load library, then if the member name is an
  imbedded external name within the load module, that external name
  will be used as the entry point; otherwise, the first CSECT in the
  load module will be used as the entry point.

  Caution: this subcommand modifies the data set. To ensure data set
  integrity, you should allocate the data set as OLD or be aware of
  the data set update protection provided by the -PDS86- command for
  SHR allocations (for details, enter HELP UPDATE).
   SYNTAX -
     RESTORE  member   TTR(start)
                       REPEAT/NOREPEAT
                       DISPLAY/NODISPLAY
                       PROMPT/NOPROMPT
                       LIKE(xyz)
                       MODULE(pmodname)
                       COUNT(number)
                       FIND('any string')
                       CAPS/ASIS
                       TEST

 ALIASES  - RES, REST, RESTO, RESTOR, RESTORE
 DEFAULTS - TTR(0), DISPLAY, PROMPT, COUNT(5), CAPS
 REQUIRED - member name
   OPERANDS -
  member    - specifies the name of the member to be resurrected.
              This member name becomes the default member name.

  TTR(strt) - strt is one to six hexadecimal digits which provide the
              relative track address for the deleted member; or if
              REPEAT, DISPLAY or PROMPT are in effect, it specifies
              the start relative address for a deleted member search.

              Note: if TTR(0) is specified or defaulted, the member
              search begins at the first location following the
              directory.

  REPEAT    - multiple deleted members at or following the provided
              TTR address may be restored.
              The member name to be used is taken from the partial
              member name entered filled to eight characters by a
              sequential count field.  For example, if the partial
              member name is GASM the successive restored member
              names will be GASM0001, GASM0002, GASM0003, ...
  NOREPEAT  - at most one member is to be restored.
  DISPLAY   - data from deleted members is to be displayed.
  NODISPLAY - no data from deleted members is to be displayed.
  PROMPT    - a YES response to a program prompt is to be required
              before restoring a deleted member.
  NOPROMPT  - no program prompting is to be performed before
              restoring a deleted member.
  LIKE(xyz) - For load modules, the following attributes are to be
              set based on their corresponding values in member XYZ:
              AMODE, authorized, editable, executable, only loadable,
              page aligned, reentrant, refreshable, reusable, RMODE,
              and SSI.
              For other members, a SSI value or ISPF statistics are
              to be set based on member XYZ.
  MODULE(p) - For load modules, p specifies a partial external name,
              which requires a match with a entry symbol or CSECT
              name in a deleted member.  If no module name match
              can be made, the member will not be displayed or
              resurrected.

              If the form MODULE(*) is used, the previous partial
              name entered on any MODULE keyword will be used.
  COUNT(nm) - Maximum number of informational lines to display from
              deleted members before prompting.
  FIND('s') - For any member, requires the presence of the specified
              character string in a deleted member.  If the string is
              not present in a deleted member, that member will not be
              displayed or resurrected.  The string may contain one to
              32 characters.  If the ASIS keyword is entered, the
              string will not be translated to upper case letters.
  CAPS      - For use with FIND, specifies that the FIND argument is
              to be translated to upper case.
  ASIS      - For use with FIND, specifies that the FIND argument is
              not to be translated to upper case.
  TEST      - Specifies that RESTORE simulate the resurrection of
              of deleted members without actually restoring them.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=REVIEW
K* REVIE
K* REVI
K* REV

    Example -     REVIEW mema:memb

   The REVIEW subcommand browses data.  The TSO REVIEW command
   (CBT 134) is used; any desired REVIEW operands may be added
   after the member name.

   Written in System/370 Assembler by Bill Godfrey in 1981.
   Modified "to the hilt" by Greg Price since 1984.

   The All Singing All Dancing REVIEW Revue
   SHARE Session 2811
   Austin 2009-03-05
   Presented by Greg Price
   http://www.prycroft6.com.au/REVIEW/download/REVrevue.pdf

   Record Formats - fixed, variable, or undefined
                  - blocked or unblocked
                  - standard or spanned
                  - with or without printer control characters

   Data Lengths   - 1 to 65535 bytes of data, inclusive

   SYNTAX -
     REVIEW  member operands

 ALIASES  - REV, REVI, REVIE, REVIEW
 DEFAULTS - member
 REQUIRED - none.
   OPERANDS -
  member   - optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO REVIEW
             command.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

             Note - if : is entered for the member name position,
             REVIEW will display a member selection list.

 operands -  optional, may include any desired TSO REVIEW operands.
             e.g. "REVIEW : GEN" to display member generations
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=SMPGEN
K* SMPGE
K* SMPG
K* SMP
K* SM

    Example -     SMPGEN : MAC distlib(apdpsrc) syslib(pdpsrc) +
                  txlib(pdpsorc)

   The SMPGEN subcommand assists in creating SMP/E sysmods.  While
   only ++MAC, ++MACUPD, ++SRC, and ++SRCUPD statements are
   generated, SMP/E functions can be easily completed with an editor
   by using SMPGEN output as a basis for the sysmod.

   This implementation is known as SMPGEN Lite.

   SYNTAX -
     SMPGEN  memgroup
             MAC    DISTLIB(ddn)  SYSLIB(ddn)  SSI(hexdata)  TYPE(name)
                    TXLIB(ddn) / RELFILE(numbr) / INLINE
                    OUTDSN(dsn) OLD/SHR
             -or-
             MACUPD DISTLIB(ddn)  SYSLIB(ddn)
                    OUTDSN(dsn) OLD/SHR
             -or-
             SRC    DISTLIB(ddn)  SYSLIB(ddn)
                    DISTMOD(ddn) SSI(hexdata)
                    TXLIB(ddn) / RELFILE(numbr) / INLINE
                    OUTDSN(dsn) OLD/SHR
              -or-
             SRCUPD DISTLIB(ddn)  SYSLIB(ddn)  DISTMOD(ddn)
                    OUTDSN(dsn) OLD/SHR

 ALIASES  - SM, SMP, SMPG, SMPGE, SMPGEN
 DEFAULTS - TYPE(MAC), DISTLIB(DISTLIB), SHR,
            INLINE (TXLIB or RELFILE not specified)
 REQUIRED - memgroup, DISTLIB and either MAC, MACUPD, SRC, or SRCUPD
   OPERANDS -
  memgroup - specifies the member group for which SMP/E control
             statements are desired.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

  MAC          -  define MACRO elements with ++MAC statements.  Data
                  will be included after each MAC statement if INLINE
                  is specified; otherwise, either TXLIB or RELFILE is
                  required.
  MACUPD       -  define MACRO element updates with ++MACUPD
                  statements.  Data will be included inline after each
                  MACUPD statement.  Note that SMP/E assumes input data
                  has valid IEBUPDTE sequence numbers.
  SRC           - define source elements with ++SRC statements.  Data
                  will be included after each SRC statement if INLINE
                  is specified; otherwise, either TXLIB or RELFILE is
                  required.
  SRCUPD        - define source element updates with ++SRCUPD
                  statements.  Data will be included inline after each
                  SRCUPD statement.  Note that SMP/E assumes input data
                  has valid IEBUPDTE sequence numbers.
  DISTLIB(dd)   - add "DISTLIB(dd)" to each generated SMP/E control
                  statement to specify the DDNAME of the distribution
                  library.  The DISTLIB operand is always required for
                  a SMPGEN subcommand.
  SYSLIB(dd)    - add "SYSLIB(dd)" to each generated SMP/E control
                  statement to specify the DDNAME of the target system
                  library.  The SYSLIB operand is always optional for a
                  SMPGEN subcommand.
  SSI(hexdata) -  add "SSI(hexdata)" to each generated SMP/E control
                  statement to specify system status information.  The
                  SSI operand is always optional for a SMPGEN
                  subcommand; note that the SSI operand is ignored by
                  SMP/E unless data is included inline.
  TYPE(name)   -  change generated SMP/E control statements from
                  ++MAC to ++name.  For example, to generate ++PANEL
                  statements, code TYPE(PANEL).
  TXLIB(dd)    -  add "TXLIB(dd)" to each generated SMP/E control
                  statement to specify the DDNAME where MAC or
                  SRC elements reside.  This is changed to LKLIB if
                  TYPE(PROGRAM).
  RELFILE(num) -  add "RELFILE(num)" to each generated SMP/E control
                  statement to specify the relative number of the SMP/E
                  relative file where MAC or SRC elements reside.
  INLINE       -  generate MAC or SRC elements inline.
  DISTMOD(dd)  -  add "DISTMOD(dd)" to each generated SMP/E control
                  statement to specify the DDNAME of the link edit
                  distribution library for object code produced from
                  the assembly of source code.
  OUTDSN(dsn)   - specifies the name of an existing output dataset
                  with fixed, 80 character records.  Standard TSO
                  dsname syntax should be used.  This should be a
                  cataloged sequential dataset.  OUTDATASET is an alias
                  for this keyword.

                  Note:  A member name must be entered if writing to an
                  existing partitioned data set.
  OLD           - obtain exclusive use of the output data set.
  SHR           - allow shared use of the output data set.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=SRCHFOR
K* SRCHFO
K* SRCHF
K* SRCH
K* SRC
K* SR
K* SEARCH
K* SEARC
K* SEAR
K* SEA
K* SE

    Example -     SRCHFOR a:c 'string'

  The SRCHFOR subcommand displays portions of members which contain a
  search string.  The IBM SuperC Search-For program is used.

   SYNTAX -
     SRCHFOR  memgroup  'string'
                       ALIAS/NOALIAS
                       PREFIX/SUFFIX/WORD
                       HEX
                       COL(start)
                       COL(start:latest)
                       CKPACKL
                       COBOL
                       SEQ
                       LPSF
                       NOSLIST

 ALIASES  - SR, SRC, SRCH, SRCHF, SRCHFO, SRCHFOR,
            SE, SEA, SEAR, SEARC, SEARCH
 DEFAULTS - ALIAS
            ANYC, LONGLN (IBM SuperC Search-For options)
 REQUIRED - memgroup, string
   OPERANDS -
  memgroup   - specifies the name of the member(s) to be searched.

               Default member names, member lists, member name
               ranges and member name patterns are allowed; for
               more information, enter HELP GROUP.

  string     - the string to be searched for.  It is coded as a
               delimited string like 'searched for'.  The string may
               contain one to 50 characters.

  ALIAS      - specifies that any associated members (aliases, apparent
               aliases and associated main members) are also to be
               searched.
  NOALIAS    - specifies that only the member(s) specifically identified
               are candidates for searching.
  HEX        - specifies that the string to be searched for is in
               hexadecimal format.
  PREFIX     - only those occurrences of the character string 'xxx'
               that are a prefix to a word (or a label) and that are
               within the specified (or default) columns will be
               considered a match.

               A prefix is defined as being preceded by a non-
               alphanumeric character and followed by an alphanumeric
               character.
  SUFFIX     - only those occurrences of the character string 'xxx'
               that are a suffix to a word (or a label) and that are
               within the specified (or default) columns will be
               considered a match.

               A suffix is defined as being preceded by an
               alphanumeric character and followed by a non-
               alphanumeric character.
  WORD       - only those occurrences of the character string 'xxx'
               that are a word (or a label) and that are within the
               specified (or default) columns will be considered a
               match.

               A word is defined as being preceded and followed by
               a non-alphanumeric character.
  COL(start)
             - the column in which the string must start for the search.
  COL(start:latest)
             - the column in which the string must start for the search
               and the "latest" column in which the string can start for
               the search.
  CKPACKL    - check for packed format and unpack the input data set
               or member before searching.
  COBOL      - do not search columns 1-6 in FB 80 data sets.
  SEQ        - do not search FB 80 or VB 255 standard sequence number
               columns.
  LPSF       - list previous Search-For following lines. Lists the
               matched string line and up to n preceding and n
               following lines for context.  BEFORE and AFTER are
               aliases for LPSF.

               Note:  the number of lines is set by the global
               variable &LPSFV.
  NOSLIST    - do not print member select statements.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=SUBMIT
K* SU
K* SUB
K* SUBM
K* SUBMI

    Example -     SUBMIT mema:memb

 The SUBMIT subcommand submits a JCL member.  The TSO SUBMIT
 command is used; any desired SUBMIT operands may be specified
 after the member name.
   SYNTAX -
     SUBMIT  member operands

 ALIASES  - SU, SUB, SUBM, SUBMI, SUBMIT
 DEFAULTS - member
 REQUIRED - none.
   OPERANDS -
  member   - optional, specifies the member name(s) to be passed
             (along with the data set name) to the TSO SUBMIT command.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

  operands - optional, may include any desired TSO SUBMIT operands.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=SUBLIST
K* SUBL
K* SUBLI
K* SUBLIS

    Example -     IF amx/ noalias then(SUBLIST)
                  PRINTOFF * form(dx00) nohead
                  COPY     * other.library
                  DELETE   *

   The SUBLIST subcommand forms member sublists.  When SUBLIST gains
   control, it forms a new member group using the individual member
   names passed to it; each -PDS86- subcommand which invokes SUBLIST
   defines a new member sublist.

   SUBLIST disregards duplicate member names.

   SUBLIST is useful for the THEN or ELSE keywords of the IF and FIND
   subcommands in that operands are not supported after the subcommand
   name; but if SUBLIST is used as the subcommand, a following
   subcommand (which uses * for the group name) may have any desired
   operands.

   Also, if multiple operations are to be performed to the same list
   of members, they can be organized as a single member group using
   the SUBLIST subcommand.
   SYNTAX -
     SUBLIST  memgroup ALIAS/NOALIAS
                       =MEMLIST
                       REVERSE

 ALIASES  - SUBL, SUBLI, SUBLIS, SUBLIST
 DEFAULTS - memgroup, NOALIAS
 REQUIRED - none.
   OPERANDS -
  memgroup - optional, specifies the group of members whose names
             are to be defined as a member group.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

  ALIAS    - specifies that any associated members (aliases, apparent
             aliases and associated main members) are also to be
             added to the sublist.
  NOALIAS  - specifies that only the member(s) specifically
             identified are to be entered in the sublist.
  =MEMLIST - sets the sublist to members in the current MEMLIST.
  REVERSE  - specifies that the member list is to be inverted; include
             all members except those in the sublist specification.

             Note:  this only works for a single member group
             range, pattern, or combination specification.
             e.g., TSO* or XMIT/ or P86:
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=SVC
K* SV

    Example -     SVC 109

   The SVC subcommand formats information regarding the SVC table.
   SVC's are extensions to the operating system which can be invoked
   to perform system tasks.  SVC's receive control in supervisor state
   and in the master storage protect key (key zero).  They have the
   power to alter otherwise protected storage areas or issue privileged
   instructions that cannot be issued directly from problem programs.

   If no SVC number is requested, a formatted list of all 256 SVC's is
   provided.  If a SVC number is specified, only that SVC is formatted.

   Type 1 SVC's cannot link to other routines and cannot issue other
   SVC's from within the routine.  They receive control with the local
   lock held and can obtain all other locks.  They reside in the system
   nucleus (IEANUC0x).

   Type 2 SVC's can link to other routines and can issue other SVC's
   themselves.  They require no locks but can issue them.  Like type 1
   SVC's, they reside in the system nucleus.

   Type 3/4 (3 or 4) SVC's can link to other routines and can issue
   other SVC's.  They require no locks but can issue them.  They reside
   in the Link Pack Area (LPA) or Modified Link Pack Area (MLPA).
   They can be loaded from any of the LPA libraries or alternatively,
   from SYS1.SVCLIB or SYS1.LINKLIB.

   Type 6 SVC's cannot link to other routines or issue other SVC's.
   They execute disabled, meaning that no other program can gain
   control within MVS during the execution of the SVC.  Locks cannot
   be held on entry to the SVC.  Like types 1 and 2, type 6 SVC's
   reside in the system nucleus.

   Four SVC's are ESR Router SVC's.  SVC 109 contains a SVCTABLE for
   type 3 or 4 ESR SVC's, SVC 116 contains a SVCTABLE for type 1 ESR
   SVC's, SVC 122 contains a SVCTABLE for type 2 ESR SVC's, and SVC 137
   contains a SVCTABLE for type 6 ESR SVC's.

   Note: This subcommand requires the MXI program.
   SYNTAX -
     SVC num-mask

 ALIASES  - SV, SVC
 DEFAULTS - *
 REQUIRED - none.
   OPERANDS -
  num-mask   - optional decimal number that filters the displayed list
               by all or part of the decimal SVC number.  The wildcard
               character of '*' and a placeholder character of '%' can
               be used.

               The default value for num-mask is '*'.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=TIME

    Example -     TIME

  The TIME subcommand displays the time, day, and date.

  8.10.56 AM      THURSDAY    AUG 10, 2017    (17.222)
   SYNTAX -
     TIME

 ALIASES  - none.
   OPERANDS -
  no operands are supported.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=TSO
K* TS
K* T

    Example -     TSO listc lev(sys2)

   The TSO subcommand may be used to invoke a TSO command processor
   or CLIST.  Any desired operands may be specified after the name
   specified.
   SYNTAX -
     TSO  command operands

 ALIASES  - T, TS, TSO
 DEFAULTS - none.
 REQUIRED - command
   OPERANDS -
  command  - specifies the CLIST or command processor to be given
             control.

             If the form %cnam if used, CNAM is assumed to be a
             CLIST name.

  operands - optional, may include any desired operands.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=TSOEDIT
K* TSOE
K* TSOED
K* TSOEDI

    Example -     TSOEDIT mema:memb cntl

 The TSOEDIT subcommand edits a member; The TSO EDIT command is used.

 If an EDIT type keyword is entered, that keyword is passed to EDIT
 as the descriptive qualifier; otherwise, a descriptive qualifier is
 chosen as follows:
   A. If the low-level qualifier of the partitioned data set name is
      one of the valid descriptive qualifiers for EDIT (ASM, BASIC,
      CLIST, CNTL, COBOL, DATA, IPLI, LIST, PLI, TEXT or VSBASIC),
      that qualifier is passed to EDIT.
   B. If the low-level qualifier is FORT, GOFORT is passed to EDIT.
   C. Otherwise, the data type qualifier is not a valid descriptive
      qualifier and the general descriptive qualifier, DATA, is
      passed to EDIT.
   SYNTAX -
     TSOEDIT  member NONUM ASIS OLD/NEW
                     ASM/BASIC/CLIST/CNTL/COBOL/DATA/
                     FORTE/FORTG/FORTGI/FORTH/GOFORT/
                     IPLI/LIST/PLI/PLIF/TEXT/VSBASIC

 ALIASES  - TSOE, TSOED, TSOEDI, TSOEDIT
 DEFAULTS - member, EDIT type based on the data set name
 REQUIRED - none.
   OPERANDS -
  member  - optional, specifies the member name(s) to be passed (along
            with the data set name) to the TSO EDIT command.

            Default member names, member lists, member name
            ranges and member name patterns are allowed; for
            more information, enter HELP GROUP.

  NONUM   - specifies that the member is to be edited without line
            numbers.
  ASIS    - specifies that the member is to be edited with upper and
            lower case data.
  OLD     - specifies that -PDS86- is to verify that the member
            exists before calling EDIT.
  NEW     - specifies that -PDS86- is to verify that the member
            does not exist before calling EDIT.

 EDIT type keywords are as follows:
  ASM     -  EDIT type is assembly
  BASIC   -  EDIT type is BASIC
  CLIST   -  EDIT type is CLIST
  CNTL    -  EDIT type is CNTL
  COBOL   -  EDIT type is COBOL
  DATA    -  EDIT type is DATA
  FORTE   -  EDIT type is FORTRAN level "E"
  FORTG   -  EDIT type is FORTRAN level "G"
  FORTGI  -  EDIT type is FORTRAN level "GI"
  FORTH   -  EDIT type is FORTRAN level "H"
  GOFORT  -  EDIT type is GOFORT
  IPLI    -  EDIT type is IPLI
  LIST    -  EDIT type is LIST
  PLI     -  EDIT type is PLI
  PLIF    -  EDIT type is PLI (F-level)
  TEXT    -  EDIT type is TEXT
  VSBASIC -  EDIT type is VSBASIC
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=TSOLIST
K* TSOLIS
K* TSOLI
K* TSOL

    Example -     TSOLIST mema:memb

   The TSOLIST subcommand lists a member.  The TSO LIST command is
   used; any desired LIST operands may be specified after the member
   name.
   SYNTAX -
     TSOLIST  member BYPASS('INTEGER')   MAX('INTEGER')  HEX/X
                     NUM/SNUM/NONUM   COL('BEGIN COLUMN':'END COLUMN')

 ALIASES  - TSOL, TSOLI, TSOLIS, TSOLIST
 DEFAULTS - member, NUM (if a non-numeric is encountered, then NONUM)
 REQUIRED - none.
   OPERANDS -
  member  -  specifies the member to be listed.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

  operands - optional, may include any desired TSO LIST operands.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=USAGE
K* U
K* US
K* USA
K* USAG

    Example -     USAGE

 The USAGE subcommand displays statistics on the current data set.

 The statistics displayed include:
   the number of disk storage tracks allocated
   the number of disk storage tracks currently in use and free
   the number of disk storage extents required for the data set
   the number of directory blocks allocated
   the number of directory blocks currently in use and free
   the number of disk storage tracks used by the directory
   the number of members in the directory
   the number of member names which are alias names
   SYNTAX -
     USAGE

 ALIASES  - U, US, USA, USAG, USAGE
   OPERAND -
  If any operand is entered, data set extent information will also
  be displayed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=VIEW
K* VIE
K* VI
K* V

    Example -     VIEW mema:memb

  The VIEW subcommand enters ISPF view for a member
  (for additional information on the relationship of -PDS86- and
  ISPF view, enter HELP DIALOG).

  Note: on the first entry of a VIEW subcommand -PDS86-
  will present any pending EDIT recovery sessions to you before
  entering VIEW for a selected member.
   SYNTAX -
     VIEW  member  OLD/NEW   MACRO(macname)    SM/SETMACRO(macname)
                            PROFILE(profname)   SP/SETPROF(profname)

 ALIASES  - V, VI, VIE, VIEW
 DEFAULTS - member
 REQUIRED - none.
   OPERANDS -
  member      - optional, specifies the name of the member(s) to be
                viewed.

                Default member names, member lists, member name
                ranges and member name patterns are allowed; for
                more information, enter HELP GROUP.

                Note - if : is entered for the member name position,
                an ISPF member selection screen will be provided.

  OLD         - -PDS86- will verify that the member exists before
                invoking ISPF VIEW service.
  NEW         - -PDS86- will verify that the member does not exist
                before invoking ISPF VIEW service.
  MACRO(m)    - For ISPF Version 2, this parameter may be used to
                specify an initial edit macro name.
  SM(mname)   - For ISPF Version 2, this parameter may be used to
                specify a default initial edit macro name; to nullify
                this parameter, you may enter SM(*).
  SETMACRO(m) - For ISPF Version 2, this parameter may be used to
                specify a default initial edit macro name; to nullify
                this parameter, you may enter SETMACRO(*).
  PROFILE(p)  - For ISPF Version 2, this parameter may be used to
                specify the edit profile name (the supplied name will
                be used instead of the low-level DSNAME qualifier).
  SP(pname)   - For ISPF Version 2, this parameter may be used to
                specify a default edit profile name; to nullify this
                parameter, you may enter SP(*).
  SETPROF(p)  - For ISPF Version 2, this parameter may be used to
                specify a default edit profile name; to nullify this
                parameter, you may enter SETPROF(*).
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=VERIFY
K* VE
K* VER
K* VERI
K* VERIF

    Example -     VERIFY mema:memb

 The VERIFY subcommand validity checks data sets.  For partitioned
 data sets, the entire data set may be checked by entering : in the
 member name position; an individual member or member group may be
 checked by entering its name in the member name position.

 VERIFY checks partitioned data sets in the following manner:
  A.  For VERIFY : UPDATE, a dummy member is added and deleted to
      determine if the data set directory is full and if normal PDS
      functions are possible.  Note that this is the only potential
      data set update performed by the VERIFY subcommand.
  B.  The data set directory is read, member names are placed into
      a program table in TTR sort order and the following checks
      are performed:
      1.  If NAME is in effect, member names are checked for validity.
      2.  If the data set is a load library and LKED is in effect,
          the following illegal editor attribute combinations are
          checked:
          a.  Modules with RENT and NOREUS attributes
          b.  Modules with RMODEANY and AMODE24 or AMODEANY attributes
          c.  Modules with OVLY and RENT, REUS, REFR, SCTR, RMODEANY,
              AMODE31, AMODE64, or AMODEANY attributes
          d.  Modules with TEST and NOEDIT attributes
          e.  Modules with REUS and SCTR attributes
      3.  If LOAD is in effect and the data set is a load library,
          each member is checked for ABENDs as it is LOADED.
      4.  Each member is checked for current usage by an ISPF EDIT
          session.
      5.  Member directory entries are checked for correct name order.
      6.  Each member's TTR address is checked against the end of
          the data set.
  C.  The program TTR table is checked for:
      1.  Orphan members (aliases with no associated main member).
      2.  Apparent alias members (main members whose start address
          matches another main member's start address).
      3.  Alias load modules whose directory pointers to associated
          main members are incorrect.
      4.  Alias load modules whose RMODE entries or main AMODE entries
          do not match their base module's entries.
  D.  If READ or INPUT is in effect, the directory and each member
      is read checking for:
      1.  Permanent I/O errors
      2.  Input blocksizes exceeding the MAXBLK value
          or if MAXBLK is omitted, the DCB BLKSIZE
      3.  Input blocksizes/LRECL not an integral if RECFM=F
      4.  Input LRECLs exceeding DCB LRECL if RECFM=V
      5.  Input LRECLs less than four bytes if RECFM=V
      6.  Null members
      7.  Directory RLD/CONTROL counts for modules linked since
          OS/VS which do not match the first RLD entry
  E.  Informational messages regarding the data set are provided.

 The VERIFY subcommand validity checks sequential data sets in the
 following manner:
  A.  The data set is checked for current usage by an ISPF EDIT session.
  B.  If READ or INPUT is in effect, the data set is read checking for:
      1.  Permanent I/O errors
      2.  Input blocksizes exceeding the MAXBLK value
          or if MAXBLK is omitted, the DCB BLKSIZE
      3.  Input blocksizes/LRECL not an integral if RECFM=F
      4.  Input LRECLs exceeding DCB LRECL if RECFM=V
      5.  Input LRECLs less than four bytes if RECFM=V
  C.  Informational messages regarding the data set are provided.
   SYNTAX -
     VERIFY  member  LOAD   /  NOLOAD
                     LKED   /  NOLKED
                     MAXBLK(bsize)
                     NAME   /  NONAME
                     INPUT  /  NOINPUT    or    READ / NOREAD
                     STATS  /  NOSTATS
                     UPDATE /  NOUPDATE

 ALIASES  - VE, VER, VERI, VERIF, VERIFY
 DEFAULTS - LOAD, LKED, NAME, INPUT, STATS, NOUPDATE
 REQUIRED - none.
   OPERANDS -
  member    - optional, specifies the member(s) to be validity
              checked.  If : is entered in the member name position,
              the data set is validity checked; otherwise, only the
              specified members are checked.

              Default member names, member lists, member name
              ranges and member name patterns are allowed; for
              more information, enter HELP GROUP.

  LOAD      - For load libraries, each member is to be LOADED.
  NOLOAD    - No members are to be LOADED.
  LKED      - For load libraries, linkage editor checks are to
              be performed.
  NOLKED    - No linkage editor checks are to be performed.
  MAXBLK(b) - Messages are to be generated for members containing
              blocks larger than the value b.
  NAME      - Each member name is to be checked for validity.
              Valid member names are from one to eight characters
              long containing upper case alphanumeric characters
              and the first character may not be numeric.
  NONAME    - No members names are to be checked.
  INPUT     - Each member (or the sequential data set) is to be input.
  NOINPUT   - No members (nor the sequential data set) are to be input.
  READ      - Each member (or the sequential data set) is to be input.
  NOREAD    - No members (nor the sequential data set) are to be input.
  STATS     - Normal completion statistical messages are to be output.
  NOSTATS   - No statistical messages are to be output.  This would
              normally be used to check a member or a data set for
              unusual conditions.
  UPDATE    - A test member addition and deletion is to be attempted
              to determine if the PDS directory has any available
              space and if normal PDS operations are possible on
              the data set.
  NOUPDATE  - No data set modifications are to be made.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=VPDSE
K* VPDS
K* VPD

    Example -     VPDSE

 The VPDSE subcommand invokes the IBM utility IEBPDSE (z/OS 1.13)
 to verify the directory structure of a PDSE dataset.

 IEBPDSE returns a code in register 15 to indicate the results of
 program execution.  The return codes and their meanings are:

 Codes      Meaning
 00 (X'00') Successful completion.
 04 (X'04') The input PDSE is slightly damaged. Processing continues.

 This return code describes data sets that can be opened normally but
 but have some form of corruption. Currently, the only instance of a
 "slightly" damage damaged PDSE is when the free space list marks free
 pages as used, wasting space that could normally be reclaimed. This
 does not prevent the user from opening the PDSE but the user should
 copy the PDSE to a new data set.

 08 (X'08') The input PDSE is corrupted. The utility ends.
 12 (X'0C') The input PDSE could not be opened. The utility ends.
 16 (X'10') The input data set is not a PDSE. The utility ends.
   SYNTAX -
     VPDSE  LIST/NOLIST

 ALIASES  - VPD, VPDS, VPDSE
 DEFAULTS - LIST
 REQUIRED - none.
   OPERANDS -
  LIST          - specifies that IGW700I PDSE Directory Validation
                  message text explanations are to be displayed.
  NOLIST        - specifies that IGW700I PDSE Directory Validation
                  message text explanations are not to be displayed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=VPSPRINT
K* VPSPRIN
K* VPSPRI
K* VPSPR
K* VPSP
K* VPS
K* VP

    Example -     VPSPRINT mema:memb r130

   The VPSPRINT subcommand prints a hardcopy list of a member.  The
   TSO VPSPRINT command is used; any desired VPSPRINT operands may
   be added after the member name.
   SYNTAX -
     VPSPRINT  member printer DDNAME(ddname)  DIRECT(KEEP/DELETE)
                             LINES(linenum1:linenum2)
                             NUM(loc,length)/SNUM(loc,length)/NONUM
                             FCB(fcbname)  FORMS(formname)
                             CLASS(c)  HOLD/NOHOLD
                             COL(col1:col2, ...)  COPIES(number)
                             PAGELEN(num)  TMARGIN(num)  BMARGIN(num)
                             SINGLE/DOUBLE/CCHAR
                             FOLD(width)/TRUNCATE(width)
                             EJECT/NOEJECT  NOEJMESS  NOHEADER
                             TERMINAL  TRACE  WTR(wtrname)

 ALIASES  - VP, VPS, VPSP, VPSPR, VPSPRI, VPSPRIN, VPSPRINT
 DEFAULTS - NUM, CLASS(A), COPIES(1), NOHOLD, SINGLE, CCHAR, NOEJECT
 REQUIRED - member and printer
   OPERANDS -
  member   - specifies the member name(s) to be passed (along with
             the data set name) to the TSO VPSPRINT command.

             Default member names, member lists, member name
             ranges and member name patterns are allowed; for
             more information, enter HELP GROUP.

  printer  - specifies the name of the VTAM printer which is to
             print this data set.
  operands - optional, may include any desired TSO VPSPRINT operands.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=VTOC
K* VTO
K* VT

    Example -     VTOC tso001 cont(mvs43)

  The VTOC command displays selected data sets on a disk or set of
  disks.  Each disk has a volume table of contents (VTOC).  This
  table is searched for data sets that meet the specifications.
   SYNTAX -
     VTOC  volumelist  LEVEL(dsnamestart)
                      EXLEVEL(dsnamestart)
                      CONTAINING(dsnamestring)
                      ENDING(dsnameend)
                      BREAK(breakchars)
             CAT
             ENQ
             TRK/CYL/KB/MB
             NOSORT/SORT(sortfields)
             NOPRINT/PRINT(printop (printitemlist))
             LIMIT(keyword oper value)
             AND1/OR1(keyword oper value)
             AND2/OR2(keyword oper value)
             AND3/OR3(keyword oper value)
             CHARS(charsperline)
             LINES(linesperpage)
             NOHEADING/HEADING(text)
             DSNLEN(length)

 ALIASES  - VT, VTO, VTOC
 DEFAULTS - List all data sets on the volume(s) selected;
            SORT, PRINT, TRK
 REQUIRED - volumelist
   OPERANDS -
  volumelist -
         a volume name or a list of volume names in parentheses.  If
         the first one to five characters of a volume name are entered,
         all volumes that are mounted on the machine which start with
         those characters will be listed.  If 'all' is specified, all
         non-virtual volumes which are online and ready will be
         processed.  If 'alv' is specified, all virtual volumes which
         are online and ready will be processed, if they are mounted
         PRIVATE/RESERVED or PRIVATE/RESIDENT.

  LEVEL(dsnnametart) -
         specifies the high level qualifiers to be searched.  This will
         not be prefixed by your USERID or prefix.  Only data sets
         starting with these prefixes will be listed.
  EXLEVEL(dsnamestart) -
         specifies the high level qualifiers to be omitted.  This will
         not be prefixed by your USERID or prefix.  Data sets starting
         with these prefixes will not be listed.
  CONTAINING(dsnamestring) -
         specifies a character string contained in the data set name.
         At least one of the strings must be in the DSNAME for the data
         set to be listed.  These strings need not conform to DSNAME
         standards so they can begin with a period or a number.
  ENDING(dsnameend) -
         specifies the ending characters of the DSNAME.  The final
         nonblank characters of the DSNAME must be one of these strings
         to allow the data set to be listed.  These strings must
         conform to DSNAME standards.
  CAT    - A locate is done for each DSNAME on the volumes listed
           and status is indicated.  Note: this option uses a
           considerable amount of processing time.
             C -  cataloged on this volume
             N -  not cataloged
             W -  cataloged on another volume
             E -  catalog processing error
  ENQ    - A test is performed for an ENQ with a major name of
           SYSDSN and a minor name of the dataset name to find out
           if the dataset is in use. If the dataset is VSAM the cluster
           name is located and used for the ENQ test.
           Note - this option uses a lot of processing time.
             N -  not enqueued
             S -  allocated with DISP=SHR
             E -  exclusively allocated
             ? -  catalog processing error
             * -  enqueue processing error
  TRK    -  space is to be reported in track units.
  CYL    -  space is to be reported in cylinder units.
  KB     -  space is to be reported in kilobyte units.
  MB     -  space is to be reported in megabyte units.
  NOSORT -  the data sets are not sorted.  They are output as they
              are found.
  SORT(sortfields) -
              data sets are sorted into alphabetical order,
              based upon the sort fields specified.
              DSNAME,VOLUME,ALLOC,USED,UNUSED,PCT,EX,DSO,RFM,
              LRECL,BLKSZ,CDATE,EXPDT,REFDT are valid sort fields.
              A/D  is required after each sort field to indicate
              ascending/descending sequence.
  BREAK(breakchars) -
              the listing will contain a new header, (on a new page
              if the VTOCOUT DD card option is used), whenever the
              specified number of characters differs from the
              preceding data set.  This option functions only with
              the SORT option.
  CHARS(charsperline) -
              specifies the number of characters on each
              line of output.  The default is 150 for print and the
              linesize of the terminal for tso sessions.
              You can get more information by specifying a larger
              number of characters per line or you can limit the
              printing by setting a smaller number of characters
              per line of output.
  LINES(linesperpage) -
              specifies the number of lines before a new title line is
              produced.  It defaults to 60 for print and to the screen
              size for TSO sessions.
  NOHEADING - do not produce a heading.  The heading will only be
              output if the VTOCOUT DD statement is present.
  HEADING(text) -
              if a DD statement with a DDNAME of VTOCOUT is present,
              this text will be used to begin every page.  Carriage
              control should be included (ASA).  The default header
              consists of VTOC command version 02 and the command that
              was entered.
  DSNLEN(length) -
              specifies the length of the DSNAME to print.  the rest of
              the DSNAME is truncated.  The CHARS parameter will also
              cause the DSNAME to be truncated, if the name and the
              preceding information exceeds the print line.
  NOPRINT   - specifies that individual items are not to be listed.
              The command can be used to calculate totals.
  PRINT(printop (printitemlist)) -
              specifies the items to print.  the printop is the
              operation to be performed as follows:
                NEW - the printitemlist is a complete list of what
                      to print.
                REP - the first printitem will be replaced with the
                      rest of the items on the list.
                ADD - the rest of the printitemlist will be added
                      after the first item on the list.
                DEL - the items on the printitemlist will not be
                      printed.

              The printitemlist names are the same keywords used
              in LIM, AND, and OR functions and are also the titles
              as printed.  These keywords can be ALLOC, UNUSED, USED,
              PCT, EX, DSO, RFM, BLKSZ, LRECL, CDATE, EXPDT, REFDT,
              SECT, PASS, ROUND, CCHH, VOLUME, UNIT, DSNAME, ACTION,
              TYPE, RACF or UPD.

              The ADD, DEL, and REP print operations refer to the
              default print list.  The default list is ALLOC, UNUSED,
              PCT, EX, DSO, RFM, BLKSZ, LRECL, REFDT, CDATE, VOLUME,
              DSNAME, EXPDT, SECQ, SECT, ROUND, PASS, ACTION, and
              type.  As noted under CHARS above, only the items that
              will fit on the print line will be listed.
  LIMIT(keyword oper value) -
              specifies which data sets are to be listed.  only data
              sets that satisfy the relation are listed.

              keyword can be ALLOC, UNUSED, USED, PCT, EX, DSO, RFM,
              BLKSZ, LRECL, CDATE, EXPDT, REFDT, SECT, PASS, ROUND,
              CCHH, VOLUME, UNIT, DSNAME, ACTION, TYPE, RACF or UPD.

              oper can be EQ, NE, LE, LT, GE or GT.

              value can be a comparison value such as FB, PS, R or
              a number like 51.
  keyword   - is the name of a data set field as follows.  The keywords
              and their values are the same as in the VTOC output.

                  ALLOC      data set allocation
                                number of kilobytes, tracks, cylinders,
                                or megabytes allocated.  default is in
                                tracks.
                  UNUSED     amount of unused space in the data
                                set.  Same units as in ALLOC.
                  USED       amount of space used in the data set.
                                Same units as in ALLOC.
                  PCT        percentage of space used in the data
                                used.
                  EX         number of extents in the data set.
                  DSO        data set organization
                                PS = sequential  PO = partitioned
                                VS = VSAM        PE = PDSE
                                DA = direct      IS = ISAM
                                U  = unmovable   HF = HFS
                                X  = extended format
                  RFM        record format
                                F  = fixed        v  = variable
                                U  = undefined    b  = blocked
                                T  = track overflow
                                S  = spanned or standard
                                A  = asa carriage control
                                M  = machine carriage control
                  BLKSZ      blocksize for physical blocks of data.
                  LRECL      logical record length in bytes.
                  CDATE      creation date in the form YYDDD,
                                sometimes called Julian.
                  EXPDT      expiration date in the same form.
                                This field is rarely used.
                  REFDT      last use date in the same form.  This date
                                is when the data set was last opened.
                  SECT       type of allocation
                                A  = absolute track
                                B  = blocks
                                T  = tracks
                                C  = cylinders
                  PASS       protection indicators
                                N  = none
                                T  = read and write protection
                                W  = write protection
                  ROUND      space rounded up to cylinders
                                R  = round
                                N  = no round
                  CCHH       cylinder and head address, in 4 or 8
                                hexadecimal digits.  If 4 digits are
                                used, only the cylinder is used for
                                comparison, otherwise, the cylinder
                                and track are compared.
                  VOLUME     volume serial number or disk name
                  UNIT       unit or device type
                  DSNAME     name of the data set
                  ACTION     some error indications
                  TYPE       reserved for exit usage.
                  RACF       RACF indicator
                                N  = not indicated
                                Y  = indicated
                  UPD        updated since last backup
                                N  = not updated
                                Y  = updated
  oper      - is an operator.  The list of operators is as follows:
                  EQ  is equal to
                  NE  is not equal to
                  LE  is less than or equal to
                  LT  is less than
                  GE  is greater than or equal to
                  GT  is greater than
  value     - gives the value of the item for comparison, such as
              FB, PS, R, or a number.
  AND1(keyword oper value) -
              specifies which data sets are to be listed.  Both the
              limit and this condition must be true to allow the
              listing.

              keyword can be ALLOC, UNUSED, USED, PCT, EX, DSO, RFM,
              BLKSZ, LRECL, CDATE, EXPDT, REFDT, SECT, PASS, ROUND,
              CCHH, VOLUME, UNIT, DSNAME, ACTION, TYPE, RACF or UPD.

              oper can be EQ, NE, LE, LT, GE or GT.

              value can be a comparison value such as FB, PS, R or
              a number like 51.
  OR1(keyword oper value) -
              specifies which data sets are to be listed.  Either the
              limit or this condition must be true to allow the
              listing.

              keyword can be ALLOC, UNUSED, USED, PCT, EX, DSO, RFM,
              BLKSZ, LRECL, CDATE, EXPDT, REFDT, SECT, PASS, ROUND,
              CCHH, VOLUME, UNIT, DSNAME, ACTION, TYPE, RACF or UPD.

              oper can be EQ, NE, LE, LT, GE or GT.

              value can be a comparison value such as FB, PS, R or
              a number like 51.
  AND2(keyword oper value) -
              specifies which data sets are to be listed.  Both the
              previous result and this condition must be true to allow
              the listing.

              keyword can be ALLOC, UNUSED, USED, PCT, EX, DSO, RFM,
              BLKSZ, LRECL, CDATE, EXPDT, REFDT, SECT, PASS, ROUND,
              CCHH, VOLUME, UNIT, DSNAME, ACTION, TYPE, RACF or UPD.

              oper can be EQ, NE, LE, LT, GE or GT.

              value can be a comparison value such as FB, PS, R or
              a number like 51.
  OR2(keyword oper value) -
              specifies which data sets are to be listed.  Either the
              previous result or this condition must be true to allow
              the listing.

              keyword can be ALLOC, UNUSED, USED, PCT, EX, DSO, RFM,
              BLKSZ, LRECL, CDATE, EXPDT, REFDT, SECT, PASS, ROUND,
              CCHH, VOLUME, UNIT, DSNAME, ACTION, TYPE, RACF or UPD.

              oper can be EQ, NE, LE, LT, GE or GT.

              value can be a comparison value such as FB, PS, R or
              a number like 51.
  AND3(keyword oper value) -
              specifies which data sets are to be listed.  Both the
              previous result and this condition must be true to allow
              the listing.

              keyword can be ALLOC, UNUSED, USED, PCT, EX, DSO, RFM,
              BLKSZ, LRECL, CDATE, EXPDT, REFDT, SECT, PASS, ROUND,
              CCHH, VOLUME, UNIT, DSNAME, ACTION, TYPE, RACF or UPD.

              oper can be EQ, NE, LE, LT, GE or GT.

              value can be a comparison value such as FB, PS, R or
              a number like 51.
  OR3(keyword oper value) -
              specifies which data sets are to be listed.  Either the
              previous result or this condition must be true to allow
              the listing.

              keyword can be ALLOC, UNUSED, USED, PCT, EX, DSO, RFM,
              BLKSZ, LRECL, CDATE, EXPDT, REFDT, SECT, PASS, ROUND,
              CCHH, VOLUME, UNIT, DSNAME, ACTION, TYPE, RACF or UPD.

              oper can be EQ, NE, LE, LT, GE or GT.

              value can be a comparison value such as FB, PS, R or
              a number like 51.

  EXAMPLES -
  1.  List all data sets on VOL*** volumes:
          VTOC vol

  2.  List all data sets on all volumes:
          VTOC all

  3.  List all data sets that start with  XXX on any MV**** volume:
          VTOC mv lev(xxx)

  4.  List all data sets that contain LIST and do not start with SYS1:
          VTOC vol cont(list) exlev(sys1)

  5.  List all recently created data sets:
          VTOC vol lim(cdate gt 93001)

  6.  List data sets with unused space:
          VTOC vol lim(pct lt 50) or1(unused gt 30)

  7.  List data sets with multiple extents:
          VTOC vol lim(ex gt 1)

  8.  List all of a user's data sets on TSO001:
          VTOC tso001 level(ser002)

  9.  List all data sets over 100 tracks:
          VTOC vol lim(alloc gt 100)

 10.  List CLIST data sets:
          VTOC vol end(clist)

 11.  List all of the information about a user's data sets at a 3270:
          VTOC vol char(150)

 12.  List data sets under the fixed heads:
          VTOC vol lim(cc eq 0001) or1(cc eq 0002)

 13.  Check if data sets on volume VOL*** are cataloged correctly:
          VTOC vol cat print(new (alloc pct cat DSNAME))

 14.  List used space instead of unused, in tracks:
          VTOC vol print(rep (unused used)) trk

 15.  List all data sets on 335*** volumes sorted by ALLOC in
      descending sequence, VOLUME and DSNAME in ascending sequence:
          VTOC 335 sort(alloc,d,volume,a,dsname,a)
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=XISPMODE
K* XI
K* XIS
K* XISP
K* XISPM
K* XISPMO
K* XISPMOD

    Example -     XISPMODE

  The XISPMODE subcommand suspends ISPMODE and switches -PDS86- to
  line mode terminal output.

   SYNTAX -
     XISPMODE

 ALIASES  - XI, XIS, XISP, XISPM, XISPMO, XISPMOD
   OPERANDS -
  no operands are supported.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=XMIT
K* XMI
K* XM

    Example -     XMIT mema:memb node.userid

 The XMIT subcommand invokes TSO TRANSMIT to send members to an
 addressee or dataset.

   SYNTAX -
     XMIT  memgroup  addressee
                      ALIAS/NOALIAS
                      NOTIFY/NONOTIFY
                      OUTDSN(dsname)
                      OUTFILE(ddname)
                      LOG/NOLOG
                      WARN/NOWARN
                      SYSOUT(class)
                      MESSAGE

 ALIASES  - XM, XMI, XMIT
 DEFAULTS - ALIAS, LOG, NOTIFY, WARN
 REQUIRED - memgroup, addressee
   OPERANDS -
  memgroup   - specifies the name of the member(s) to be transmitted.

               Default member names, member lists, member name
               ranges and member name patterns are allowed; for
               more information, enter HELP GROUP.

  addressee  - node.userid, nickname, or distribution list

  ALIAS      - specifies that any associated members (aliases, apparent
               aliases and associated main members) are also to be
               transmitted.
  NOALIAS    - specifies that only the member(s) specifically identified
               are candidates for transmission.
  NOTIFY     - request notification of delivery.  RECEIVE will
               transmit a notification to you when the addressee
               has received the data sent by you.
  NONOTIFY   - suppress notification when a file has been
               received by an addressee.
  LOG        - log transmission in the log data set.
               Your entry in the log data set will contain the
               following information:  node, userid, data set name
               and the date transmitted.
  NOLOG      - do not log transmissions in the log data set.
  WARN       - issue warning message INMX034I when the warning
               threshold is initially met, and thereafter whenever
               the warning interval is met.
  NOWARN     - do not issue warning message INMX034I when the
               warning threshold is initially met, nor thereafter
               whenever the warning interval is met.
  SYSOUT(c)  - direct utility program messages (e.g. IEBCOPY) to a
               specific sysout class.
  MESSAGE    - prompt for messages that will accompany the transmission.
  OUTDSN(dsname) -
               direct TSO XMIT output to a file rather than
               to the Job Entry Subsystem (JES).  OUTDATASET
               is an alias for this keyword.
  OUTFILE(ddname) -
               direct TSO XMIT output to a file instead of
               to the Job Entry Subsystem (JES).  OUTDDNAME
               is an alias for this keyword.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ZAP
K* ZA
K* Z

    Example -     ZAP

  The ZAP command is used to examine, dump, and modify any type of
  sequential, partitioned, or direct access dataset.  Any RECFM is
  accepted.  This command is the TSO interactive equivalent of
  IBM's service aid 'IMASPZAP' or 'SUPERZAP'.

  *** NOTE:  Not for PDSE datasets.  Use AMASPZAP instead. ***

  General Info:

  Operands are entered immediately after the command, with no
  intervening blanks.

  The block is read into a work buffer, where you modify it.  When
  you enter the "ZAP" command, the block is written back to the
  dataset from the buffer.  If any other job or user has updated that
  block in between when you first displayed it and when you "zapped"
  it, the other changes will be lost.

  If you make changes to a block, to go to another block you must
  either "ZAP" the block (re-write it to the dataset), or enter the
  command twice in a row which will cause you to leave the current
  modified block.

  Input/Output Subcommands:

  P<exp>      - Point to rec whose TTR is <exp>
  P           - Point to beginning of data set
  T<exp>      - Point to track <exp>, record 1
  T           - Point to next track, record 1
  R<exp>      - Show blk <exp> rel. to current
  R           - Point to next physical record
  B           - Point to previous record
  VTOCDS4     - Point to VTOC FMT4 DSCB
  LASTDS1     - Point to last FMT1 DSCB in VTOC
  ABS<exp>    - Point to rec with CCHHR = exp
  %<exp>      - Point to TTR @ loc <exp> in blk
  LAST        - Point to last record (DS1LSTAR)
  M<name>     - For PDS, point to member <name>
  M           - Point to start of current member
  NAME<n>     - After 'm', show entry point <n>
  NAME        - Select entry point named member
  E<n>        - Same as name<n>
  E           - Same as name
  ZAP         - Replace block from current buffer

  Session Control Subcommands:

  LOG         - Start logging this session
  CRT         - Set width 4,4 and verbose
  TERSE       - Do not do auto where
  VERBOSE     - Always give where info
  W<d>,<u>    - Set window down/up size(s)
  WFULL       - Set size to ursa screen size
  LINE40      - Set line length 40
  LINE80      - Set line length 80
  NOTE<comnt> - Write <comnt> into log file
  EJECT       - Eject a page in the log file

  Dump Subcommands:

  DUMP        - Dump all records in the
                data set in abdump format
  DUMPT<exp>  - Dump to TTR <exp> from
                current record
  DUMPT       - Dump current record only
  DUMPF<exp>  - Dump for <exp> records from
                current record
  DUMPF       - Dump current record
  DUMPE       - Dump current record to EOF

                EOF, I/O error, and END-OF-DS halt dump

  Byte Subcommands:

  D<exp>      - Display byte at offset <exp>
  <exp>       - Same as d<exp>
  D           - Page to next screen (d+#screen)
  U           - Page to prev screen (d-#screen)
  >           - Go forward in trace table
  <           - Go backward in trace table
  EBCDIC      - EBCDIC translation (default)
  ASCII       - ASCII-8 translation
  ZCODE       - ZCODE translation
  =<lab>      - Define <lab> to curr location
  NODEF       - Clear all defined labels from =

  String Subcommands:

  S<str>      - Store <str> at current loc
  X<str>      - Exclusive or at current loc
  O<str>      - OR at current loc
  N<str>      - AND at current loc
  SET<str>    - Set entire record to <str>

                S,X,O,N,SET may be entered
                alone to use previous <str>

  L<str>      - Look for <str> from next byte
  L           - Continue looking for <str>
  F<str>      - Like l<str>, cont's past EOFs
  F           - Like l, continues past EOFs

  Miscellaneous Subcommands:

  END         - Exit ZAP
  #<exp>      - Find hex/decimal value of <exp>
  FLOAT<f>    - Find floating pt value of <f>
  IDEF        - Display define label table
  ITRACE      - Display trace table
  ?N          - View nth help display (1-13)
  WHERE       - Give current location etc.
  ASM<op>     - Give object code for mnemonic
  DISASM<exp> - Disassemble instr at <exp>
  WHATMEM     - Find dir entry closest to rec *
  WM          - Same as whatmem
  DO<cmd>     - Execute TSO <cmd> as at READY
  V<exp>      - Add contents of 2 bytes at
                <exp> to curr value of loc
  BASE<exp>   - Add <exp> to buffer offset
                When computing addr
  DISP<type>  - Set record display start pos
                <type> is count | key | data
  J<ttr>      - Relative to beginning of volume

  Explanation of Symbols:

  <exp> is composed of operators (+,-,*,/)
        define symbols ('=' command) and
        hex or decimal constants. The following
        symbols are predefined: *=current offset
        L=logical record length, K=key length
        BL=maximum block size.
  <str> may be either up to 16 characters
        enclosed in any delimiter, or up
        to 16 hex digits, or a decimal val
        ending with '.' (length 4 bytes)
  <lab> may any 1 to 8 characters
  <f>   is any floating point constant in
        internal form (ie: FORTRAN F form)
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=CAX
K* CA

    Example -     CAX
 CAX Active Catalog Display (ISPMODE only)

 This display provides a list of active catalogs as indicated by the
 CAXWA (Catalog AuXiliary Work Area) control block chain. These
 catalogs are a located by one or more users. The display is sorted
 in the order ol the CAXWA control block chain unless the SORT command
 is used to change the order.

 The CAX panel shows the active catalogs and information about the
 catalog: Type, status, cache hit percentage, order number of the CAXWA
 the volume, and dataset name.

 The types are as follows:

    ICF     Integrated Catalog Facility type catalog
    VSAM    Old type VSAM catalog
    RECV    Old type VSAM recoverable catalog
    MSTR    Master catalog

 The status attribute values:

    Y-----  Allocated to the Catalog Address Space
    -S----  Catalog is SMS managed
    --V---  Using catalog data space cache
    --I---  Using the in-storage catalog
    --C---  Catalog is closed
    --D---  Catalog has been deleted
    ---A--  Catalog is tape volume catalog
    ----R-  Catalog defined for cross system sharing
    ----E-  Catalog defined for extended catalog sharing
    -----K  Catalog is locked
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LISTA
K* LA

    Example -     LISTA
 LIST Allocation Display (ISPMODE only)

 LISTA provides a list of current allocations with their status and
 type as well as some dataset information.

 This table may be rebuilt by entering the LISTA command with
 operands; if you enter LISTA without operands you are switched
 from your current display to a LISTA display.  Line commands
 (chan, dcat, free, log, o and x) are also supported.

 The first LISTA panel shows basic allocation information such as
 DDNAME, data set TYPE, Open count (under the header OP), VOLUME
 allocated, MEMBER name and DSNAME.  Command error messages are
 provided under the DATA header as follows:

   *INVALID - This line command is not supported
   *NOTPSPO - File is not sequential or partitioned
   *PERMCON - File is permanently concatenated
   *NOT CON - File is not concatenated
   *NO DDN* - File has a blank ddname
   *DD GONE - File is not allocated
   *OPEN DD - File is open
   *VTOCERR - OBTAIN I/O error, rc=12
   *NOTONVO - F1 DSCB not found in VTOC
   *BAD DSN - File is DUMMY or NULLFILE
   *IN USE* - File is in-use

 TYPE will be the DSORG or "VIO", "CTLG", "VVDS", "JES", or "TERM".

 The second LISTA panel is a double line panel which includes some
 additional information.  DISP (data set disposition), STAT (data
 set status), BLKSI (block size), LRECL (logical record length), and
 RECFM (record format) are also provided on this panel.

 STAT fields: TMP (temporary), PRM (permanent) or CNV (convertible).
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LISTC
K* LC

    Example -     LISTC DSAT
 LIST Files from catalog or VTOC (ISPMODE only)

 This display provides a list of datasets and their status
 This table may be rebuilt or added to by reentering the LISTC command.

 Note: VSAM datasets can be browsed with the REView line command
 on the LISTC table.

 The first LISTC panel shows basic dataset information like:
 DSNAME, VOLUME, attributes.  Command error messages are provided
 under the DATA header as follows:

   *INVALID - This line command is not supported
   *NOTPSPO - File is not sequential or partitioned
   *UNAVAL  - Dataset is migrated
   *NOCAT   - Catalog cannot be found or opened
   *NOTCATD - Dataset was not cataloged
   *WASCATD - Dataset was already cataloged
   *WASGONE - Dataset is not in VTOC
   *BADDSN  - Dataset syntax error
   *IOERROR - I/O error in catalog or VTOC
   *CANTCAT - Dataset name inconsistent with catalog structure
   *NOSPACE - There is no space to catalog the dataset
   *DUP     - Duplicate name on the catalog
   *NOVOL   - Volume not mounted or available
   *NOTHERE - Dataset not on volume
   *INUSE   - Dataset is in use
   *SECURED - Userid does not have update authority for dataset

 The second LISTC panel provides the full 44 character dataset name
 which leaves room for only a little attribute information.
 The third LISTC panel is a triple line panel with most of the dataset
 attribute and space information.

 The UPD field indicates if the dataset has been updated since the
 last backup:  Y for yes or N for no.

 The C and V fields are to indicate if the dataset is cataloged and/or
 on the volume:  Y for yes or N for no or "-" for unknown or not checked

 Other catalog indicators from VTOC command:
   W -  Cataloged on another volume   E -  Catalog processing error
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LISTF
K* LF

    Example -     LISTF VTOC
 LIST Files from catalog or VTOC (ISPMODE only)

 LISTF is an alias for LISTC.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LISTV
K* LV

    Example -     LISTV WORK
 LIST Volumes Display (ISPMODE only)

 This display provides a list of requested volumes and their status
 and type as well as space information.  This table may be rebuilt or
 added to by reentering the LISTV command.

 The first LISTV panel shows basic volume space information and volume
 name, device address and type, the mount attributes (PRIV, PUB, STOR),
 the volume use count and several status indicators for the volume.

    STATUS
   --INDC--
   A....... - Allocated
   .P...... - Page data set on volume is open
   ..C..... - Active catalog on volume
   ...S.... - Shared volume marked in UCB
   ...M.... - Mass storage (3330V)
   ....I... - Indexed VTOC
   ....D... - Indexed VTOC disabled
   .....V.. - VVDS allocated on volume
   ......R. - CRA (Catalog Recovery Area) on volume
   .......M - SMS managed volume

 Command error messages are provided under the DATA header as follows:

   *VTOCERR - The VTOC cannot be input
   *RESERVE - The VTOC is reserved
   *VTOCENQ - The VTOC is enqueued (LSPACE)

 The 2nd/3rd panels show VTOC information for systems programmers.
 This includes mount attributes (PRIV, PUB or STOR), mount status
 (RESV, PRES or SYSRes), status indicators (as above), the volume use
 count, the VTOC CCHH address, VTOC size in tracks, free DSCB count,
 space used on volume, number of cyls on volume, free VIRs, and
 fragmentation index.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=SET

    Example -     SET
 SET Defaults (ISPMODE only)

 The Set Default selection panel allows you to change processing
 defaults for the current session and for future PDS sessions.

 Note:  If "Save in profile ===> YES" Then
          Press <Enter>   to save variables in ISPF Profile
        Else
          Press <End/PF3> to bypass saving variables in ISPF Profile


 o  Environmental options   - SETENV

    Extended Left/Right ===> YES (Yes/No)
    Function prompt     ===> YES (Yes/No)
    Save in profile     ===> YES (Yes/No)
    Ordered Pending     ===> NO  (Yes/No)

 o  Select alias commands   - SETSEL

    Select source command ===> E    Line command for MEMLIST source
    Select load command   ===> B    Line command for MEMLIST load
    Select LISTA command  ===> C    Line command for LISTA
    Select LISTV command  ===> SP   Line command for LISTV
    Select LISTF command  ===> C    Line command for LISTF
    Select TCT   command  ===> E    Line command for TCT
    Select CAX   command  ===> UT   Line command for CAX
    Save in profile       ===> YES  (Yes/No)

 o  Log limit values        - SETLOG

    Log limits:
      Maximum size        ===> 999999   (100 to 999999)
      Size per command    ===> 999999   (100 to 999999)
      Checkpoint interval ===> 32000    (100 to  32000)
      Save in profile     ===> YES      (Yes/No)

 o  Member list options     - SETML

    MEMLIST prompt      ===> NO   (Yes/No)
    Alias check         ===> YES  (Yes/No)
    Remove deleted mem  ===> YES  (Yes/No)
    Alias update        ===> YES  (Yes/No)
    LKED Date for load  ===> YES  (Yes/No)
    Auto member update  ===) NO   (Yes/No)
    Remove old members  ===> YES  (Yes/No)
    Save in profile     ===> YES  (Yes/No)

 o  LISTV options           - SETV

    Volume space        ===> YES (Yes/No)
    Wait for space      ===> NO  (Yes/No)
    Save in profile     ===> YES (Yes/No)

 o  LIST FILE/LISTC options - SETLF

    Remove deleted DSNs ===> NO   (Yes/No)
    Save in profile     ===> YES  (Yes/No)
    Remove old DSNs     ===> NO   (Yes/No)

 o  TRAP options            - SETTRAP

    TRAP defaults:
      TRAP services on    ===> YES   (Yes/No)
      View log number     ===> *     (1-9 or * for current active log)
    Log limits:
      Maximum size        ===> 32000 (100 to 32000)
      Save in profile     ===> YES   (Yes/No)
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=TCT
K* TC

    Example -     TCT
 PDS/TSO Command Table (ISPMODE only)

 This display provides for a list of commands that can be defined
 by the user.  The commands may be for PDS or TSO.   PDS commands
 may be any command that can be entered from the View log function.
 The TSO commands are passed to ISPF through the "SELECT CMD" service
 and thus can support any IBM or user TSO command or CLIST.
 Any entry in the list can be marked as a comment line.   The type
 of command is controlled by setting the TYPE field on each entry as
 follows:

    P = PDS command
    - = TSO command or CLIST
      = TSO command or CLIST
    * = comment
    T = Trap TSO command output

 The TCT panel provides for 3 changeable fields and one information
 field:

 The OPT field is set by the user for the operation option desired.

 The MSG/RC field provides information on the last action for that line
 or the return code from the last TSO command.

 The TYPE field is set to the user to "P" for PDS commands,"*" for a
 comment, a blank or dash is for a TSO command or CLIST, or a "T"
 for Trapping the output from a TSO command.

 The COMMAND data field is filled in by the user with the actual command

 If the TYPE field or COMMAND data field is changed and the OPT field
 is blank, a "SELECT" option is assumed.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=SHOW
K* SHO
K* SH

    Example -     SHOW
 SHOW Session Log (ISPMODE only)

 The SHOW command is used to control the session log in ISPMODE.
 The session log is maintained in an ISPF dialog table for the duration
 of the PDS session.  SHOW with no operand switches to the log display.

 Optional operands:

 n       - switch to one of 9 log tables (value 1 to 9).
 RESET   - Clear table before building a new table.
 NODISPL - after switching or resetting the table do not display it
           but return to previous function table display.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=MBRGEN
K* PDSEGEN
K* PG

    Example -     MBRGEN filter
 The PDSEGEN dialog makes it possible to use member generations.
 IBM Library Access services are used to access member generations.

 The standard IBM ISPF/PDF dialogs (Edit, View, and Dslist) have
 little or no support for member generations.

 Primary Commands:

 Age      - Display member age metrics
 Backup   - Backup a V2 PDSE to a PDSEGEN backup file
 Browse   - Browse member
 C        - Change datasets
 Compare  - Compare members
 Copy     - Copy members
 Edit     - Edit member
 Filter   - Filter member list (MEMList and ML are aliases)
 Find     - Find string in members
 Genonly  - Hide     0 generations (toggle)
 Hide     - Hide non-0 generations (toggle)
 HIGen    - Display dummy members
 ID xxx   - Display only members with xxx anywhere in the ID field
 INfo     - Data set information
 Isplist  - Output member table to LIST dataset (usermod in $$MBRGEN)
 Locate   - Locate member name
 MINE     - Display only members with active userid
 MODel    - Allocate a new dataset based on the active dataset
 Output   - Output member table to temp dataset
 Prune    - Remove old generations and retain a number of generations
            0-n
 Reflist  - The Reflist command will display the last 30 data sets ISPF
            referenced. The user may select one, or none, to switch to.
 Refresh  - Refresh the member list
 Restore  - Restore a V2 PDSE from a PDSEGEN backup file
 Set      - Set default select option
 Setmacro - Set initial edit macro for a dataset suffix
 Sort     - Sort member list
 Submit   - Submit member to internal reader
 Validate - Validate PDSE with IEBPDSE utility
 View     - View member
 Left     - Scroll member list left  (toggle yy and yyyy dates)
 Right    - Scroll member list right (toggle yy and yyyy dates)

 Today    - Display all members changed today
 Week     - Display all members changed in the last 7 days
 Month    - Display all members changed in the last 30 days
 Year     - Display all members changed this year
 Since -nn
          - Display all members updated since the previous nn days
 Since yy/mm/dd
          - Display all members updated since the provided date


 Line Commands:     * = Non-0 Generations Only   ** = Generation 0 Only

 Short and Long forms (capitalized letter are valid abbreviations)

 **  A Attrib     Change attributes (Version, Mod Level, Userid)
     B Browse     Browse the member
 **  C COPy       Copy a member to another PDSE or PDS
                  Along with all generations
     D Delete     Delete a member or generation (if delete is for gen 0
                  then the member and all generations are deleted)
 **  E Edit       Edit the member (Converted to View for non-0 gens)
 *   G RECover    Recover a generation to a new member
     H Hide       Hide the current row
                  This only works to exclude the member from the display
                  and from being accessed using Browse/Edit/View
                  This will NOT exclude the member/gen from
                  Backup/Restore/Copy
     I Info       Display ISPF Statistics about the member or generation
     J SUbmit     Submit the member to the internal reader
 **  K Klone      Clone the member (gen 0 only)
       Clone      generations are not cloned
     M MAil       Mail the member
     O or /       Display a member/generation popup of commands
 *   P Promote    Promote a generation to generation 0
                  Copies a non-0 generation into generation 0 and leaves
                  user in Edit.  If you issue Edit Save, then generation
                  0 will be replaced.
 **  Q RENSwap    Rename and swap the members and all generations
 **  R REName     reName the member and all generations
     S SElect     Select the member using default set action (B, E, V)
     U User       User command
     V View       View the member
     X EXecute    eXecute the member (REXX or CLIST)
 *   Z COMpare    Compare generation 0 to non-0 generation member
     =            Repeat prior line command

 Placing the cursor on a row and pressing enter will select that member.

 Multiple members can be selected at the same time for some operations,
 such as B, C, E, V or X.  Other selections will only allow one member
 to be selected at a time (e.g. P and R).

 Any line command can be used as a block command: XX/XX or X9999
 For expanded commands double the 1st character to block it:  EEX/EEX

 Download from: http://www.cbttape.org/ftp/updates/CBT969.zip
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PGLITE
K* PGLIT
K* PGLI
K* PGL

    Example -     PGLITE
 The PGLITE dialog demonstrates the use of ISPF Dynamic Areas.  Tests
 have shown dynamic area tables can be lightning faster than using
 ISPF Table services.

 This application supports PDSE V2 member generations and is based on
 the Lionel B. Dyck PDSEGEN dialog.  Use when you want speed without
 the beef.

 PDSEGEN can be launched from PGLITE with the BIG primary command or
 the hot spot.  PDSEGEN commands can be stacked with BIG.  For example,

   big;backup
   big;restore
   big;copy
   big;model
   big;prune

 Primary Commands:
   /                   Hotlist commands pop-up
   Locate mbr          scroll to mbr: name
   Select mbr          select member for edit
   Change dsn          switch datasets
   FLip                switch to previous dataset
   REFresh             rebuild the member list
   Big filter          switch to PDSEGEN
   SORT column         sort by column
   Find mbr            scroll to mbr/ name
   RFind               repeat Find
   Info                dataset information
   CLIST               view SuperC compare listing
   Real                use real names from PDSEGEN backup
   ISPList             write out member list to ISPLIST
   VALidate cl         validate with IEBPDSE
   REFList             ISPF reference list (datasets)
   DSn                 Display PDSEGEN dataset history table
   SRCHfor             search PDS (SuperC)
   TPC subcmd          the PDS command
   VERSion             show PGLITE version
   APars               APARS for PDSE V2 MG
   FAMS                display FAMS variables
   HISt                display PGLITE modification history
   HIGen               display PDSE V2 MG dummy member info
   ORPHans             display orphan members
   QRef                display PGLITE quick reference
   SPFX                extract LoadISPF elements
   AGE                 display member age metrics
   ALLOW               permit Edit of non-zero member generations
   DISALLOW            prevent Edit of non-zero member generations
   Hel cmd             Help for a command
   ?                   UDS logo
   CUP                 Gloria, Gloria, ...

 Line Commands:
   E  ISPF Edit
   B  ISPF Browse
   V  ISPF View
   .  ISPF View (cursor select)
   S  ISPF Edit
   T  TRYIT macro
   Z  Compare non-0 gen to gen 0
   /  Options
   D  Debug (hex dump of PDSEGENI member record)

 Absolute generation numbering:
   generation 0 (current or base)
   generation 3 (third - previous)
   generation 2 (second)
   generation 1 (first - oldest)

 Hot Spots:
   PGLITE®             Switch to PDSEGEN
   Name                SORT Name
   Created             SORT Created
   Changed             SORT Changed
   Size                SORT Size
   Id                  SORT Id

+----------------------------------------------------------------------+
| PGLITE®                   TRIDJK.MBRGEN2                Row 1      of|
| Command ===>                                                  Scroll |
|                                                                      |
|    Name      GenNum VV MM  Created     Changed         Size  Init    |
| . $$$$$$$$        0 01.01 2019/04/20 2019/04/20 09:23     2     1    |
| . $$$$$$$$        1 01.00 2019/04/20 2019/04/20 09:23     1     1    |
| . $2              0 01.01 2019/04/20 2019/04/20 09:25    49    50    |
| . $2              1 01.00 2019/04/20 2019/04/20 09:25    50    50    |
| . DYNADIR         0 01.65 2019/03/27 2019/04/16 08:45    23    21    |
| . DYNADIRG        0 01.73 2019/03/27 2019/04/18 11:32    24    21    |
| . DYNADIRH        0 01.21 2019/04/17 2019/04/18 11:29    34    24    |
| . NEW             0 01.00 2019/04/20 2019/04/20 09:30     1     1    |
+----------------------------------------------------------------------+
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=FAMS

    Example -
 FAMS attribute variable names (PDSE V2):

  BLKSIZE   -  Block size
  CATACB    -  Catalog ACB
  CATNAME   -  Catalog name
  CATVOL    -  Catalog volume
  COMPIND   -  Compression indicator
  DATACLAS  -  Data class
  DEVTYP    -  Device type
  DIRBLCKS  -  Directory blocks
  DSCBTTR   -  DSCB TTR
  DSCRDT2   -  Dataset creation date
  DSEXDT2   -  Dataset expiration date
  DSNVER    -  PDSE version number
  DSORG     -  Dataset organization
  ENTNAME   -  Entity name
  ENTYPE    -  Entity type
  FILESEQ   -  File sequence number
  HARPN     -  Highest allocated relative page number
  HURPN     -  Highest used relative page number
  LIBSHROP  -  Library share options
  LRECL     -  Logical record length
  LTREFDAT  -  Dataset last reference date
  MAXGENS   -  Maximum generations
  MAXVOLS   -  Maximum volumes
  MEMCOUNT  -  Member count
  MGMTCLAS  -  Management class
  MINUNITS  -  Minimum units
  PAGSUSED  -  PDSE pages used
  PDSEFLAG  -  PDSE flag
  PDSEXFLG  -  PDSE extended flag
  RECFM     -  Record format
  SMSINFOM  -  SMS storage, data, and management class
  SMSSCMC   -  SMS storage and management class
  STORCLAS  -  Storage class
  TOTGENCT  -  Total member generation count
  TOTMEMCT  -  Total member count
  VOLCOUNT  -  Volume count
  VOLFLG    -  Volume flag
  VOLFLG2   -  Volume flag 2
  VOLLIST   -  Volume list
  VOLSER    -  Volume serial
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=EDSL

    Example -
 The EDSL exec invokes the Enhanced Data Set List dialog.

 The Enhanced Data Set List dialog makes it easy to access an individual
 dataset or OMVS file (Browse/Edit/View), groups of datasets (DSList or
 Browse/Edit/View), or an OMVS directory (UDList).

 A group will create or replace a list within the existing ISPF Personal
 Data Set List structure after an Open in DSLIST has been issued for the
 group.  The lists can be accessed in ISPF by the REFOPEND command.

 There are two views available in this dialog.  The Table view is the
 traditional ISPF table display using the TBDISPL service.  The Tree
 view utilizes an ISPF dynamic area to display the EDSL table data.

 The Tree view displays the datasets that belong to a group or list.
 All datasets can be excluded from the display with the X ALL
 (exclude all) primary command.  Individual datasets can be excluded
 or included from the display with the X (exclude) line command.
 The REFRESH command will restore the full Tree display.

 The Tree nodes are colorized based on table data type, which is:
 Group=blue, OMVS=yellow, DSList=green, DSName=pink, Header=white.

 Use the Table and Tree primary commands to switch between the
 two display modes.

   SYNTAX -
   %EDSL
         Open the EDSL list of groups
   %EDSL group
         open the specified group using the default selection option
         Type    selection option
         D       Member List
         G       Member List
         L       DSList
         O       UDList
   %EDSL sel group
         open the group using the sel option (e.g. E)
   %EDSL sel group member (or member mask)
         open the group using the sel option (e.g. E)

 Aliases  - none.
 Required - none.

Operands:
  group        - open the specified group using the default selection
                 option.
  sel          - selection option
                 (E=Edit, B=Browse, V=View, O=DSList/UDList)
  member       - member name or mask.

<PRIMARY><COMMANDS>

    Find    - Find the provided string
    HEL cmd - Display EDSL help for a cmd
    History - Display modification history
    Insert  - Insert a row into the table
    Qref    - Command quick reference
    REFresh - Refresh the group tree display        (Tree)
    RFind   - Repeat find of the provided string    (Tree)
    Set     - Display the settings window
    Table   - Switch to ISPF table view             (Tree)
    Tree    - Display the group tree view           (Table)
    Version - Display EDSL® version number
    X ALL   - Exclude all group tree nodes          (Tree)
    Debug   - Dump table for debugging              (Tree-undoc)
    Metrics - Display EDSTYPE statistics            (Tree-undoc)
    ISPList - Write tree table to ISPLIST           (Tree-undoc)
    SPFX    - Extract LoadISPF elements
    /       - Popup selection menu

<LINE><COMMANDS>

  B   -  Browse
  D   -  Delete to delete a row
  E   -  Edit
  I   -  Insert a row
  M   -  Move row up one
  MD  -  Move row down one                 (Table)
  Mx  -  Move row up (-#) down(+#)         (Table)
  N   -  Move row down one                 (Tree)
  /   -  Popup Selection menu
  O   -  Open in Dataset List
  R   -  To display the group              (Table)
  S   -  Select
  .   -  Cursor select (S)                 (Tree)
  U   -  Update (alias C)
  V   -  View
  X   -  Exclude tree node (toggle)        (Tree)
  any -  (with Dataset only)               (Table)

 Syntax: line command

 EDSL Notes:
     1. The Group name will be used as the DSList Name when
        a Group or List is selected.
     2. When opening as a data set list the list will be added
        to the Personal Data Set Lists and thus available using
        DSLIST and REFOPEND.
     3. Any existing Data Set List with the same name will be
        replaced.
     4. The Group name will be truncated to the first word or
        to the first 8 characters for the Data Set List name.
     5. Only 1 OMVS File or Directory is allowed in a group and
        no z/OS datasets may be included with it.
     6. A Group is limited to 16 dataset names as that is the limit
        supported by the ISPF MEMLIST service.
     7. Non-standard line commands in Table View only work on
        individual datasets.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=CSECTS
K* CS

    Example -
 The CS user extended line command displays the CSECT structure of a
 load module.  The CSECT table display allows the user to select a
 CSECT to be LISTed, DISAssembled, DeLINKed, or DUMPed.

 CMD  NAME     DATA     ALIASOF  LEN/LKED   --  ATTRIBUTES  -- AC MODE
 cs   PDS86                      2018/04/23 REFR RENT     TEST

+CSECTS® -------------------- CSECT Display ---------------------------+
| --------------  CSECT Display for load module --- Row 1 to 16 of 119 |
| Command ===>                                         Scroll ===> CSR |
|                                                                      |
| Primary Commands:  L csect - Locate name  SORT col - Sort column     |
|                    F 'string' - Find in load module                  |
|                                                                      |
| Line Commands:     S - LIST  Csect  A - DISASM Csect  D - DUMPT Csect|
|                    X - DUMPT Csect  O - DELINK Csect                 |
|                                                                      |
| Module:  PDS86      Dsname:  TRIDJK.LOAD                 Vol:  CBT004|
|      Name                Date      Translator Version Address Length |
| _    ALIAS                4/25/18  569623400  V01 M06 008470  000212 |
| _    ALLOCATE    *List    4/25/18  569623400  V01 M06 003930  000852 |
| _    AMBLIST              4/25/18  569623400  V01 M06 008688  000A34 |
| _    ATTNEXIT    *Delink  4/25/18  569623400  V01 M06 0032E8  00015E |
| _    ATTRIB      *Disasm  4/25/18  569623400  V01 M06 0090C0  001A53 |
| _    BROWSE               4/25/18  569623400  V01 M06 00AB18  00076E |
| _    CHANGE      *Dumpt   4/25/18  569623400  V01 M06 00B320  00006C |
| _    CLEAR                4/25/18  569623400  V01 M06 00B288  000092 |
| _    COBANAL              4/25/18  569623400  V01 M06 00B390  000B40 |
| _    COMPARE              4/25/18  569623400  V01 M06 00BED0  00030C |
+----------------------------------------------------------------------+

 Primary Commands:
   Locate csect next Locate CSECT in table
   RL                Repeat Locate
   Find 'string' ..  Find 'string' in load module
   SORT column       Sort column (N, D, A, or L)
   History           CSECTS® changes
   Version           CSECTS® version
   IDRL              Compiler signatures
   INFO              Module attributes

 Line Commands:
   S    Display CSECT with PDS LIST
   A    Disassemble CSECT with PDS DISASM
   D    Dump CSECT with SPZAP DUMPT
   X    Dump CSECT with SPZAP DUMP
   O    Delink CSECT with PDS DLINK

 Note:  The LIST output can be disassembled with the Arthur Fichtl
        REXX Interactive Short DisAssembler, ISDA on CBT File 773.

        Assign a PF key as follows:  PF13  . . tso isda
        Setup:  Enter start column and number of lines:  16 5  <PF13>
        Disassemble:  Position cursor on instruction and press <PF13>

        +-------------------------------------------------------------+
        | COMMAND ===>                                Row 1 to 9 of 9 |
        |                                                             |
        |      Instructions                                           |
        | ---- ----------------------------------------------         |
        | +000    90ECD00C     STM     R14,R12,12(R13)                |
        | +004    189F         LR      R9,R15                         |
        | +006    41B00800     LA      R11,2048(R0,R0)                |
        | +00A    41A9B800     LA      R10,2048(R9,R11)               |
        | +00E    41BAB800     LA      R11,2048(R10,R11)              |
        | +012    41000000     LA      R0,0(R0,R0)                    |
        | +016    5880B980     L       R8,2432(R0,R11)                |
        | +01A    07F8         BR      R8                             |
        | +01C    1B00         SR      R0,R0                          |
        | ********************* Bottom of data ********************** |
        +-------------------------------------------------------------+
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=MODEL

    Example -     MODEL

 Model is a user extended command to allocate a new dataset based on
 the active dataset.

 +---------------------------------------------------------------------+
 | ------------------------ MODEL entry panel ------------------------ |
 | Command ===>                                                        |
 |                                                                     |
 |    Dataset:            'AD.FILE182.PDS484'                          |
 |    Volser:             MVSRES                                       |
 |    STORCLAS:                                                        |
 |    RECFM:              FB                                           |
 |    LRECL:              80                                           |
 |    BLKSIZE             27920                                        |
 |    SPACE Units:        B        B:Blocks T:Tracks C:Cylinders       |
 |    Primary Size        798                                          |
 |    Secondary Size      221                                          |
 |    Directory Size      145      Ignored if MaxGens is > 0           |
 |    MaxGens             0        Max Allowed: 100                    |
 |    Library Type:       P        L:Library or P:PDS                  |
 |                                                                     |
 |    Update values and press Enter to ALLOCATE or PF3 to CANCEL       |
 +---------------------------------------------------------------------+
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ZTSOHELP
K* ZTSOH
K* TSOHELP
K* FSHELP
K* FSH

    Example -     ZTSOHELP

 ZTSOHELP is an ISPF dialog to display TSO HELP members from a list of
 help members that reside in the SYSHELP concatenation.  The full-screen
 help (FSHelp) program or ISPF Browse can be used as a viewer.

 +---------------------------------------------------------------------+
 | ------------  TSO Help Pages (FSHelp) - 3.8  --- Row 1 to 11 of 283 |
 | Command ===>                                        Scroll ===> CSR |
 |                                                                     |
 | L cmd -Locate  RL - Repeat Locate  Only string  - Only  R - Refresh |
 | S cmd -Select  SE - Set Viewer     SOrt col A/D - Sort  H - Help    |
 |                                                                     |
 |      Command   Component  Description                               |
 | _    ABEND       FREE     TSO help member for abend codes           |
 | _    ACCOUNT     TSO      Modify/add/delete user attributes in UADS |
 | _    ACF         ACF2     Access Control Facility Security          |
 | _    ACFCOMP     ACF2     Compile and store a set of ACF2 rules     |
 | _    ACFNRULE    ACF2     Decompile, modify, compile, store rules   |
 | _    ADDGROUP    RACF     Add group profile                         |
 | _    ADDSD       RACF     Add data set profile                      |
 | _    ADDUSER     RACF     Add user profile                          |
 | _    ALLOCATE    TSO      Allocate a data set                       |
 | _    ALTDSD      RACF     Alter data set profile                    |
 | _    ALTER       IDCAMS   Alter attributes in catalog entries       |
 +---------------------------------------------------------------------+
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=VB2FB
K* VB
K* FB2VB
K* FB
K* SYSPROC
K* SYSEXEC
K* CONVERT
K* CONV

    Example -     VB2FB

 VB2FB is a user extended command to convert CLISTs and Rexx Execs
 from VARable to FIXed record format and vice versa.

 +--------------------------------------------------------------+
 | --------- Copy Variable->Fixed and Fixed->Variable --------- |
 | Command ===>                                                 |
 |                                                              |
 |   Source Dataset:  LIONEL.EXEC                               |
 |   Target Dataset:  AD.PDSEGEN.EXEC                           |
 |   Members:         pdsegen                                   |
 |                                                              |
 |   Options:                                                   |
 |          Replace:  N (Y/N)                                   |
 |          Truncate: N (Y/N)                                   |
 |          NoRenum:  N (Y/N)                                   |
 |                                                              |
 |   Copy from a Variable to Fixed or Fixed to Variable DSN     |
 |      Members is one or more member names or name* (pattern)  |
 |                                                              |
 |      PF3 to cancel or Enter to continue                      |
 +--------------------------------------------------------------+

 Download from: https://www.lbdsoftware.com/ispftools.html
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDSMAN
K* CA-PDSMAN
K* IAN_CAIRNS

   FUNCTION -
 This section is provided to document PDSMAN support in the ATTRIB
 and DIRENTRY subcommands.  Messages PDS026I and PDS262I.

 >ATTRIB   PDSMANCI

 PDS020I PDSMANCI ATTRIBUTES ARE: NONE
 PDS120I PROGRAM RESIDENCE MODE IS 24 -- ADDRESSING MODE IS 31
 PDS026I MOD: 10/15/89  0:00 LEV:0   BY DOCTORK  EXPIRE:10/15/89
                                                 READ: 2/07/90
 PDS102I ENTRY POINT AT 000048
 PDS104I MODULE LENGTH  010080  --     65K
 PDS064I LAST LINK-EDITED ON 10/14/89  BY LKED 566528408  V03 M01

 PDS118I 1 MEMBERS RMODE24; SIZE IS 65K

 >DIRENTRY PDSMANCI

 PDS143I PDSMANCI DIRECTORY ENTRY, LENGTH=58
          0000  D7C4E2D4 C1D5C3C9  00A80337 00A80F00  *PDSMANCI.y...y..*
          0010  00000000 02C20100  802EE800 00488802  *.....B....Y...h.*
          0020  02010000 0089288F  00008928 8F00C4D6  *.....i....i...DO*
          0030  C3E3D6D9 D2400090  038F               *CTORK ....*

 PDS262I LOC NAME     VALUE     DESCRIPTION
 PDS262I --- ----     -----     -----------
 . . .
 PDS262I 24  MANMODD  0089288F  DATE LAST MODIFIED   -- FORMAT: 0CYYDDDF
 PDS262I 28  MANMODT  0000      TIME                 -- FORMAT: HHMM
 PDS262I 2A  MANEXPIR 89288F    EXPIRATION BASE DATE -- FORMAT: YYDDDF
 PDS262I 2D  MANMODN  0.        MEMBER MODIFICATION LEVEL
 PDS262I 2E  MANUSER  DOCTORK   UPDATING JOBNAME OR TSO USER
 PDS262I 36  MANPROD  00        PRODUCTIONS STATUS INDICATOR -- X'80'
 PDS262I 37  MANREAD  90038F    DATE LAST READ       -- FORMAT: YYDDDF
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=TRANSLATORS
K* TRANSID
K* TRANS
K* COMPILERS
K* COMPILER

   FUNCTION -
 This section is provided to document IBM compilers and language
 translators.  The TRANS(Partt) and LKED(Partl) operands can be used
 in the MEMLIST, IF, and HISTORY subcommands to limit the results.

 Assembler:

 OS Assembler H                   5734AS100
 OS/VS Assembler (XF)             5741SC103
 Assembler H V2                   566896201
 High-Level Assembler             569623400

 COBOL:

 OS/VS COBOL R2M3 R2M4 (VSR1)     5740CB103
 VS COBOL II                      566895801
 COBOL/370 or COBOL for MVS/VM    566895807
 COBOL for OS/390 and VM V2       5648A2500
 Enterprise COBOL for z/OS V3     5655G5300
 Enterprise COBOL for z/OS V4     5655S7100
 Enterprise COBOL for z/OS V5     5655W3200
 Enterprise COBOL for z/OS V6     5655EC6

 FORTRAN:

 VS FORTRAN V2 (COMP/LIB/DEBUG)   5668-806

 PL/I:

 PL/I for MVS and VM V1           5688-235
 VisualAge PL/I for OS/390 V2     5655-B22
 Enterprise PL/I for z/OS V3      5655-H31
 Enterprise PL/I for z/OS V4      5655-W67
 Enterprise PL/I for z/OS V5      5655-PL5

 C/C++:

 C/C++ for MVS/ESA                5688216
 C/C++ OS/390 R2                  5645001
 C/C++ OS/390 R4                  5647A01
 XL C/C++ z/OS                    5694A01

 Linkage-Editors:

 OS/VS Linkage Editor             5752SC104
 DFP/XA Linkage Editor            566528408
 DFP/370 Linkage Editor           566529508
 DFSMS/MVS Binder                 5695DF108
 z/OS Binder                      5695PMB01
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=EXTERNAL
K* PROGRAMS

   FUNCTION -
 This section is provided to document external programs that
 are used by the PDS command.  CBT programs below are included
 in the TSO Transmit file called UTILXMIT.

 External programs are called via the TSO Service Routine, IKJEFTSR.
 These programs must reside in a task or link library.

 Subcommand     External PGM       Vendor        Function
 ----------     ------------       ------        --------
 AMBLIST     -  AMBLIST            IBM           Analyze load modules
 COBANAL     -  COBANAL            CBT           Analyze COBOL loadmod
 COMPRESS    -  IEBCOPY            IBM           Compress a PDS
 COPY        -  IEBCOPY            IBM           Copy members of a PDS
 DISASM      -  ASMDASM, DISASM    IBM, CBT      Disassemble load
 DLINK       -  DELINKI            CBT           Create object from load
 LMA         -  EQALMA             IBM           Load module analyzer
 LOAD        -  PDSLOAD            CBT           IEBUPDTE ---> PDS
 MATCH       -  PDSMATCH           CBT           Compare 2 PDS files
 MXIBAT      -  MXI                CBT, ROCKET   MVS eXtended Info
 OFFLOAD     -  OFFLOAD            CBT           PDS ---> IEBUPDTE
 PTSEXP      -  GIMCPTS            IBM           Uncompress SMP PTS
 SRCHFOR     -  ISRSUPC            IBM           ISPF SuperC search
 TRKMAP      -  DISKMAP, CPKMAP    CBT, IDP      Map a disk volume
 VPDSE       -  IEBPDSE            IBM           Verify a PDSE
 XMIT        -  TRANSMIT           IBM           TSO Transmit
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ACKNOWLEDGEMENTS
K* THANKS
K* CODERS

   FUNCTION -
 This section is provided to acknowledge the assembler and system
 programmers who have contributed modifications to the PDS command
 since 1997.

 Greg Price       - PDSE support;LIST, MEMLIST, MAP, HISTORY, REPRO mods
 John Hamlet      - PDSE EAV support
 Don Poitras      - FLAG(PAGE0) mod
 Mike Mayne       - HELPLIST mod
 Al Ferguson      - PDSMAIN (ISRDSLST) mod
 Simonetti Pietro - DIALSTC mod
 Gene Coley       - RESTORE mod
 Lionel Dyck      - P86PN*PS panel mods; PDSQINST quick install
 Bruce Leland     - COMPAREC command processor
 Bill Godfrey     - PDSMATCH fixes
 Dr Janko Kalinic - Y2K, Xstats, various mods; PDSE, new subcommands
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=SHA
K* CHECKSUM
K* HASH

   Function -
  SHA-n (Secure Hash Algorithm n) is a set of cryptographic hash
  functions designed by the United States National Security Agency
  (NSA).

  Cryptographic hash functions are mathematical operations run on
  digital data; by comparing the computed "hash" (the output from
  execution of the algorithm) to a known and expected hash value,
  a person can determine the data's integrity.

  SHA-1 Family:
    The SHA1SUM command displays the SHA-1 hash of data sets.
  SHA-2 Family:
    The SHA224S command displays the SHA-224 hash of data sets.
    The SHA2SUM command displays the SHA-256 hash of data sets.
    The SHA3SUM command displays the SHA-384 hash of data sets.
    The SHA5SUM command displays the SHA-512 hash of data sets.
  SHA-3 Family:
    No implementation as a TSO command.

  In data sets with variable-length records the rdw's and sdw's are
  not included when the checksum is computed unless the rdw keyword
  is specified.

   Syntax -
         command  'dslist'  file  lower  rdw  brief  multi  quick

  Required - command (SHA1SUM, SHA224S, SHA2SUM, SHA3SUM or SHA5SUM)
             'dslist'
  Defaults - none

   Operands -
  'dslist' - Names of sequential data sets or members of partitioned
             data sets. If more than one, enclose list in parentheses.

  FILE     - The names in dslist are ddnames, not dsnames.
  LOWER    - Display the results in lower case.
  RDW      - Include rdw or sdw in variable length records.
  BRIEF    - Display only the hash, without the data set name.
  MULTI    - Display the hash and data set name on separate lines.
  QUICK    - For unquoted dsnames, bypass the default service routine.
             So for example, if you specify the name temp and you
             only have a data set named temp.data, it won't be found
             if quick is also specified. The quick keyword is just
             to cut out the overhead of looking for extensions at
             the end of the specified data set name.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ABEND
K* ABEN
K* ESTAE
K* ESTAI
K* STAE

   FUNCTION -
 The ABEND HELP entry is provided to explain ABEND processing
 performed by -PDS86-. -PDS86- attempts to recover from ABENDs with
 its ESTAE and ESTAI recovery routines unless CONTROL NORECOVER is
 in effect.

 In the following, the ABEND processing provided by -PDS86- is
 described in more detail:

  A.  The -PDS86- program uses different recovery methods depending
      on the subcommand being executed.  The method used should
      perform any cleanup and initialization functions required to
      restart -PDS86-.

  B.  For internal -PDS86- subcommands, recovery is performed by
      writing an error message and terminating the subcommand.

  C.  For the external subcommands BROWSE, EDIT, ISPF, or VIEW,
      no ESTAE recovery is attempted.

  D.  For the other external -PDS86- subcommands (COMPARE, COMPRESS,
      COPY, DCF, DSPRINT, EXEC, FSE, HELP, PRINTOFF, REVIEW, SUBMIT,
      TSO xxx, TSOEDIT, TSOLIST and VPSPRINT), the subcommand
      processor is forcibly detached.

  E.  If CONTROL NORECOVER is in effect, -PDS86- will terminate unless
      the subcommand being used specifically tests for ABEND conditions
      (such as IF with LOADERR or VERIFY with LOAD).

  F.  If CONTROL RECOVER is in effect, any ABEND dump will probably
      not be very useful; also, if you want to use TSO TEST after an
      ABEND, it is recommended that you set CONTROL NORECOVER first.

  G.  Certain external programs reached via the TSO subcommand (such
      as CALL) will terminate -PDS86- with a "READY" message if the
      program they invoke ABENDs.  Note, however, that if a null line
      is entered at this point, -PDS86- will regain control.

  H.  The PDS999E message should identify the name of the -PDS86-
      assembly listing involved in the error as follows:
        1. PDSMAIN - ABEND in the PDS mainline
        2. PARSE   - ABEND in the PARSE interface
        3. ISPDSPY - ABEND in the ISPF Dialog routines
        4. VSUBCMD - ABEND in the subcommand check
        5. VTSOCMD - ABEND in the TSO command check
        6. subname - ABEND in the subroutine identified below:
             |
             v
           ALIAS    AMBLIST  ATTRIB   BROWSE   CHANGE
           CLEAR    COBANAL  COMPARE  COMPRESS CONTROL
           COPY     CPKMAP   DELETE   DELINK   DISASM
           DISPLAY  DSNAMES  EXEC     FIXPDS   HELP
           HISTORY  IF       LCS      LIST     LMA
           LOAD     MAP      MATCH    MXIBAT   OFFLOAD
           OUTCOPY  PRINTOFF PTSEXP   RENAME   REPRO
           RESTORE  RX       SMPGEN   SRCHFOR  SUBLIST
           TIME     TSO      TSOEDIT  USAGE    FAMS
           VERIFY   VPDSE    XMIT

      Note: These control sections contain other subcommand processing.

      BROWSE  (EDIT, ISPF, ISPMODE, MEMLIST, and VIEW)
      DELETE  (MEMBERS and SUBMIT)
      TSOEDIT (FSE)
      LIST    (DIRENTRY, FIND, and REPLACE)
      DISPLAY (PATTERN)
   SYNTAX -        none.
   OPERANDS -      none.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=ATTN
K* PA1
K* ATTE
K* ATTEN
K* ATTENT
K* ATTENTI
K* ATTENTIO

   FUNCTION -
 The ATTN HELP entry is provided to explain the attention processing
 performed by -PDS86-. In general, an attention (the PA1 key) may be
 used to terminate the current -PDS86- subcommand and two attentions
 in a row may be used to terminate the -PDS86- command.

 In the following, the attention processing provided by -PDS86- is
 described in more detail:

  A.  A single (double for TSOEDIT) attention should terminate any
      member group in progress (except for the FSE subcommand).

  B.  An attention at a prompt for a data set should terminate -PDS86-.

  C.  An attention at the normal ENTER OPTION subcommand prompt
      should provide another ENTER OPTION prompt; another attention
      at this point should terminate -PDS86-.

  D.  For subcommands BROWSE, EDIT, ISPF, ISPMODE, MEMLIST, or VIEW,
      no ENTER OPTION prompt is provided by -PDS86-'s attention
      handling:
       1.  A single attention should terminate any member group in
           progress.
       2.  An attention during a edit or browse line command from
           MEMLIST will terminate any remaining line commands.
       3.  Any additional attentions should be ignored by -PDS86-.
       4.  For TSO commands invoked by ISPF with no attention
           handling:  the first attention is noted by -PDS86- and it
           will terminate any member group in progress; subsequent
           attentions apply only to the TSO command.

  E.  For the COMPRESS or COPY subcommands, attentions are ignored
      until the attached program terminates to protect the integrity
      of the target data set.

      Note that if IKJEFTSR is used to authorize IEBCOPY for the
      compress or copy, attention interrupts cannot be deferred;
      thus, it is recommended that the attention key not be used
      (a successful attention may destroy the data set).

  F.  For other -PDS86- subcommands, a single (double for TSOEDIT)
      attention should result in an ENTER OPTION prompt; the
      processing action taken at this point depends on what is
      entered next:
       1.  Another attention should terminate the -PDS86- command.
       2.  A null line should cause the interrupted subcommand to
           continue at the point of interruption.  Note: any messages
           awaiting output at the time of the interrupt will be lost.
       3.  If a subcommand is entered and the currently executing
           subcommand is external to -PDS86- (COMPARE, DCF, DSPRINT,
           EXEC, FSE, HELP, PRINTOFF, REVIEW, SUBMIT, TSO xxx, TSOEDIT,
           TSOLIST or VPSPRINT), the command processor should be
           forcibly detached and the ABEND message should be
           suppressed.
       4.  An entered subcommand should be given control without delay.

  G.  If an internal -PDS86- subcommand is in a loop that does not
      involve input or output to the terminal or input from the current
      data set, a single attention will not terminate the loop:
       1.  The first attention will provide the normal ENTER OPTION
           prompt.
       2.  If a subcommand is entered at this time, -PDS86- will
           continue looping.
       3.  Another attention will produce the message
           "THE PROGRAM IS PROBABLY IN A LOOP" and -PDS86- will perform
           the subcommand entered at the ENTER OPTION prompt.
   SYNTAX -        none.
   OPERANDS -      none.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DEFINE
K* DEF
K* DEFI
K* DEFIN
K* GLOSSARY
K* GLOSS
K* GLOS

   FUNCTION -
 The DEFINE HELP entry is provided to explain terminology used
 in the -PDS86- program and in its documentation:

 Alias member -  a directory entry with a indicator value which
 indicates that the member entry is an alternate name for another
 main member; a main member and its aliases are associated with
 the same recorded data in the PDS.

 Apparent alias member -  data in a partitioned data set which is
 pointed to by more than one main PDS directory entry.

 Associated members -  members with the same TTR address.  For a main
 member, the associated members could be alias members or an apparent
 alias member; for an alias member, the associated members could be
 other aliases or a main member.

 Batch mode -  a mode of -PDS86- operation. In batch mode, all user
 communication is performed with PUTGET, GETLINE and PUTLINE TSO
 services.  No ISPF services are available.  In this mode of
 operation, -PDS86- operates under control of the batch Terminal
 Monitor Program (the TMP, or IKJEFT01).  You can include comments
 in a PDS subcommand anywhere a blank might appear.  To include a
 comment start with delimiter /*. If you want to continue a PDS
 subcommand after the comment, close the comment with delimiter */.

 BLDL -  a BPAM function which is used to check for the existence of
 members.

 BPAM -  an acronym for Basic Partitioned Access Method; BPAM is
 actually very similar in use to BSAM which is for sequential data.
 -PDS86- often uses BPAM for member check operations and always uses
 BPAM for directory updates and reading PDSE data sets.

 BSAM -  an acronym for Basic Sequential Access Method; -PDS86- uses
 BSAM for several utility functions.

 CCHHR -  an acronym for Cylinder, Cylinder, Head, Head, Record which
 is a 10 digit hexadecimal disk address relative to the start of the
 volume.

 Command -  a request for an operation.  For example, -PDS86- is a
 command and XMIT is a -PDS86- subcommand.   The distinction between
 a command and a subcommand is not often important.

 Compress -  a process which removes deleted members from a PDS.  Disk
 space formerly occupied by these deleted members is made available
 for new members.  In a PDSE data set, space from deleted members is
 managed dynamically; you can not compress a PDSE.

 Deleted member -  member data which is not pointed to by any
 directory entry; deleted members remain in a PDS until the
 data set is compressed.

 DS1LSTAR -  a pointer in the data set control block (DSCB) which
 indicates the last used disk address for a data set.  This pointer is
 updated after a member is added to a PDS data set; it is also
 adjusted after a PDS is compressed.

 Dummy member - a member that holds information about a previously
 deleted member.  That information includes the highest absolute
 generation that was used for the member before it, or it's generations,
 were deleted.  PDSE V2 member generation datasets only.

 EXCP -  an acronym for EXecute Channel Program.  This access method is
 used extensively by -PDS86- for its read and write operations.

 ISPMODE -  a mode of -PDS86- operation. With ISPMODE, -PDS86-
 operates as an ISPF dialog and normal ISPF services (HELP, TSO,
 SPLIT, SWAP,...) are available and all -PDS86- services are
 available as well.

 Line command -  a command entered on a table line in the CMD field.
 In -PDS86-, line commands may be up to four characters long.
 In addition, up to eight additional operand bytes may be entered to
 the right of a member name in the DATA field.

 Line mode -  a mode of -PDS86- operation. In line mode, all user
 communication is performed with PUTGET, GETLINE and PUTLINE TSO
 services.  No ISPF services are available.

 Load library -  a partitioned data set which has record format U
 and is commonly used to contain executable modules.

 Load module -  a member contained in a load library.

 Main member -  a non-alias directory entry and its associated
 recorded data.

 Member -  data in a partitioned data set (or PDS) which is pointed
 to by one or more PDS directory entries.

 Orphan member -  a member marked as an alias which does not have
 an associated main member.

 PDSE V2 member generation datasets:  these are members that do not
 have a corresponding base member (gen-0).  Orphans can be created when
 a STOW C|D directory action is issued for a base member name.

 PDB or PDS-determined blocksize - a block size determined by the
 FIXPDS BLKSIZE(99999) subcommand.  PDB's are half-track block sizes.

 PDS or Partitioned Data Set -  a data set with fixed, variable or
 undefined format which is commonly used as a "library" for related
 types of information.  Partitioned data sets contain two segments
 of data: a directory of information and member data.

 PDSE or Partitioned Data Set Extended -  a data set with fixed,
 variable or undefined format which is commonly used as a "library"
 for related types of information.  PDSE data sets contain two
 segments of data: a directory of information and member data.  Member
 data and directory entries are stored in 4096-byte blocks on the
 device.  This type of library is requested as DSNTYPE(LIBRARY) in JCL
 or on an ALLOCATE command.  A PDSE must be accessed by BPAM or BSAM
 access methods; SMS provides a virtual data set which looks like a
 PDS.  A PDSE can have up to 123 extents and cannot extend beyond
 one volume.

 PDS directory -  a segment of a PDS which is a sequential data set
 with eight byte keys and 256 byte data records containing pointers
 to data in the PDS member portion of the data set.

 PDSE directory -  the directory is indexed, permitting more direct
 searches for members.  The name and the relative track address of a
 member are used as keys to search for members. The PDSE directory is
 expandable; you can keep adding entries up to the directory size limit
 or until the data set runs out of space. The PDSE directory can extend
 into secondary space.  The limit for the number of members in a PDSE
 directory is 522,236.

 PDS member data -  a segment of a PDS which contains current members
 (which are pointed to by one or more directory entries) and inactive
 or deleted members (which have no associated directory entries).

 PDSE member data -  a member is allocated in full page increments.  A
 member is maintained on full page boundaries, and any remaining space
 in the page is unused.  Space from deleted members is managed
 dynamically; you can not restore deleted members or compress a PDSE.
 PDSE members can contain a maximum number of 15,728,639 logical
 records.  The limit increases in PDSE Version 2 to 2,146,435,071
 logical records.

 PDS directory entry -  a logical entry in a PDS directory which points
 to its associated data in the member data; it consists of an eight
 character member name field and at least one three byte relative
 address (TTR) field.

 PDSE directory entry -  a logical entry in a PDSE directory which
 points to its associated data in the member data; it consists of a
 member name or an alias, the starting location of the member within
 the data set and optionally user data.  The directory entries are
 arranged by name in alphanumeric collating sequence.  The name and the
 relative track address of a PDSE member are used as keys to search for
 members.  The TTRs are not relative track and record numbers but
 rather pseudo randomly generated aliases for the PDSE member.

 PDSE V2 member generations - allows you to reverse or access
 recent changes to a member.  It also allows you to retain multiple
 generations of a member for archival reasons.  Member generations
 is similar to generations for data sets. PGLITE and PDSEGEN are two
 rexx applications that allow you to manipulate PDSE V2 member
 generations.

 PDSPAIN -  1988 PDSPAIN committee report to SHARE. The committee
 presented its report in Session 0232 at Share 70 in Anaheim.
 This is the MVS GROUP Position Addressing the need for Functional
 Enhancement to OS/MVS Partitioned Data Sets. The PDSPAIN committee
 was formed by the Storage Management Project of the Operating Systems
 Support Division of SHARE to study problems associated with
 OS partitioned data sets.  IBM responded with the PDSE format.

 Primary command -  a subcommand or command entered from the command
 line of a panel.

 Program fetch -  a program that prepares programs for execution
 by loading them at specific storage locations and readjusting each
 relocatable address constant.

 QSAM -  an acronym for Queued Sequential Access Method; -PDS86- uses
 QSAM to read PDSE directories and for several utility functions.

 Source library -  a PDS or PDSE data set which has fixed or variable
 format data; source libraries are normally used to contain
 non-executable data.

 Source member -  a member contained in a source library.

 Subcommand -  a request for an operation that is within the scope of
 work requested by the previously issued command.  -PDS86- is a
 command; XMIT is a -PDS86- subcommand. The distinction between a
 subcommand and a command is not often important.

 The PDS Command -  a TSO command processor and ISPF dialog program
 package.  There are possibly 1,000 separate dataset manipulation
 functions built into this package, and it is something that no systems
 programmer can afford to be without, period.

 TTR -  an acronym for Track, Track, Record which is a 6 digit
 hexadecimal disk address relative to the start of the data set; this
 type of address is stored in the member directory entry to indicate
 the starting address of a member.
   SYNTAX -        none.
   OPERANDS -      none.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=DIALOG
K* DIA
K* DIAL
K* DIALO

   FUNCTION -
  The DIALOG HELP entry is provided to explain the processing
  relationships of ISPF and the -PDS86- subcommands which use ISPF
  dialog services.

  Note: the OUTCOPY subcommand and the CONTROL SYSOUT/DSNAME operands
  do not use ISPF services; however, when they are first entered, they
  attempt to establish an ISPF environment so that ISPF services can be
  utilized by subsequent -PDS86- subcommands; the BROWSE, EDIT, ISPF,
  ISPMODE, MEMLIST and VIEW subcommands do require ISPF services.


  -PDS86- is a TSO command processor and can gain control in any of
  the following modes:

  A.  From READY mode:
      When the first subcommand utilizing or initializing ISPF services
      is entered, -PDS86- calls an ISPF interface which invokes -PDS86-
      recursively as an ISPF dialog; ISPF services are then directly
      invoked for each subsequent BROWSE, EDIT, ISPF, ISPMODE, MEMLIST,
      or VIEW subcommand.

  B.  From ISPF option 6, the TSO subcommand of ISPF, or as a line
      command from option 3.4:
      ISPF services can be used without restrictions.

  C.  From another TSO command processor:
      If an ISPF environment has been established by an earlier command
      processor, ISPF services can not be used; otherwise, when the
      first subcommand utilizing or initializing ISPF services is
      entered, -PDS86- calls an ISPF interface which invokes -PDS86-
      recursively as an ISPF dialog; ISPF services are then directly
      invoked for each subsequent BROWSE, EDIT, ISPF, ISPMODE, MEMLIST,
      or VIEW subcommand.

  D.  From the PDS@PRIM panel in ISPF:
      -PDS86- is invoked as an ISPF dialog; -PDS86- locates and
      creates the required command processor control blocks and can
      invoke ISPF services directly.
   SYNTAX -        none.
   OPERANDS -      none.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=GROUPS
K* G
K* GR
K* GRO
K* GROU
K* GROUP

   FUNCTION -
  The GROUP HELP entry is provided to explain the various member
  name forms allowed.  Member names may be entered in either character
  or hexadecimal mode for any subcommand which processes member names.

  Character member names may be from one to eight bytes long with no
  imbedded blanks, commas, parentheses, colons or slashes.

  Hexadecimal member names may contain from one to sixteen hexadecimal
  digits delimited by x' and '.  X'd7c4e2f9' and PDS9 are entirely
  equivalent; also, x'333' and x'0333' are equivalent.

  Subcommands AMBLIST, ATTRIB, BROWSE, COBANAL, COPY, DCF, DELETE,
  DIRENTRY, DSPRINT, EDIT, FIND, FSE, IF, HISTORY, LIST, LMA, MAP,
  MEMBERS, MEMLIST, OFFLOAD, OUTCOPY, PRINTOFF, REPLACE, REPRO, REVIEW,
  SMPGEN, SRCHFOR, SUBMIT, SUBLIST, TSOEDIT, TSOLIST, VIEW, VERIFY,
  VPSPRINT, and XMIT allow additional member name specifications.

  A member name range, member name pattern or member name combination
  forms what is termed a member group.  Note that a member list (that
  is, a parenthesized list containing member and member group
  specifications separated by commas) may also be used.

  When a member group is being processed, the subcommand processing
  routine is re-executed for each member in the group.  Specifically,
  note the following:

  A.  Default member name -- if no member name is specified, the
      last member name or member group entered for any of the above
      subcommands will be assumed.

  B.  Asterisk member name -- if * is entered in the member name
      position, the last member name or member group entered for
      any of the above subcommands will be assumed.

  C.  Member name range -- any of these subcommands may select all
      members in a range by specifying a beginning partial member
      name, a colon, and a ending partial member name (either or
      both of the partial names may be null).

      Logic from the DISPLAY subcommand is used to select members;
      the subcommand processes these selected members in alphabetic
      order.  The following specifications would select the same
      member names:
            subcommand  :            and   DISPLAY
            subcommand  part1:       and   DISPLAY  part1
            subcommand  :part2       and   DISPLAY  x'00' part2
            subcommand  part1:part2  and   DISPLAY  part1 part2

  D.  Member name pattern -- any of these subcommands may select all
      members whose names contain pattern characters by specifying a
      member name segment, a slash, and another member name segment
      (either, not both, of the member name segments may be null).

      Logic from the PATTERN subcommand is used to select members;
      the subcommand processes these selected members in alphabetic
      order.  The following specifications would select the same
      member names:
            subcommand  seg1/        and   PATTERN  seg1
            subcommand  /seg2        and   PATTERN  seg2
            subcommand  seg1/seg2    and   PATTERN  seg1 seg2

  E.  Member name combination -- any of these subcommands may select
      all members whose names contain a range of names and a pattern
      of characters by specifying a member name segment, an asterisk
      and another member name segment (either, not both, of the
      member name segments may be null).

      Logic from the PATTERN subcommand is used to select members;
      the subcommand processes these selected members in alphabetic
      order.  The following specifications would select the same
      member names:
            subcommand  seg1*        and   DISPLAY  seg1 seg1
            subcommand  *seg2        and   PATTERN  seg2
            subcommand  seg1*seg2    and   DISPLAY  seg1 seg1 --with--
                                                    PATTERN  seg2

  F.  Member name display subcommands -- MEMBERS, PATTERN and DISPLAY
      allow the display of member groups using the above member group
      syntax; however, these subcommands differ as follows:
       1.  DISPLAY -- can not modify the current member group;
           if no member specification is entered, the entire
           member directory is displayed.
       2.  PATTERN -- can not modify the current member group;
           if no member specification is entered, the member group
           last entered on a PATTERN subcommand is displayed.
       3.  MEMBERS -- can modify the current member group;
           if no member specification is entered, the current
           member group is displayed.

  G.  Following are examples using the MEMBERS subcommand to
      define and display a member group:

        SUBCOMMAND         MEMBERS IN THE GROUP
        ----------         --------------------
        MEMBERS aa         AA
        MEMBERS (aa,bb)    AA and BB
        MEMBERS (aa,bb/)   AA and any member names containing BB
        MEMBERS *          current member group
        MEMBERS            current member group

        MEMBERS :          all members -- X'00' through X'FF'
        MEMBERS aa:        members from AA... through X'FF'
        MEMBERS :bb        members from X'00' through BB...
        MEMBERS aa:bb      members between AA... and BB...
        MEMBERS (abc,d:)   member ABC and those from D... through X'FF'

        MEMBERS aa/        member names containing AA anywhere
        MEMBERS /bb        member names containing BB anywhere
        MEMBERS aa/bb      member names containing AA and BB
        MEMBERS (aa/,bb/)  member names containing AA or BB

        MEMBERS aa*        members with names AA...
        MEMBERS *bb        member names containing BB anywhere
        MEMBERS aa*bb      member with names AA... and BB elsewhere
        MEMBERS (aa*,bb/)  members with names AA... or with BB anywhere

   SYNTAX -        none.
   OPERANDS -      none.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=LIMITS
K* LIM
K* LIMI
K* LIMIT

   FUNCTION -
 The LIMITS HELP entry is provided to list -PDS86- limitations
 which might impact the program's usefulness at an installation:

   1.  In the ISPMODE or MEMLIST panels, a maximum of 48 characters
       may be entered as a subcommand; otherwise, a maximum of 256
       characters may be entered.

       You can avoid the 48 characters restriction by ending a
       ISPMODE or MEMLIST subcommand with a plus (+) character and a
       continuation panel will be presented with the data you already
       entered to allow you to enter the rest of the subcommand.

   2.  For ISPMODE panels, only the first 79 characters of an output
       line are available for display; this is a consideration for
       the LIST and FIND subcommands with output formats NUM, SNUM
       and NONUM.

       Note:  If the &LOGWIDE global variable is set to 'YES' then
       the screen width of ISPMODE Log panel 1 will be set to the
       length of ZSCREENW.  Thus, up to 158 characters of an output
       line are available for display depending on the terminal width.

   3.  For session outputs via CONTROL DSNAME or SYSOUT, only the
       first 80 characters of an output line are retained if
       allocated with RECFM=FB and LRECL=80; this is also a
       consideration for the LIST and FIND subcommands with output
       formats NUM, SNUM and NONUM.  If the CONTROL DSNAME(dsname)
       data set is pre-allocated with RECFM=VB, any LRECL can
       be used; a maximum of 256 characters of an output line are
       retained.

   4.  For MEMLIST panels, only eight bytes of operand information
       may be entered as an operand in a line command after the
       member name.

   5.  For subcommands FIND and IF, the THEN and ELSE keywords may
       contain only a subcommand name (operands are not permitted).
       As a consequence, only the default action for the named
       subcommand may be performed using the current member.

       However, if you construct a member list subset using the
       SUBLIST keyword after THEN or ELSE in FIND or IF, any desired
       subcommands can be performed on the subset of members selected
       in a subsequent subcommand using * for the group name.

       For example,

         if a:z sctr noalias then(sublist)
         map * relink

   6.  XMIT is limited to 3620 members unless all members are specified.
       The member group to be transmitted can not be larger than 3620
       members.  All members (:) can be transmitted without limits.
       The IKJEFTSR command buffer length limit is 32K.

       For example,

         xmit *    to.sam outda(bin)  <--- limited to 3620 members
         xmit p86: to.sam outda(bin)  <--- limited to 3620 members
         xmit :    to.sam outda(bin)  <--- all members
   SYNTAX -        none.
   OPERANDS -      none.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=UPDATE
K* UP
K* UPD
K* UPDA
K* UPDAT
K* SHR
K* SH

   FUNCTION -
 The UPDATE HELP entry is provided to explain the update data
 set protection implemented for certain -PDS86- subcommands.

 If the data set is allocated as OLD, the STOW DCB is left open after
 the first data set update.  For OLD allocations, exclusive use of the
 data set is assured and the following does not apply.

 If the data set is allocated as SHR (SHR was specifically requested
 or SHR was defaulted to), -PDS86- subcommands which update the
 data set such as ALIAS, ATTRIB (with attributes to be changed),
 COPY (for the output data set only), DELETE, FIXPDS, RENAME, REPRO,
 RESTORE or VERIFY could cause data set integrity problems if the
 data set is also being updated by another user.

 To circumvent this problem, -PDS86- uses the following ISPF RESERVE
 logic to maintain data set integrity during data set updates.

  A.  A  RESERVE  (SPFEDIT,DSNAME,E,44,SYSTEMS),UCB=ADDRESS
      is performed.

  B.  If the data set is a load library, then a linkage editor
      RESERVE or ENQUEUE is performed as appropriate:
       1.  On a shared DASD volume,
           RESERVE  (SYSIEWLP,DSNAME,E,44,SYSTEMS),UCB=ADDRESS
       2.  On a non-shared DASD volume,
           ENQ  (SYSIEWLP,DSNAME,E,44,SYSTEM)

  C.  The data set STOW DCB is opened.

  D.  All data set updates are performed.
       1.  Wherever possible, the STOW DCB is left open while
           an entire member group is being processed.
       2.  For executions of -PDS86- in batch mode, the volume
           reserve is maintained and the STOW DCB is left open
           following the first update to the data set.

  E.  The data set STOW DCB is closed.

  F.  DEQ's are performed to remove the RESERVE's and ENQ's.

 SYSPLEX note:  MVS (since DFP 2.3, circa 1987) ensures that
 only one program in the sysplex can open a PDS with
 the OUTPUT option, even if you specify DISP=SHR.

 If a second program issues OPEN with the OUTPUT
 option, for the PDS with DISP=SHR, while a DCB is
 still open with the OUTPUT option, the second program
 will get a 213-30 ABEND.

 <Bruce Black, Innovation DP>
 PDS sharing was addressed by introducing new ENQ's.  The major name is
 SYSZDSCB.  The minor name consists of the dsn, volser, and access type
 (read or write).  The read ENQs are shared, the write is exclusive, so
 only one job (even cross-system) can update the PDS at any one time.
 </Bruce Black, Innovation DP>

 See APAR OY07766 description.
   SYNTAX -        none.
   OPERANDS -      none.
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=MESSAGE
K* MS
K* MES
K* MSG
K* MESS
K* MSGS
K* MESSA
K* MESSAG
K* MESSAGES

   FUNCTION -
 The MESSAGE HELP entry is provided to document -PDS86- program
 messages.

 -PDS86- messages are of the format PDSnnnx (where nnn is numeric and
 x is the letter I, A, W or E).  The program messages are grouped in
 numeric ranges by message severity as shown below:

      MESSAGE RANGE         DESCRIPTION
      -----------------     -----------
      PDS000I - PDS299I     Informational messages
      PDS300A - PDS399A     Action messages (a response is required)
      PDS400W - PDS599W     Warning message (possible error condition)
      PDS600E - PDS999E     Error messages


 Messages above PDS399 (warning and error messages) can be explained
 via the extended help facility if these messages are received during
 -PDS86- program execution.

 To use the extended help facility after warning and/or error messages
 have been received, enter a .?  response to the ENTER OPTIONS prompt
 message and up to five warning or error message explanations from the
 last subcommand will be requested from the HELP data set by the
 program.

 To see the message identifier on messages that appear at your
 terminal, enter the following TSO command:

   PROFILE MSGID

 To ensure that you receive all write-to-programmer messages, enter
 the following TSO command:

   PROFILE WTPMSG
   SYNTAX -
     HELP MSG MSG(PDSxxx,PDSyyy, ...)
          (where PDSxxx and PDSyyy are messages to be explained)
   MESSAGES -
   -PDS86- has the following numbered messages:
K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS001I
  PDS001I TESTMESSAGES -- ALL NUMBERED MESSAGES FOLLOW:
   This message is the header for CONTROL TESTMESSAGES.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS002I
  PDS002I DEFAULT MEMBER IS member
   This message displays the default member name.  This member is being
   identified as the member which will be acted upon by the current
   subcommand.  The default member name (or member group) will also be
   displayed on the PDS300A message after the  MEM=  keyword.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS005I
  PDS005I END OF FILE
   An end of file marker was input indicating the end of the member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS006I
  PDS006I END OF DATA SET dsname
   An end of file marker was input indicating the end of the data set.

   Note:  for VERIFY memgroup, this member has the highest TTR.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS010I
  PDS010I THE ALIAS HAS BEEN ASSIGNED
   The ALIAS subcommand has completed successfully.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS020I
  PDS020I member ATTRIBUTES ARE: attrib1, attrib2, ...
   This message lists the linkage editor attributes of the member:
     OVERLAY   - overlay load structure
     TEST      - linked with the TEST option
     E-LEVEL   - not linked by the "F" level linkage editor
     SCTR      - scatter load structure
     RENT      - reentrant (executable by several tasks simultaneously)
     REUS      - reusable (executable by several tasks in serial order)
     REFR      - refreshable (replaceable by a copy during execution)
     LOAD ONLY - can only be brought into storage with a LOAD MACRO
     NOT EDIT  - can not be linkage edited again
     NOT EXEC  - not executable
     DC        - downward compatible with linkage editor level E
     NONE      - none of the above linkage attributes

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS021I
  PDS021I APF AUTHORIZED
   This member has been marked as authorized by the linkage editor.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS022I
  PDS022I NOT APF AUTHORIZED, OBSOLETE LINKAGE EDITOR
   This member is not authorized; it was linked by an obsolete linkage
   editor.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS023I
  PDS023I APF AUTHORIZED, APF DATA VALUE GREATER THAN 1
   This member was authorized by the linkage editor and the APF value
   exceeds one.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS024I
  PDS024I PAGE ALIGNMENT IS REQUIRED
   This member requires alignment on a page boundary.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS025I
  PDS025I SSI INFORMATION: hexvalue
   This member has the displayed SSI data.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS026I
  PDS026I MOD:mm/dd/yy hh:mm LEV:num BY user EXP:mm/dd/yy READ:mm/dd/yy
   This message lists PDSMAN/MVS statistics associated with this load
   member:
     MOD:  - date and time of last modification
     LEV:  - modification level number in decimal
     BY    - updating jobname or TSO userid
     EXP:  - expiration base date
     READ: - last date on which member was read

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS030I
  PDS030I GLOBAL OPERANDS: global1, global2, ...
   This message lists the current CONTROL global values:
     ALIASINFO   - alias information is desired for MAP and ATTRIB.
     NOALIASINFO - no alias information is required.
     LKEDDATE    - linkage edit dates are desired for ATTRIB.
     NOLKEDDATE  - no linkage edit date information is required.
     PROMPT      - yes/no prompts are desired as usual for DELETE,
                   FIXPDS, RENAME, REPRO, RESTORE and SUBMIT.
     NOPROMPT    - yes/no prompts are not required for DELETE, FIXPDS,
                   RENAME, REPRO, RESTORE or SUBMIT (a yes reply is
                   to be assumed).
     RECOVER     - ESTAE recovery should be attempted after an ABEND.
     NORECOVER   - ESTAE recovery should not be attempted.
     TRANSLATOR  - Translator IDR outputs are required from HISTORY.
     NOTRANSLATOR- No translator information is required from HISTORY.
     DSNAME(dsn) - names the data set which is receiving the session
                   log output; this will be combined with a data set
                   status such as OLD, NEW, SHR or MOD.
     NODSNAME    - no session log is being output to a data set.
     SYSOUT(c)   - names the SYSOUT class which is currently receiving
                   the session log output; this will be combined with
                   FORM(form) or NOFORM and DEST(destname) or NODEST.
     NOSYSOUT    - no session log is being output to a SYSOUT data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS031I
  PDS031I INPUT BUFFERING: type
   This message lists the current input buffering mode:
     BPAM      - Read using a BPAM DCB for PDSE data sets.  BPAM is
                 forced for a PDSE and a BPAM DCB is used.
     SINGLE    - Read single (each read obtains one physical block).
     DOUBLE    - Read double (each read obtains two physical blocks).
     MULTIPLE  - Read multiple (each read obtains an entire track).

   Note that the buffering type is reset for each data set allocated
   according to the device type on which the data set resides.  In
   general, MULTIPLE is used for device types which support the READ
   MULTIPLE CCW and DOUBLE is used otherwise.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS032I
  PDS032I TESTCPULOOP -- CPU LOOP FOLLOWS:
   CONTROL TESTCPULOOP - performs a CPU loop for program testing.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS033I
  PDS033I TESTABEND -- SYSTEM 0C1 FOLLOWS:
   CONTROL TESTABEND - performs an ABEND for program testing.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS034I
  PDS034I TESTOUTLOOP -- THIS DATA REPEATS
   CONTROL TESTOUTLOOP - performs an output loop for program testing.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS035I
  PDS035I TESTREAD -- EXCP RETURN CODE=nn; NEXT TTR ADDRESS IS ttraddr
   CONTROL TESTREAD -- verifies the operation of the input EXCP routine
   by using an initial TTR of 000001 in each case.

   EXCP is called for each of the buffering modes:
     SINGLE    - Read single (each read obtains one physical block).
                 The return code should be 00 and NEXT TTR ADDRESS
                 should be 000002 if sufficient data is available.
     DOUBLE    - Read double (each read obtains two physical blocks).
                 The return code should be 00 and NEXT TTR ADDRESS
                 should be 000003 if sufficient data is available.
     MULTIPLE  - Read multiple (each read obtains an entire track).
                 If the disk unit supports the READ MULTIPLE CCW, the
                 return code should be 00 and NEXT TTR ADDRESS
                 should be 000101 if sufficient data is available.

                 If this disk unit does not support the READ MULTIPLE
                 CCW, a PDS892E message should be received, the return
                 code should be 00 and NEXT TTR ADDRESS should be
                 000003 (double buffering is actually used).

   Return codes from EXCP have the following meanings:
        RC=00    Successful read
        RC=04    End of member
        RC=08    End of data set
        RC=12    I/O error

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS036I
  PDS036I LARGEST FREE STORAGE AREA IS nnnK
   This message displays the size of the largest free storage area
   fragment in 1024 or K-byte units.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS040I
  PDS040I member HAS BEEN DELETED
   DELETE has completed successfully.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS046I
  PDS046I LARGEST AREA ABOVE THE LINE IS nnnM
   This message displays the size of the largest free storage fragment
   in 1024K bytes or 1 Megabyte units.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS050I
  PDS050I member1 WILL BE MOVED
   This member will be recreated by REPRO or FIXPDS (FIXPDS moves
   members which are in the way of the expanded member directory).

  PDS050I member1 WILL BE COPIED TO member2
   REPRO will copy member1 to member2 as a result of a TO or AS clause.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS051I
  PDS051I member IS BEING MOVED
   REPRO or FIXPDS is currently moving this member.

  PDS051I member IS BEING CREATED
   REPRO is currently creating the named member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS060I
  PDS060I TRANSLATOR HISTORY BY CSECT -
  IKJEFT03  9/22/80   5741SC103  V02 M02   9/22/80  C'PLS2020'  V07 M02
  IEFBR14  11/22/81   5741SC103  V02 M02

   This message is a header for assembler or compiler IDR records:
     IKJEFT03   - name of the CSECT.
     9/22/80    - date of the assembly or compilation.
     5741SC103  - translator identification.
     V02 M02    - translator version and modification level.
     9/22/80    - date of PLS compilation.
     C'PLS2020' - PLS compiler identification.
     V07 M02    - PLS compiler version and modification level.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS061I
  PDS061I AMASPZAP UPDATE HISTORY BY CSECT -
  IEFBR14       6/14/84    HABLX

   This message is a header for zap IDR records:
     IEFBR14    - name of the CSECT.
     6/14/84    - date of the zap.
     HABLX      - zap user identification (USERID or JOB name).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS062I
  PDS062I USER-SUPPLIED UPDATE HISTORY BY CSECT -
  IEFBR14      11/29/81    UZ54057

   This message is a header for user-supplied IDR records:
     IEFBR14     - name of the CSECT.
     11/29/81    - date of the information.
     UZ54057     - user-supplied IDR information.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS064I
  PDS064I LAST LINK-EDITED ON mm/dd/yy  BY LKED lkedname  Vnn Mmm
                           AT hh:mm:ss
   This message displays the last linkage edit date, linkage
   editor identification information, and linkage edit time.
     mm/dd/yy    - date of the last linkage edit
     lkedname    - the translator code for the linkage editor
     Vnn         - the linkage editor version number
     Mmm         - the linkage editor modification level
     hh:mm:ss    - time of the last linkage edit

   ATTRIB program objects:
     lkedname    - J=jobname (name of linkedit job)
     Vnn         - Program Object (PO) version number
     Mmm         - Binder API level

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS065I
  PDS065I MAIN MEMBER NAME UPDATED FOR MEMBER: member
   This message is issued when a main member is renamed and the
   identified alias member's directory entry is updated to point
   to the renamed member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS066I
  PDS066I MEMBER IS AN ALIAS FOR: member
   This member is an alias; the main member is identified.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS069I
  PDS069I GLOBAL VARIABLES:
   This message is a header for the CONTROL GLOBALMODS and
   CONTROL ALLGLOBALS subcommands.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS070I
  PDS070I MODIFICATION HISTORY:
   This message is a header for the CONTROL MODS subcommand.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS071I
  PDS071I THE FOLLOWING OPTIONS ARE AVAILABLE:
   This message is a header for the list of available subcommands.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS080I
  PDS080I filename DCB IS CLOSED
   FILE(PDSOUT) or the session copy data set has been closed.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS090I
  PDS090I mem1 HAS BEEN RENAMED TO mem2
   RENAME has completed successfully; mem1 is now known as mem2.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS091I
  PDS091I member HAS BEEN RESTORED
   RESTORE has completed successfully.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS092I
  PDS092I AMODE/RMODE INFORMATION UPDATED FOR MEMBER: member
   This message is provided when an alias member's directory entry is
   updated with AMODE/RMODE values in support of an ATTRIB subcommand
   which modifies the AMODE (addressing mode) or RMODE (residence
   mode) of a main member.  The directory entry of each alias entry
   must be updated to reflect the new AMODE/RMODE of the main member
   name.  The PDS092I message is issued as each alias of the main
   member is being updated.  AMODE operands affect the module's
   addressing mode and the RMODE operands control the module's
   residence mode (above or below the 16 Megabyte line).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS096I
  PDS096I DASD GEOMETRY:
   This message is a header for the CONTROL GEO subcommand.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS097I
  PDS097I TSO USERS: count
   This message is a header for the CONTROL TSO subcommand.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS100I
  PDS100I pdsname -- VERSION 8.6.uu.rr  month dd, yyyy  MVSLEV=mvslev
   This message displays the name and release level of the -PDS86-
   program; displays the last -PDS86- maintenance date; and displays
   the MVS OS Level (&MVSLEV global); this message should be
   received at program initialization and as the first message
   from the CONTROL subcommand.

   <major version>.<minor version>.<update number>.<revision>

   mvslev:

   MVS038 for MVS 3.8
   MVS12X for MVS SP 1.2, 1.1 or any SE system
   MVS13X for MVS SP 1.3
   MVS220 for MVS/XA  2.2.0
   MVS310 for MVS/ESA 3.1.0
   MVS410 for MVS/ESA 4.1.0
   MVS510 for MVS/ESA 5.1.0
   MVS6XX for OS/390
   MVS704 for Z/OS 1.4
   MVS709 for Z/OS 1.9
   MVS710 for Z/OS 1.10
   MVS711 for Z/OS 1.11
   MVS713 for Z/OS 1.13
   MVS721 for Z/OS 2.1
   MVS722 for Z/OS 2.2
   MVS723 for Z/OS 2.3
   MVS724 for Z/OS 2.4
   MVS725 for Z/OS 2.5

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS101I
  PDS101I DELETED MEMBER FOUND AT TTR: hexttr
   A previously deleted member was found at the displayed TTR address.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS102I
  PDS102I ENTRY POINT AT hexaddress
   The entry offset of the module is displayed in hexadecimal.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS103I
  PDS103I ENTRY POINT AT hexaddress --  symbol
   The entry offset of the module is displayed in hexadecimal and the
   name of the corresponding entry point symbol is also displayed.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS104I
  PDS104I MODULE LENGTH  hexlength  --  decimalK
   The length of the module is provided in hexadecimal and in K
   units (units of 1024 bytes using the next higher boundary of 1024).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS106I
  PDS106I DATE FORMAT: USA (MM/DD/YY) or
                       ISO (YY/MM/DD)
   This message displays the date format that -PDS86- will use;
   this message should be received as the second message from the
   CONTROL subcommand.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS107I
  PDS107I LAST ASSEMBLED: PDSMAIN  8.6.uu.rr  yyyy-mm-dd  hh.mm
   This message displays the date/time stamp of the PDSMAIN assembly;
   this message should be received as the third message from the
   CONTROL subcommand.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS108I
  PDS108I nn,nnn CHARACTERS PER AVERAGE VARIABLE LENGTH RECORD
   This is the average record size read for variable length records
   (including the RDW field).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS109I
  PDS109I nn,nnn CHARACTERS IN THE LARGEST VARIABLE LENGTH RECORD
   This is the maximum record size read for variable length records
   (including the RDW field).

   Note: for RECFM=VS, this is the largest spanned record segment.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS110I
  PDS110I nn,nnn LOGICAL RECORDS WERE INPUT
   This is a count of the logical input records.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS111I
  PDS111I nn,nnn PHYSICAL BLOCKS WERE INPUT
   This is a count of the physical input records.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS112I
  PDS112I nn,nnn CHARACTERS IN THE LARGEST PHYSICAL BLOCK
   This is the maximum physical blocksize read.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS113I
  PDS113I nn,nnn CHARACTERS PER AVERAGE PHYSICAL BLOCK
   This average is from (total characters read)/(total blocks read).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS114I
  PDS114I nn,nnn TRACKS COULD BE REGAINED BY COMPRESSING THIS DATA SET
   The number of tracks indicated contain deleted members; if a
   compress is performed on the data set, these tracks should become
   available for use.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS115I
  PDS115I nn,nnn MEMBERS WERE CHECKED
   This message indicates the number of members in the data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS116I
  PDS116I DATA SET WAS CHECKED
   This message indicates that the data set was checked by VERIFY.
   The data set is sequential and either NOINPUT was specified or
   it is a null data set with no records.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS117I
  PDS117I nnnn MEMBERS COUNTED; CUMULATIVE SIZE IS nnnn RECORDS
   This message provides the number and size of members processed.
   This message is issued for non-load members to document the
   cumulative size of non-alias members with ISPF statistics.

   The output from ATTRIB and VERIFY differ in that VERIFY will
   include statistics for an alias member if the member does not
   have an associated real member.  In addition, if VERIFY READ
   is requested, statistics are accumulated for members according
   to their actual size (not dependent on ISPF statistics).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS118I
  PDS118I nnnn MEMBERS RMODE24; SIZE IS nnnnK
   This message provides the number and size of RMODE 24 members.
   This message is issued for load members to document the
   cumulative size of non-alias members below the 16 MEG line.

   The output from ATTRIB and VERIFY differ in that VERIFY will
   include statistics for an alias member if the member does not
   have an associated real member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS119I
  PDS119I nnnn MEMBERS RMODEANY; SIZE IS nnnnK
   This message provides the number and size of RMODE ANY members.
   This message is issued for load members to document the
   cumulative size of non-alias members above the 16 MEG line.

   The output from ATTRIB and VERIFY differ in that VERIFY will
   include statistics for an alias member if the member does not
   have an associated real member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS120I
  PDS120I PROGRAM RESIDENCE MODE IS rmode -- ADDRESSING MODE IS amode
   This message indicates the RMODE and AMODE values of the module:
     rmode:
       24  - residence mode is 24  (below the 16M line)
       ANY - residence mode is ANY (below/above the 16M line)
       64  - residence mode is 64  (above the 2G bar)
     amode:
       24  - addressing mode is 24 bit addresses
       31  - addressing mode is 31 bit addresses
       64  - addressing mode is 64 bit addresses
       ANY - addressing mode is 24 or 31 bit addresses

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS121I
  PDS121I nn,nnn SPANNED RECORD SEGMENTS WERE INPUT
   This is a count of the spanned record segments for RECFM=VS.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS140I
  PDS140I BLOCK  RECORD nn,nnn  LENGTH nn,nnn  TTR hexttr
       or DUMP   RECORD nn,nnn  LENGTH nn,nnn  TTR hexttr
   This is a header for BLOCK or DUMP format LIST, FIND and REPLACE
   outputs:
     RECORD   - the current physical record number
     LENGTH   - the length of the current physical record
     TTR      - the disk address of this record in hexadecimal

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS141I
  PDS141I AT hexaddr  CSECT csectname  LENGTH hexlen
                                   or  ENTRY entryname
   This is a header for LBLOCK or LDUMP format LIST, FIND and REPLACE
   outputs for a CSECT or for an entry within a CSECT in a load module:
     AT       - start of this CSECT in the load module
     CSECT    - the name of this CSECT
     LENGTH   - the length of this CSECT
     ENTRY    - the name of this entry (note: if the ENTRY form is
                used, AT displays the start of this ENTRY symbol).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS142I
  PDS142I nn,nnn LINES  IN THIS MEMBER
              or BLOCKS IN THIS MEMBER
   Note: this message means that an end of file marker has been
   recognized; it also summarizes the amount of data input -
     LINES    - number of logical records read
     BLOCKS   - number of physical records read

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS143I
  PDS143I member DIRECTORY ENTRY, LENGTH=nn
   This is a header for a dump of the member's directory entry.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS144I
  PDS144I DATA LINE n:
   This is a header for a display of one line from a formerly
   deleted member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS145I
  PDS145I nn,nnn BLOCKS UPDATED
   This message displays the number of physical records updated for
   this member or data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS160I
  PDS160I ALIASES FOR THIS MEMBER ARE: alias1, alias2, ...
   This message displays the aliases associated with this main member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS161I
  PDS161I MEMBERS TO BE RENAMED ARE: member1, member2, ...
   This message displays the group of members which will be
   renamed if a "y" is provided to the next prompt.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS162I
  PDS162I MEMBERS TO BE DELETED ARE: member1, member2, ...
   This message displays the group of members which will be
   deleted if a "y" is provided to the next prompt.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS163I
  PDS163I ASSOCIATED MEMBERS TO BE DELETED ARE: member1, member2, ...
   This message displays the associated (alias, apparent alias and
   main) members which will also be deleted if a "y" is provided
   to the next prompt.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS164I
  PDS164I CSECTS ARE: csect1, csect2, ...
   This message displays the CSECT names found in this previously
   deleted member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS165I
  PDS165I MEMBERS ARE: member1, member2, ...
   This message displays the current member group and checks to
   ensure all members are present in the data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS171I
  PDS171I operation HAS COMPLETED; RC=nnn ABEND=Snnn Unnnn
   The operation has finished with the indicated
   return code.  This is issued for the following
   subcommands when the return code is non-zero.

   AMBLIST, COBANAL, COMPRESS, COPY, CPKMAP, DELINK, DISASM,
   LMA, LOAD, MATCH, MXIBAT, OFFLOAD, PTSEXP, SRCHFOR,
   XMIT and VPDSE.

   Note: IKJEFTSR sets the return code to -1 or 255 before
   invoking the subcommand program.  In some cases, if the
   program does not complete normally, RC=255 is reported
   in message PDS171I.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS180I
  PDS180I DATA SET: CREATED  EXPIRES  LAST USE  UPDATED SECURITY
  PDS180I          mm/dd/yy mm/dd/yy  mm/dd/yy  yes/no  type

   This message lists various data set characteristics:
     CREATED  -  data set creation date.
     EXPIRES  -  data set expiration date.
     LAST USE -  last data set open date.
     UPDATED  -  YES if data set has been opened for output or update.
                 NO if all opens have been for input.
     SECURITY -  NONE if no data set password security bit is set.
                 WRITE if the data set is protected from output use.
                 READ if the data set is protected from input use.
                 RACF if the data set RACF bit is on.
 -----
 For systems with CA-ASM2, the following changes apply:
 PDS180I DATA SET: CREATED  EXPIRES  LAST USE  UPDATED  SECURITY ASM2ID
 PDS180I          mm/dd/yy mm/dd/yy  mm/dd/yy  mm/dd/yy type     userid
     UPDATED  -  last date of data set update.
     ASM2ID   -  last update user
 -----
 For systems with DMS/OS, the following changes apply:
 PDS180I DATA SET: CREATED  EXPIRES  LAST USE UPDATED  LASTUSE FIRSTUSE
 PDS180I          mm/dd/yy mm/dd/yy  mm/dd/yy mm/dd/yy userid  userid
     UPDATED  -  last date of data set update.
     LASTUSE  -  last user of this data set
     FIRSTUSE -  job which first used this data set
 -----
 For systems with FDR/ABR, the following changes apply:
 PDS180I DATA SET: CREATED  EXPIRES  LAST USE UPDATED BACK# OLD ABRFLAG
 PDS180I          mm/dd/yy mm/dd/yy  mm/dd/yy yes/no    ### yes flag
     BACK#    -  current backup number or "NONE" if none are available.
     OLD      -  YES if an old backup is available; otherwise NO.
     ABRFLAG  -  any one of the following values (see documentation
                 for the FDRABRM program):
                 NOABR  -- from OPTIONS=EX  (Exclude from ABR)
                 NOARCH -- from OPTIONS=ND  (Normal backup/no archive)
                 ALWAYS -- from OPTIONS=AD  (Always backup/no archive)
                 ARCHIV -- from ARCH=ON     (Archive this data set)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS181I
  PDS181I EXTENTS IN TRACKS: nnn, nnn, ...
   This message lists the size of each data set extent in tracks.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS182I
  PDS182I TRACKS: ALLOCATED  USED  FREE  EXTENTS
  PDS182I              nnnn  nnnn  nnnn     nnnn

   This message lists disk allocation characteristics:
     ALLOCATED - number of allocated disk tracks.
     USED      - number of in-use disk tracks.
     FREE      - number of free disk tracks.
     EXTENTS   - number of disk storage extents.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS183I
  PDS183I DIRECTORY: BLOCKS  USED  FREE  TRACKS  MEMBERS  ALIASES
  PDS183I              nnnn  nnnn  nnnn    nnnn     nnnn     nnnn

   This message lists directory statistics:
     BLOCKS    - number of allocated directory blocks.
     USED      - number of in-use directory blocks.
     FREE      - number of free directory blocks.
     TRACKS    - number of tracks occupied by directory blocks.
     MEMBERS   - number of members in the data set.
     ALIASES   - number of aliases in the data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS184I
  PDS184I EXTENT UCB LO TT-HI TT TRKS     LOW CCHH-HIGH CCHH   BOUNDARY
  PDS184I ------ --- ----- ----- ----  ----------- ----------- --------
  PDS184I     nn ccc tt.tt tt.tt  nnn  cc.cc.hh.hh cc.cc.hh.hh type
  PDS184I    ...

   This message lists data from each extent of the data set:
     EXTENT    - number of this extent.
     UCB       - UCB for this extent.
     LO TT     - TT (of TTR) address for the first track in this extent.
     HI TT     - TT (of TTR) address for the last track in this extent.
     TRACKS    - number of disk tracks in this extent.
     LOW CCHH  - CCHH address of the first track of this extent.
     HIGH CCHH - CCHH address of the last track of this extent.
     BOUNDARY  - CYL if the extent is on a cylinder boundary.
                 TRK if the extent is not on a cylinder boundary.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS184I
  PDS184I PDSE SPACE:    USED PAGES     %UTILIZED
  PDS184I             n,nnn,nnn,nnn           nnn

   This message lists space utilization for a PDSE data set:
     USED PAGES - number of pages used.
     %UTILIZED  - percent of space used.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS185I
  PDS185I FORMAT 1 DSCB:
  PDS185I 0   4   8   C  10  14  18  1C  20  24  28  2C  30   ...
  PDS185I LELBR01.LIB.PDS85                           1SJ0003 ...
  PDS185I DCDCDFF4DCC4DCEFF444444444444444444444444444FEDFFFF ...
  PDS185I 3532901B392B742850000000000000000000000000001121003 ...

   This message outputs the Format 1 DSCB in a combined character and
   hexadecimal over/under display.  The display requires two over/under
   displays to output the entire 140 bytes of the Format 1 DSCB.

   The above sample shows an allocated data set of "LELBR01.LIB.PDS85"
   which resides on DASD volume "SJ0003".

   Note: the second output line for PDS185I is a hexadecimal column
   header.  These columns are 0-origin as used by the debugging
   handbook.  For example, hex column 2C has value X'F1' and it is
   documented under topic DSCB1 for hexadecimal offset 2C.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS186I
  PDS186I LOC NAME     VALUE       DESCRIPTION
  PDS186I --- ----     -----       -----------
  PDS186I off dname    dvalue      dnotes

   This message documents the Format 1 DSCB for the allocated data set:
     off      - hexadecimal offset.
     dname    - the name of this field from the debugging handbook
                from the entries for "DSCB1".
     dvalue   - character, decimal or hexadecimal representation
                of the data from the DSCB.
                1.  character data is provided for DS1DSNAM, DS1DSSN,
                    and DS1SYSCD; however, if the DS1DSSN or DS1SYSCD
                    fields have non-character data, these fields are
                    are dumped using hexadecimal instead.
                2.  decimal data is followed by a period.
                3.  the remaining displays are hexadecimal.
     dnotes   - an interpretation of the displayed data.
     Note: the DS1EXT1, DS1EXT2 and DS1EXT3 fields are displayed in
     hexadecimal with periods between each of the CCHH subfields.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS190I
  PDS190I AN ALIAS NAMED member IS ALREADY AT THIS TTR
   The identified alias member resides at this location -- RESTORE
   will continue if only alias members are found at this TTR address.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS191I
  PDS191I STORAGE CLASS  MGMT CLASS  DATA CLASS  DSNTYPE
  PDS191I sclass         mclass      dclass      PDS/LIBRARY

   This USAGE message provides feedback on SMS managed data sets
   showing their STORCLAS, MGMTCLAS, DATACLAS and DSNTYPE for a
   PDS (identified by PDS) or a PDSE (identified by LIBRARY).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS192I
  PDS192I PDSE FORMAT:      VERSION       MAXGENS
  PDS192I                         n    nnnnnnnnnn

   This message lists the format of a PDSE data set:
     VERSION -  version number.
     MAXGENS -  maximum number of member generations for DSN.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS193I
  PDS193I THIS GROUP CONTAINS nn,nnn MEMBERS
   This message shows the number of members in the current member
   group displayed by this subcommand.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS194I
  PDS194I CONCATENATION n OF m
   This message is provided as feedback when file allocation is
   performed to provide the current NUM(n) operand and the maximum
   NUM(m) operand.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS195I
  PDS195I ISPLOG SUBCOMMAND MONITORING IS state
   This message shows the the ON/OFF state of subcommand monitoring
   to ISPLOG.  The state is set by the CONTROL ISPMODE toggle.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS196I
  PDS196I MEMBER NAME VALIDATION IS state
   This message shows the the ON/OFF state of member name validation
   for ISPF EDIT/BROWSE.  The state is set by the CONTROL MBRVAL toggle.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS197I
  PDS197I MEMLIST RESET IS state
   This message shows the the ON/OFF state of adding RESET to all
   MEMLIST commands.  The state is set by the CONTROL RESET toggle.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS198I
  PDS198I THE PGLITE/PDSEGEN DIALOGS SUPPORT PDSE V2 MEMBER
          GENERATIONS
   This message is provided as feedback when a PDSE Version 2 with
   member generations is opened.

   PGLITE  download at http://www.cbttape.org/ftp/updates/CBT182.zip.
   PDSEGEN download at http://www.cbttape.org/ftp/updates/CBT969.zip.

   Note:  COPY, RENAME, and REPRO do not preserve member generations.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS199I
  PDS199I LARGEST FREE AREA ON VOLUME volser IS nnnnnnn CYLINDERS
   This message is provided as feedback when a FIXPDS ADDCYL(nnnnn)
   or ADDTRK(nnnnn) subcommand is issued.  This message is to help
   avoid space related abends.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS200I
  PDS200I DSP UNIT RECFM LRECL BLKSZ ALLOCTRK FREETRK SECONDARY FREEDIR
  PDS200I SHR 3380 FB       80  6320 3X   150      42     1 CYL      22

   This message documents the current allocation; this format can be
   specifically requested by entering: DSNAME MSG
     DISP      - SHR or OLD disposition.
     UNIT      - disk unit device type.
     RECFM     - the record format from the DCB.
     LRECL     - the logical record length from the DCB.
     BLKSIZE   - the blocksize from the DCB.
     ALLOCTRK  - the number of disk extents allocated (example: 3X)
                 and the total space allocated in tracks.
     FREETRK   - the number of available disk tracks.
     SECONDARY - secondary allocation size and type (CYL or TRK) units.
     FREEDIR   - if a PDS, the number of available directory blocks.
                 if a PDSE, the keyword "NOLIMIT".
     DSORG     - if not DSORG=PO, the actual DSORG from the DCB.
                 if a PDSE, the keyword "PO-E".

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS210I
  PDS210I ALLOC F(SYS00001) DA('datasetname') disp UNIT(3380) -
  PDS210I   RECFM(F B) LRECL(80) BLKSIZE(6320) VOLUME(TSO003) -
  PDS210I   type SPACE(tot,sec) DIR(mm)     /*FREE TRK=42,FREE DIR=22*/

   This message documents the current allocation; this format can be
   specifically requested by entering: DSNAME TSO
     F(SYS...   - this is the current DDNAME.
     DA(        - this is the data set name.
     disp       - SHR or OLD disposition.
     UNIT(      - disk unit device type.
     RECFM(     - the record format from the DCB.
     LRECL(     - the logical record length from the DCB.
     BLKSIZE(   - the blocksize from the DCB.
     DSORG(     - if not DSORG=PO, the actual DSORG from the DCB.
     VOLUME(    - the volume name.
     type       - CYLinder or TRAck allocation.
     SPACE(     - tot is the total space allocated in "type" units.
                  sec is the secondary allocation size in "type" units.
     DIR(mm)    - if DSORG=PO, mm is the number of directory blocks.
     FREE TRK=  - the number of available disk tracks.
     FREE DIR=  - if DSORG=PO, the number of available directory blocks

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS220I
  PDS220I //SYS00001  DD  DSN=datasetname,DISP=SHR,UNIT=3380,
  PDS220I //  DCB=(RECFM=FB,LRECL=80,BLKSIZE=6320),VOL=SER=TSO003,
  PDS220I //  SPACE=(type,(tot,sec,mm))     /*FREE TRK=42,FREE DIR=22*/

   This message documents the current allocation; this format can be
   specifically requested by entering: DSNAME JCL
     //SYS..    - this is the current DDNAME.
     DSN=       - this is the data set name.
     DISP=      - SHR or OLD disposition.
     UNIT=      - disk unit device type.
     RECFM=     - the record format from the DCB.
     LRECL=     - the logical record length from the DCB.
     BLKSIZE=   - the blocksize from the DCB.
     DSORG=     - if not DSORG=PO, the actual DSORG from the DCB.
     VOLUME=    - the volume name.
     SPACE=     - type is CYL or TRK allocation.
                  tot is the total space allocated in "type" units.
                  sec is the secondary allocation size in "type" units.
                  if DSORG=PO, mm is the number or directory blocks.
     FREE TRK=  - the number of available disk tracks.
     FREE DIR=  - if DSORG=PO, the number of available directory blocks

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS230I
  PDS230I MEMBER      VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT  MOD
  PDS230I  RESCPY      01.01  82/06/14  82/11/29 15:37    12    11   11
  PDS230I  RESCOMP     SSI: hexvalue
  PDS230I  RESCOMPL-A

   This message displays directory information for a member (ISPF
   statistics, SSI information and alias indicators):
     MEMBER     - the member name.
     -A         - indicates that this member is an alias.
     VER.MOD    - if saved by ISPF, version and mod numbers.
                  if SSI:, the SSI data from the directory.
     CREATED    - creation date in yy/mm/dd format.
     LAST       - last modification date in yy/mm/dd format.
     MODIFIED   - last modification time in hh:mm format.
     SIZE       - number of records in the member currently.
     INIT       - number of records in the member initially.
     MOD        - number of changed records in the member.
     ID         - identifier of the user who last updated this member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS231I
  PDS231I MEMBER      VER.MOD  CREATED   LAST MODIFIED     SIZE     INIT
  PDS231I  AL99    -A  01.00  09/09/09  09/09/09 12:05    99999    65535
  PDS231I  NINENINE    01.00  09/09/09  09/09/09 12:05    99999    65535
  PDS231I  RESCOMP     SSI: hexvalue

   This message displays directory information for a member (ISPF
   statistics, SSI information and alias indicators):
     MEMBER     - the member name.
     -A         - indicates that this member is an alias.
     VER.MOD    - if saved by ISPF, version and mod numbers.
                  if SSI:, the SSI data from the directory.
     CREATED    - creation date in yy/mm/dd format.
     LAST       - last modification date in yy/mm/dd format.
     MODIFIED   - last modification time in hh:mm format.
     SIZE       - number of records in the member currently.
                  if extended ISPF statistics:, 99,999,999 max.
     INIT       - number of records in the member initially.
                  if extended ISPF statistics:, 99,999,999 max.
     ID         - identifier of the user who last updated this member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS232I
  PDS232I NAME     ALIASOF   CREATED  SIZE SSI     ATTRIBUTES
  PDS232I modname  alname   lkeddate dsize hexssi  attribs

   This message displays short form module information for load
   modules.  Note: if this format message is requested, many standard
   module checks are not performed and an incorrectly created or
   modified load module will not be detected.

     modname  -  the member name.
     alname   -  if the module is an alias, this field will display
                 the real member name (if not found, ?UNKNOWN).
     lkeddate -  creation date in yy/mm/dd format.
     dsize    -  the module size in decimal if less than 100,000 bytes;
                 otherwise it is rounded to the next higher K value.
     hexssi   -  SSI data in hexadecimal.
     attribs  -  attributes for this module from the set:
                 A24       - addressing mode 24
                 A31       - addressing mode 31
                 A64       - addressing mode 64
                 AANY      - addressing mode any
                 R24       - residence mode 24
                 RANY      - residence mode any
                 PAGE      - page alignment
                 AC=1      - APF authorized
                 OVERLAY   - overlay
                 TEST      - test
                 E-LEVEL   - not linked by the "F" level linkage editor
                 SCTR      - scatter
                 RENT      - reentrant
                 REUS      - reusable
                 REFR      - refreshable
                 LOAD ONLY - LOAD use only
                 NOT EDIT  - not editable
                 NOT EXEC  - not executable
                 DC        - downward compatible
                 NONE      - none of the above

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS240I
  PDS240I 'string' WAS NOT FOUND
   This FIND or REPLACE subcommand did not locate a matching character
   string in any of the members searched.

   Note: if FIND with THEN(SUBLIST) or ELSE(SUBLIST) was entered, the
   default member group is nullified.  You will have to explicitly
   respecify the member group to establish a new default member group.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS241I
  PDS241I NO MATCHING DATA WAS FOUND
   This FIND or REPLACE subcommand did not locate a matching character
   string in any of the members searched.

   Note: if FIND with THEN(SUBLIST) or ELSE(SUBLIST) was entered, the
   default member group is nullified.  You will have to explicitly
   respecify the member group to establish a new default member group.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS242I
  PDS242I NO MATCHING EXTERNAL SYMBOLS WERE FOUND
   This MAP subcommand did not locate any matching MODULE names
   in any of the members searched.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS243I
  PDS243I NO MATCHING HISTORY DATA WAS FOUND
   This HISTORY subcommand did not locate any matching HISTORY
   information in the members searched.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS245I
  PDS245I NO MATCHING MEMBERS WERE FOUND
   This COPY subcommand did not locate any members which existed or
   did not exist (depending on EXIST/NOEXIST) in the output data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS246I
  PDS246I NOWRITE IS IN EFFECT; NO UPDATES WILL BE PERFORMED
   This REPLACE subcommand will not actually update any data; the WRITE
   or UPDATE keyword was not explicitly specified.  If you want to
   actually update the data, reenter the REPLACE subcommand and add the
   WRITE or UPDATE keyword.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS247I
  PDS247I PDS DETERMINED BLOCKSIZE WILL BE USED
   FIXPDS BLKSIZE(99999) was specified and PDS will determine the
   blocksize for RECFM=F and V.  This results in half-track blocking.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS250I
  PDS250I CSECT VER COUNT FLOW STATE TEST TRACE RES ENDJOB SYMD OBJ OPT
  PDS250I ----- --- ----- ---- ----- ---- ----- --- ------ ---- --- ---
  PDS250I name  VS  COUNT FLOW STATE TEST TRACE RES ENDJOB SYMD 370 xxx
  PDS250I ...

   This message documents several COBOL compiler options in effect
   when this CSECT was compiled:
     CSECT    - CSECT name
     VER      - Compiler version ("VS" for VS COBOL or "V4" for COBOL
                Version 4); for "VS", column 20 will be overlaid
                with LANGLVL (1 or 2).
     COUNT    - Count option
     FLOW     - Flow option
     STATE    - State option
     TEST     - Test option
     TRACE    - Trace option
     RES      - Res option
     ENDJOB   - Endjob option
     SYMD     - Symdump option
     OBJ      - 370 if OBJ370 was specified in the program
     OPTIMIZE - COBOL if optimized by the COBOL compiler
                CAPEX if optimized by the CAPEX product
                CAP/DTECT if the CAPEX DTECT option was used
                CA-OPT if optimized by the CA-OPTIMIZER product
                OPT/DTECT if the CA-OPTIMIZER DTECT option was used

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS260I
  PDS260I CSECT VER TEST SSR OPT TIME  ZWB NU TRUNC RES RENT DYNAM DATA
  PDS260I ----- --- ---- --- --- ----- --- -- ----- --- ---- ----- ----
  PDS260I name  C2  TEST SSR OPT FDUMP ZWB PF TRUNC RES RENT DYNAM 31
  PDS260I name  Evr TEST SSR OPT hh:mm ZWB MG (OPT) RES RENT DYNAM 31
  PDS260I ...

   This message documents several COBOL II (C2) and
   COBOL MVS (E1r), COBOL OS/390 (E2r), Enterprise COBOL z/OS (EÝ3-6¨r)
   compiler options in effect when this CSECT was compiled:
     CSECT    - CSECT name
     VER      - Version of the compiler (C2 or Evr),
                where v=version and r=release of LE-compliant COBOL
     TEST     - Test option
     SSRANGE  - Subscript range option
                If NOSSRANGE, yymmdd date of compile (Evr only)
     OPT      - Opt option
     TIME     - hh:mm time of compile (Evr only)
                FDUMP option (C2 only)
     ZWB      - ZWB option
     NUMPROC  - NUMPROC option ("NOPFD", "(MIG)" or "(PFD)")
     TRUNC    - TRUNC option ("(OPT)", "(STD)" or "(BIN)")
     RES      - Res option
     RENT     - Rent option
     DYNAM    - Dynam option
     DATA     - 31 if DATA 31; blank if DATA 24

     Signature information bytes for compiler options
     from COBOL Programming Guide.
     ----------
     8000000000 - ADV
     4000000000 - APOST
     2000000000 - DATA(31), DATA(24) otherwise
     1000000000 - DECK
     0800000000 - DUMP
     0400000000 - DYNAM
     0200000000 - FASTSRT
     0100000000 - FDUMP (COBOL II only); SQLIMS (eCOBOL V5 and above)
     0080000000 - LIB
     0040000000 - LIST
     0020000000 - MAP
     0010000000 - NUMBER
     0008000000 - OBJECT
     0004000000 - OFFSET
     0002000000 - OPTIMIZE
     0001000000 - OUTDD specified
     0000800000 - NUMPROC(PFD)
     0000400000 - RENT
     0000200000 - RESIDENT (COBOL II only; set on otherwise)
     0000100000 - SEQUENCE
     0000080000 - SIZE(MAX) (COBOL II only; reserved otherwise)
     0000040000 - SOURCE
     0000020000 - SSRANGE
     0000010000 - TERMINAL
     0000008000 - TEST
     0000004000 - TRUNC(STD)
     0000002000 - WORD
     0000001000 - VBREF
     0000000800 - XREF
     0000000400 - ZWB
     0000000200 - NAME
     0000000100 - CMPR2 (eCOBOL V3 and below; set off otherwise)
     0000000080 - NUMPROC(MIG) (eCOBOL V4 and below; reserved otherwise)
     0000000040 - NUMCLAS(ALT)
     0000000020 - DBCS
     0000000010 - AWO
     0000000008 - TRUNC(BIN)
     0000000004 - ADATA (eCOBOL V5 and above)
     0000000002 - CURRENCY
     0000000001 - compilation unit is a CLASS
     0000000000 - TRUNC(OPT) - assumed value if not STD or BIN
     0000000000 - NUMPROC(NOPFD) - assumed value if not PFD or MIG

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS261I
  PDS261I PROGRAM TERMINATED BY CONDEND FOR MESSAGE PDSxxxx

   This message indicates that CONDEND was satisfied by the displayed
   message number and -PDS86- will terminate without executing any
   additional subcommands.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS262I
  PDS262I LOC NAME     VALUE    DESCRIPTION
  PDS262I --- ----     -----    -----------
  PDS262I off dname    dvalue   dnotes

   This message documents an individual directory entry:
     off      - hexadecimal offset.
     dname    - the name of this field from the debugging handbook.
                Names beginning MAN.. are for PDSMAN/MVS statistics.
     dvalue   - character, decimal or hexadecimal representation
                of the data from the directory entry.
                1.  character data is provided for PDS2NAME and PDS2MNM
                2.  decimal data is followed by a period or K.
                3.  the remaining displays are hexadecimal.
     dnotes   - an interpretation of the displayed data.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS273I
  PDS273I OUTPUT DATA SET IS dsname
   The default output data set name for IEBCOPY is displayed by this
   message.  This data set name was substituted for the * in the data
   set name position of the COPY subcommand.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS276I
  PDS276I A ZAP IDR RECORD WAS ADDED
   This message is generated by the REPRO subcommand if it adds
   a ZAP IDR record to a load member due to an ADDZAP keyword.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS277I
  PDS277I RESTORE FIND STRING TRUNCATED TO 32 CHARACTERS
   At most 32 characters may be used for a search string.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS280I
  PDS280I OS NAME: osname vv.rr.mm   SMF ID: sid
   This LISTENV message displays the OS product name, version, release,
   modification level, and SMF system identifier.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS281I
  PDS281I SCP PRODUCT LEVEL: SPn.n.n HBBnnnn
   This LISTENV message displays the system control program product
   level.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS282I
  PDS282I CPC NODE:  Type.Model.Manufacturer.Plant.Sequence Number
   This LISTENV message displays the Central Processing Complex Node
   Descriptor.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS283I
  PDS283I SU/SECOND:   nnnnn.th   TOTAL MIPS:    nnnn.th
   This LISTENV message displays the service units per SRM CPU
   second and the estimated total MIPS for all online CPU's
   ((SU/SEC / 48.5) * #CPU's).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS284I
  PDS284I CPU MODEL:  xxxx   ONLINE CPUS:  nn
   This LISTENV message displays the CPU model and the number of
   CPU's currently online.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS285I
  PDS285I REAL STORAGE: nnnnnnnMB   EXPANDED STORAGE: nnnnnMB
   This LISTENV message displays the amount of real and expanded
   storage.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS286I
  PDS286I PROCESSOR NAME: procname  LPAR NAME: lparname
   This LISTENV message displays the names of the processor and
   LPAR.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS287I
  PDS287I ARCHITECTURE LEVEL: archlvl
   This LISTENV message displays the architecture level.
     1   ESA/390
     2   Z/ARCH

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS288I
  PDS288I CPU SERIAL: serial   VERSION CODE: ver
   This LISTENV message displays the CPU serial number and version
   code.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS289I
  PDS289I SECURITY SYSTEM: system   JOB ENTRY SYSTEM: jes
   This LISTENV message displays the security system
     ACF2 - CA-Access Control Facility
     RACF - IBM Resource Access Control Facility
     TSS  - CA-Top Secret System
     DBLT - DEADBOLT
     PIES - PIES Access Control System
     NONE - No security system
   and job entry system in use.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS290I
  PDS290I IPL TIME: hh.mm.ss AM/PM   day-of-week mon dd, yyyy
   This LISTENV message shows the time and date of the last IPL.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS291I
  PDS291I SYSPLEX NAME: plexname  SYSPLEX ID: plexid
   This LISTENV message displays the name and id of the SYSPLEX.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS292I
  PDS292I SYSTEM NAME: sysname
   This LISTENV message displays the system name from the CVT

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS300A
  PDS300A ENTER OPTION -- DSN=dsname,VOL=SER=volume  MEM=groupname
   The current data set name, the associated disk volume name and the
   current member group name are displayed in this subcommand prompt.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS380A
  PDS380A REENTER THE SEARCH STRING WITH DELIMITERS:
   Due to a previously noted error condition, the search string is not
   valid.  The string and its delimiters should be reentered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS381A
  PDS381A REENTER THE DATA SET NAME, VOLUME AND DISPOSITION:
   Due to a previously noted error condition, the data set name
   entered could not be used.  Another data set name and any volume
   or disposition data must be reentered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS382A
  PDS382A REENTER THE FIRST TTR:
   Due to a previously noted error condition, the first TTR address
   entered could not be used and should be reentered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS383A
  PDS383A REENTER THE SECOND TTR:
   Due to a previously noted error condition, the second TTR address
   entered could not be used and should be reentered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS384A
  PDS384A REENTER THE HEX OFFSET:
   Due to a previously noted error condition, the hexadecimal offset
   entered could not be used.  The offset value should be reentered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS385A
  PDS385A REENTER THE SSI DATA:
   Due to a previously noted error condition, the hexadecimal SSI
   information entered could not be used.  The SSI data should be
   reentered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS386A
  PDS386A REENTER THE REPLACEMENT STRING WITH DELIMITERS:
   Due to a previously noted error condition, the replacement string
   is not valid.  The string and its delimiters should be reentered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS390A
  PDS390A SHOULD THIS MEMBER BE RESTORED (Y/N) ?
   If the identified member should be restored, enter: y
   If the identified member should not be restored, enter: n

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS391A
  PDS391A SHOULD THESE MEMBERS BE RENAMED (Y/N) ?
   If the identified members should be renamed, enter: y
   If the identified members should not be renamed, enter: n

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS392A
  PDS392A SHOULD THIS DATA SET BE MODIFIED (Y/N) ?
   If this data set should be modified by FIXPDS, enter: y
   If this data set should not be modified by FIXPDS, enter: n

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS393A
  PDS393A SHOULD THIS MEMBER BE DELETED (Y/N) ?
   If the identified member should be deleted, enter: y
   If the identified member should not be deleted, enter: n

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS394A
  PDS394A SHOULD ALL OF THESE MEMBERS BE DELETED (Y/N) ?
   If the identified members should be deleted, enter: y
   If the identified members should not be deleted, enter: n

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS395A
  PDS395A SHOULD THESE MEMBERS BE SUBMITTED (Y/N) ?
   If the identified members should be submitted, enter: y
   If the identified members should not be submitted, enter: n

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS396A
  PDS396A SHOULD REPRO CONTINUE (Y/N) ?
   If the REPRO subcommand should continue, enter: y
   If the REPRO subcommand should not continue, enter: n

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS397A
  PDS397A SHOULD ENTIRE DIRECTORY BE MODIFIED (Y/N) ?
   If the ATTRIB subcommand should continue, enter: y
   If the ATTRIB subcommand should not continue, enter: n

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS400W
  PDS400W NO MEMBERS ARE IN THE DATA SET
   This data set has no member names in its directory.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS410W
  PDS410W VOLSET(volname) IS STILL IN EFFECT
   The displayed default volume name will be used unless a VOLUME
   parameter is also entered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS412W
  PDS412W REALLOCATION WITHOUT VOLSET WILL BE ATTEMPTED
   The allocation attempt failed; -PDS86- will attempt reallocation
   without the VOLSET parameter assuming that you really wanted a
   cataloged data set.  If this is not the case, you will have to
   enter another change command for the correct data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS441W
  PDS441W name (WEAK)
   This external name is a weak unresolved external reference; this
   name was not present when the module was linked.  If this module
   is relinked, the linkage-editor can resolve references to this
   name but its presence is not required.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS442W
  PDS442W name (MISSING)
   This external name is an unresolved external reference; this name
   was not present when the module was linked.  If this module is
   relinked, the linkage-editor can resolve references to this name;
   however, error messages will be generated if this name is again
   missing during the module linkage-edit.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS443W
  PDS443W MAXBLK HAS BEEN RAISED TO THE DATA SET LRECL VALUE
   REPRO does not allow an output blocksize lower than the data set
   logical record length.  For RECFM=V data sets, MAXBLK is set to
   the LRECL+4; for RECFM=F data sets, MAXBLK is set to the LRECL.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS444W
  PDS444W MAXBLK EXCEEDS THE DATA SET BLOCKSIZE
   REPRO can create data blocks larger than your current data set
   blocksize; however, unless the BLKSIZE is changed to the maximum
   data blocksize later, most programs referencing the large blocks
   will fail with I/O errors.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS451W
  PDS451W ALL MEMBERS IN THIS PDS WILL BE LOST
   FIXPDS RESET deletes all members from the data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS460W
  PDS460W NO HISTORY DATA IS AVAILABLE
   This module has no associated history (translator, zap or user-
   supplied) IDR data.  This module was probably linked by an obsolete
   linkage editor.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS470W
  PDS470W THE PROGRAM IS PROBABLY IN A LOOP
   The previous attention was noted but an interruption point was
   not encountered in the program before this attention.

   Interruptions are checked for at a terminal input or output and
   when the input data set is read.

   This message usually means that the program is in a loop --
   the looping subcommand will be terminated and the subcommand
   that was last entered will be given control.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS471W
  PDS471W operation HAS COMPLETED WITH WARNINGS; RC=nnn ABEND=Snnn Unnnn
   The operation has finished with the indicated
   return code.  This is issued for the following
   subcommands when the return code is non-zero.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS480W
  PDS480W COMPRESS IS IN PROGRESS
   A compress has been initiated.

   Compress is performed in-place on your data set; if IEBCOPY does
   not complete its operation for any reason, the data set should be
   checked with a VERIFY subcommand.

  PDS480W COMPRESS MAY NOT BE INTERRUPTED
   Attentions received during a compress operation are ignored since
   the target data set may be destroyed if IEBCOPY does not complete.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS482W
  PDS482W BLOCKSIZE SHOULD BE EVENLY DIVISIBLE BY THE DCB LRECL
   The requested BLKSIZE is not a multiple of the logical record
   length.  This is usually an error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS484W
  PDS484W COPY IS IN PROGRESS
   A copy operation has been initiated.

   Selected members from the current data set are being copied to
   the output data set.

  PDS484W COPY SHOULD NOT BE INTERRUPTED
   Attentions received during the copy operation are ignored to
   ensure that the target data set will not be destroyed.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS500W
  PDS500W NO COBOL TASK GLOBAL TABLE WAS FOUND
   This member contains COBOL CSECTS; however, the TGT could not be
   located after the member was loaded.  Thus, no compile options
   can be reported.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS502W
  PDS502W THIS MODULE WAS COMPILED WITH ENDJOB AND MIXED RES AND NORES
   Some of the COBOL routines in this module were compiled with the
   RES compiler option; others had the NORES option; and ENDJOB was
   in effect for at least one routine.  According to the COBOL
   programmer's guide, this combination is not recommended.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS503W
  PDS503W THIS MODULE WAS COMPILED WITH MIXED RES AND NORES
   Some of the COBOL routines in this module were compiled with the
   RES compiler option; others had the NORES option.  This can lead
   to errors since some routines have requested resident compiler
   routines and others have requested no resident compiler routines.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS510W
  PDS510W THIS IS A NULL MEMBER
   This member contains no data.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS520W
  PDS520W NO INFORMATION IS AVAILABLE
   No .? (extended help) information is available -- no warning or
   error messages are current.

   To use the extended help facility, you should enter  .?
   immediately after any subcommand which receives warning (PDSnnnW)
   and/or error (PDSnnnE) messages.  Up to five of the most recent
   warning or error message explanations will be automatically
   requested from the HELP data set by the program.

   Note: To test the extended help facility when no messages are
   current, enter  .?  twice.  The first enter will result in a
   PDS520W message and the second enter should result in an
   explanation of the PDS520W message.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS521W
  PDS521W OUTPUT DATA SET IS NOT PARTITIONED
   The LOAD subcommand which invokes PDSLOAD requires an output
   PDS.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS522W
  PDS522W ADDSTATS REQUIRED WITH EXTEND
   The ATTRIB subcommand to add extended ISPF member statistics
   must be issued with both the ADDSTATS and EXTEND operands.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS530W
  PDS530W THIS DATA SET IS NOT PARTITIONED
   Several subcommands are not available since they are only defined
   for partitioned data sets.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS531W
  PDS531W THIS DATA SET IS A PDSE - SOME FUNCTIONS LIMITED
   Several subcommands are not available because they are not
   allowed by IBM design or they require the Binder API.  Or
   they are not supported by the subcommand author.

   Subcommand       PDSE Type         Reason
   -------------    --------------    --------------------
   RESTORE          Data              IBM design
   RESTORE          Program Object    IBM design
   REPLACE          Program Object    IBM design
   ALIAS            Program Object    Binder API
   ATTRIB lkedattr  Program Object    Binder API
   REPRO            Program Object    Binder API
   DLINK            Program Object    Not supported

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS532W
  PDS532W MULTIPLE INPUT MEMBERS WILL BE UNLOADED TO THIS SEQUENTIAL
  DATA SET
   The output data set is sequential; IEBCOPY will be used to
   create an unload format output data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS533W
  PDS533W TSO TRANSMIT LIMITED TO 3620 MEMBERS UNLESS ALL MEMBERS
  ARE SPECIFIED
   The member group to be transmitted can not be larger than 3620
   members.  All members (:) can be transmitted without limits.
   This is due to the IKJEFTSR command buffer length limitation
   of 32K.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS534W
  PDS534W MATCH DATA SET IS NOT PARTITIONED
   PDSMATCH only works with two partitioned data sets.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS535W
  PDS535W THIS DATA SET IS NOT A PDSE
   The VPDSE subcommand is only supported for PDSE data sets.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS700E
  PDS700E THIS RANGE OF NAMES IS INVALID
   The range of names indicated is invalid (the range of names may
   not progress from one name to a name lower in collating sequence).

   For example:
       valid name ranges   --  bb:bb   bb:c   bb:bc   bb:b   bb:   :bb
       invalid name ranges --  bb:ba   bb:a

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS701E
  PDS701E THIS DATA SET IS NOT A LOAD LIBRARY
   This subcommand or operand is only defined for load libraries.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS702E
  PDS702E THIS DATA SET IS A LOAD LIBRARY
   This subcommand or operand is not defined for load libraries.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS703E
  PDS703E THIS MODULE HAS NO EXTERNAL SYMBOLS
   This usually indicates that the module was not created by a linkage
   editor or that it was constructed from incomplete data or that it
   was created with the not-edit attribute of the linkage editor.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS704E
  PDS704E MODULE member HAS NO EXTERNAL SYMBOLS
   This usually indicates that the module was not created by a linkage
   editor or that it was constructed from incomplete data or that it
   was created with the not-edit attribute of the linkage editor.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS705E
  PDS705E EXTERNAL SYMBOL name WAS NOT FOUND
   This name is not a valid external symbol in this member and the
   entry point address can not be changed.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS706E
  PDS706E subcommand IS NOT SUPPORTED FOR PDSE DATA SETS
   The RESTORE and DLINK subcommands are not supported for
   PDSE data sets.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS707E
  PDS707E RENAME SWAP IS NOT SUPPORTED FOR PDSE DATA SETS
   The RENAME SWAP operand is not supported for PDSE data sets.
   Note: Use the RNS line command in MEMLIST to perform this function.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS708E
  PDS708E PDS708E EXTENDED/LARGE FORMAT, HFS, AND VSAM ARE NOT SUPPORTED
   Extended/Large Format, HFS, and VSAM datasets are not supported.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS710E
  PDS710E INVALID APF INFORMATION FORMAT; MEMBER IS ASSUMED NOT AUTH.
   The APF information for this module is invalid and the module
   is assumed to be not authorized.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS711E
  PDS711E NO MEMBER NAMES ARE IN THIS RANGE
   This data set has no members whose names are in this range of names.
   The following examples illustrate matching members for the MEMBER
   subcommand:
        MEMBERS :          all members -- X'00' through X'FF'
        MEMBERS dd:        members from DD... through X'FF'
        MEMBERS :bb        members from X'00' through BB...
        MEMBERS aa:bb      members between AA... and BB...
        MEMBERS (abc,d:)   member ABC and those from D... through X'FF'

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS712E
  PDS712E NO MEMBER NAMES MATCH THIS PATTERN
   This data set has no members whose names match these pattern
   characters.  The following examples illustrate matching members for
   the MEMBER subcommand:
        MEMBERS aa/        member names containing AA anywhere
        MEMBERS /bb        member names containing BB anywhere
        MEMBERS aa/bb      member names containing AA and BB
        MEMBERS (aa/,bb/)  member names containing AA or BB

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS713E
  PDS713E NO MEMBER NAMES MATCH THIS COMBINATION NAME
   Either no member names match the beginning range characters or
   the second pattern portion of the name entered.  The following
   examples illustrate matching members for the MEMBER subcommand:
        MEMBERS aa*        members with names AA...
        MEMBERS *bb        members with names containing BB anywhere
        MEMBERS aa*bb      members with names AA... and BB elsewhere
        MEMBERS (aa*,bb/)  members with names AA... or with BB anywhere

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS715E
  PDS715E NO MATCHING ATTRIBUTES WERE FOUND
   This IF or MEMLIST subcommand did not locate any members with the
   attributes desired in the members searched.

   Note: if IF with THEN(SUBLIST) or ELSE(SUBLIST) was entered, the
   default member group is nullified.  You will have to explicitly
   respecify the member group to establish a new default member group.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS720E
  PDS720E NOT APF AUTHORIZED; THE APF DATA IS MISSING
   The APF data for this module is not present and the module is
   assumed to be not authorized.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS721E
  PDS721E NOT APF AUTHORIZED, THE APF DATA IS THE WRONG LENGTH
   The APF data for this module is invalid (not one byte long) and
   the module is assumed to be not authorized.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS722E
  PDS722E THE APF DATA CAN NOT BE CHANGED
   Due to missing or invalid APF data, the APF value was not modified.
   A module linked with an old linkage editor might not have APF data.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS723E
  PDS723E THE RLD/CONTROL COUNT CAN NOT BE CHANGED
   Due to non-existent RLD/control data in the member, the directory
   RLD/control count was not modified.  Note that a module linked with
   an obsolete linkage editor might not have a RLD/control count field.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS724E
  PDS724E RMODE AND AMODE CAN NOT BE CHANGED -- OBSOLETE LINKAGE-EDITOR
   Residence and addressing mode values do not exist for this module
   since it was linked with an obsolete linkage editor.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS726E
  PDS726E PAGE ALIGNMENT CAN NOT BE CHANGED -- OBSOLETE LINKAGE-EDITOR
   The page alignment flag does not exist for this module since it was
   linked with an obsolete linkage editor.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS730E
  PDS730E THIS SUBCOMMAND IS NOT OPERATIONAL; YOU ARE ALREADY UNDER ISPF
   The BROWSE, EDIT, ISPF, ISPMODE, MEMLIST, and VIEW subcommands
   cannot be used since ISPF was initialized before invoking -PDS86-.

   Note: if -PDS86- is invoked from the PDS panel, these subcommands
   can be used in -PDS86- even though ISPF is active.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS731E
  PDS731E ISPF IS NOT OPERATIONAL NOW
   Due to a previously noted error condition, the BROWSE, EDIT,
   ISPF, ISPMODE, MEMLIST, and VIEW subcommands have been disabled.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS732E
  PDS732E CLIST PROCESSING IS NOT SUPPORTED FROM ISPMODE OR MEMLIST
   The % (implied CLIST) and EXEC subcommands are not currently
   operational in an ISPF dialog environment.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS733E
  PDS733E BROWSE FAILED -- NULL MEMBER (ZERO-LENGTH DATA)
   ISPF cannot BROWSE null members with no data.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS734E
  PDS734E BROWSE FAILED -- NO MEMBERS IN PDS
   ISPF cannot BROWSE a PDS with no members.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS735E
  PDS735E BROWSE FAILED -- I/O ERROR
   ISPF cannot BROWSE members containing I/O errors
   (physical errors or logical record blocking errors).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS740E
  PDS740E THIS MODULE HAS NO MATCHING EXTERNAL SYMBOLS
   The MODULE(name) requested is not contained in this member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS750E
  PDS750E A REQUIRED NOTELIST POINTER WAS NOT FOUND IN THIS MEMBER
   Due to an error condition, one or more load module records referred
   to in an overlay notelist record could not be located by FIXPDS.

   This message may be due to data set or equipment errors.  A VERIFY
   subcommand may provide more information.

   The EXPANDDIR operation is terminated with the member in error
   unchanged.  Any previously moved members and their associated
   aliases are fully updated, however.

   If this problem is due to data set errors, the data set may be
   damaged and should be recovered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS751E
  PDS751E A NOTELIST RECORD COULD NOT BE FOUND FOR THIS MEMBER
   Due to an error condition, an overlay notelist record could not
   be input by FIXPDS.

   This message may be due to data set or equipment errors.  A VERIFY
   subcommand may provide more information.

   The EXPANDDIR operation is terminated with the member in error
   unchanged.  Any previously moved members and their associated
   aliases are fully updated, however.

   If this problem is due to data set errors, the data set may be
   damaged and should be recovered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS752E
  PDS752E THE NUMBER OF DESIRED DIRECTORY BLOCKS MUST BE SPECIFIED
   Due to a previously noted error condition, the number of directory
   blocks could not be determined.  Therefore, the number of directory
   blocks must be specified to expand or reset the data set directory.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS770E
  PDS770E A SEARCH STRING IS REQUIRED
   A default search string cannot be used since a default string has
   not yet been established.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS771E
  PDS771E name IS AN INVALID SUBCOMMAND; ENTER "HELP" OR "OPTIONS" ...
   The displayed subcommand name is not defined -- a table of valid
   subcommand names follows this header.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS772E
  PDS772E A REPLACEMENT STRING IS REQUIRED
   A default replacement string cannot be used since a default string
   has not yet been established.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS773E
  PDS773E EQUAL LENGTH STRINGS ARE REQUIRED FOR BLOCK AND DUMP UPDATES
   The search and replacement strings are different lengths; this is
   only allowed for REPLACE with NUM, SNUM or NONUM formats.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS774E
  PDS774E REPLACE TERMINATED; CHARACTER EXPANSION FAILED
   The replacement string could not fit on the current logical line.
   No additional updates will be made to this member; however, note
   that this member may have been partially updated.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS780E
  PDS780E filename DCB OPEN ERROR -- REALLOCATE AND TRY AGAIN
   The FILE(PDSOUT) or session copy data set could not be opened;
   correct any problems with the current allocation and try again.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS781E
  PDS781E filename DCB ATTRIBUTES CONFLICT -- USE SEQUENTIAL WITH
   RECFM=FB AND LRECL=80
   The attributes of the FILE(PDSOUT) and the session copy data set
   must be RECFM(F B) LRECL(80) with a blocksize which is a multiple
   of 80.  It must be allocated to a sequential output data set or a
   member of a partitioned data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS800E
  PDS800E NO LOAD MODULE TEXT WAS FOUND FOR MEMBER
   This member contains invalid load module data and it cannot
   be restored.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS801E
  PDS801E END OF MEMBER SIMULATED -- REMAINDER OF TRACK SKIPPED
   Due to a previously noted input error, the remainder of the
   track cannot be read.  RESTORE will begin processing with the
   following track as if it were the beginning of a new member.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS802E
  PDS802E A MAIN MEMBER NAMED member IS ALREADY AT THIS TTR
   The identified main member resides at this location; RESTORE
   will terminate after checking for other associated members.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS804E
  PDS804E RESTORE ABANDONED
   Due to a previously noted error condition, RESTORE cannot continue.
   You may wish to retry RESTORE with different operands.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS805E
  PDS805E INVALID LOAD MODULE DATA
   This member contains invalid load module data and it cannot
   be restored.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS806E
  PDS806E BLOCK LENGTH of size EXCEEDS THE MAXBLK VALUE
   This member contains blocks larger than the MAXBLK value entered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS811E
  PDS811E RECORD LENGTH n IS INVALID
   The indicated logical record length (0, 1, 2 or 3) is invalid for
   RECFM(V) data sets.

   This type of error may indicate that your data set DCB has been
   altered.  If this is the case, the data set DCB can be reset
   with the following subcommand:
     FIXPDS RECFM(mm) LRECL(nn) BLKSIZE(pp)
     (where mm, nn and pp are replaced by the proper DCB attributes)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS812E
  PDS812E BLOCK LENGTH OF nn,nnn EXCEEDS THE DATA SET DCB BLKSIZE
   The physical blocksize exceeds the BLKSIZE of the data set.

   This type of error may indicate that your data set DCB has been
   altered.  If this is the case, the data set DCB can be reset
   with the following subcommand:
     FIXPDS RECFM(mm) LRECL(nn) BLKSIZE(pp)
     (where mm, nn and pp are replaced by the proper DCB attributes)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS813E
  PDS813E RECORD LENGTH OF nn,nnn EXCEEDS THE MAXIMUM DCB LRECL
   The logical record length exceeds the LRECL of the data set.

   This type of error may indicate that your data set DCB has been
   altered.  If this is the case, the data set DCB can be reset
   with the following subcommand:
     FIXPDS RECFM(mm) LRECL(nn) BLKSIZE(pp)
     (where mm, nn and pp are replaced by the proper DCB attributes)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS814E
  PDS814E BLOCK LENGTH OF nn,nnn IS NOT DIVISIBLE BY THE DCB LRECL
   The physical blocksize is not a multiple of the data set's LRECL.

   This type of error may indicate that your data set DCB has been
   altered.  If this is the case, the data set DCB can be reset
   with the following subcommand:
     FIXPDS RECFM(mm) LRECL(nn) BLKSIZE(pp)
     (where mm, nn and pp are replaced by the proper DCB attributes)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS820E
  PDS820E THIS MEMBER IS AN ALIAS FOR member1 BUT IT POINTS TO member2
   This member is actually an alias for main member member1 (according
   to its TTR), but its directory entry indicates that it should be an
   alias of member2.

   This is usually caused by doing a rename of a main module with
   some utility which does not update the associated alias modules'
   directory entries correctly.

   This type of error could cause serious problems if the members are
   in your LPALIB (you may not be able to IPL).

   To correct this problem with -PDS86-, issue the following
   subcommand:
     RENAME member1 member1
        (where member1 is the name of the main module identified above)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS821E
  PDS821E RMODE ENTRY DOES NOT CORRESPOND WITH MEMBER member
   The residence mode entry for this alias member does not match the
   residence mode entry of the identified main module.

   This type of error is unusual; the main module and its aliases
   should be reinstalled.

   To correct this problem with -PDS86-, issue the following
   subcommands:
     ATTRIB member
        (where member is the main member identified above).
     ATTRIB member RMODExx
        (where RMODExx is the RMODE value displayed
         by the above ATTRIB subcommand)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS822E
  PDS822E MAIN AMODE ENTRY DOES NOT CORRESPOND WITH MEMBER member
   The addressing mode entry for this alias member does not match
   the addressing mode entry of the identified main module.

   This type of error is unusual; the main module and its aliases
   should be reinstalled.

   To correct this problem with -PDS86-, issue the following
   subcommands:
     ATTRIB member
        (where member is the main member identified above).
     ATTRIB member AMODExx
        (where AMODExx is the AMODE value displayed
         by the above ATTRIB subcommand)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS823E
  PDS823E RLD/CONTROL COUNT DOES NOT CORRESPOND WITH MEMBER member
   The RLD/control count for this alias member does not match
   the RLD/control count of the identified main module.

   This type of error is unusual; the main module and its aliases
   should be reinstalled.

   This count field is used by program fetch to construct
   a channel program that will load the member.

   If this error is not resolved before program fetch uses this member,
   fetch may operate in a degraded mode (see message CSV300I).

   To correct this problem with -PDS86-, issue the following
   subcommand for the main module and each of its aliases:
     ATTRIB memberx RLDFIX

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS824E
  PDS824E DUPLICATE MEMBER NAME -- IGNORED
   This member name has previously been encountered in the data set
   directory.

   Your data set has been damaged -- it should be recovered in some
   fashion; it may suffice to just delete one of the duplicate member
   names.  Note: an interactive ZAP command may be useful here in
   changing the actual member names to ascending order.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS825E
  PDS825E MEMBER NAME IS OUT OF SEQUENCE -- IGNORED
   Member names higher in the collating sequence than this member name
   have previously been encountered in the data set directory.

   Your data set has been damaged -- it should be recovered in some
   fashion; it may suffice to delete the out-of-sequence member
   name or the member name just before this one in the directory.
   Note: an interactive ZAP command may be useful in changing the
   actual member names to ascending order.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS826E
  PDS826E THE DIRECTORY RLD/CONTROL COUNT DOES NOT MATCH THE FIRST RLD
   ENTRY
   The RLD/control count for this member does not match the number
   of RLD or control records following the first TEXT record.

   This count field is used by program fetch to construct
   a channel program that will load the member.

   If this error is not resolved before program fetch uses this member,
   fetch may operate in a degraded mode (see message CSV300I).

   To correct this problem with -PDS86-, issue the following
   subcommand for the main module and each of its aliases:
     ATTRIB memberx RLDFIX

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS827E
  PDS827E member1 IS AN ALIAS FOR THIS MEMBER BUT IT POINTS TO member2
   Member1 is actually an alias for this main member (according to its
   TTR), but its directory entry indicates that it should be an alias
   of member2.

   This is usually caused by doing a rename of a main module with
   some utility which does not update the associated alias modules'
   directory entries correctly.

   This type of error could cause serious problems if the members are
   in your LPALIB (you may not be able to IPL).

   To correct this problem with -PDS86-, issue the following
   subcommand:
     RENAME mmember mmember
        (where mmember is the name of the main member)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS830E
  PDS830E OBTAIN ERROR; DSCB NOT ON VOLUME
   The data set name could not be found in the VTOC (Volume Table of
   Contents); this is probably a program error or the base name
   of a generation data group (GDG) has been entered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS831E
  PDS831E UNABLE TO OPEN DATA SET
   The open for the input data set failed; this is probably a
   program error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS832E
  PDS832E DUMMY MEMBER ADD FAILED, RC=8
   A dummy member, with name 9FIXPDS, was not added as expected to
   the data set directory; this is probably a program error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS833E
  PDS833E DUMMY MEMBER DELETE FAILED, RC=8
   A dummy member, with name 9FIXPDS, was not deleted as expected from
   the data set directory; this is probably a program error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS834E
  PDS834E ERROR IN GNRLFAIL SERVICE ROUTINE; R15=nn
   The GNRLFAIL system message routine failed with the indicated
   return code; this is probably a program error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS835E
  PDS835E ERROR IN DAIRFAIL SERVICE ROUTINE; R15=nn
   The DAIRFAIL system message routine failed with the indicated return
   code; this is probably a program error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS836E
  PDS836E I/O ERROR IN DIRECTORY
   The system directory management routines indicate that the directory
   for this data set contains one or more I/O errors.

   This I/O error may be due to data set or equipment errors; entering
   a VERIFY subcommand may provide more information.

   Data set recovery will be required if this is a data set error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS840E
  PDS840E INVALID HEXADECIMAL STRING LENGTH
   At most 64 hexadecimal digits may be used for a search or
   replacement string.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS841E
  PDS841E INVALID HEXADECIMAL CHARACTERS
   Only numeric characters and the characters from A through F may be
   used in hexadecimal strings.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS842E
  PDS842E THIS STRING IS TOO LONG
   At most 32 characters may be used for a search or replacement
   string.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS843E
  PDS843E ONLY DISK DATA SETS ARE SUPPORTED
   The target data set must exist on a physical or virtual disk.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS844E
  PDS844E LOCATE FAILED FOR DATA SET dsname
   The input or output dsname must be cataloged.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS850E
  PDS850E member IS BEING UPDATED BY username
   This member is being modified by the named user or JOB; this member
   is currently owned by the indicated user or JOB and its status can
   not be changed.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS851E
  PDS851E THIS DATA SET IS BEING UPDATED BY username
   This data set is being modified by the named user or JOB; this data
   set is currently owned by the indicated user or JOB and its status
   can not be changed.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS852E
  PDS852E member ALREADY EXISTS
   This member cannot be added to the data set; this member name is
   already in the data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS853E
  PDS853E MEMBER member NOT FOUND
   This member is not in the data set.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS854E
  PDS854E member IS AN INVALID MEMBER NAME
   This member name is invalid; member names may be entered in either
   character or hexadecimal mode.

   Character member names may be from one to eight bytes long with no
   imbedded blanks, commas, parentheses, colons or slashes.

   Hexadecimal member names may contain from one to sixteen hexadecimal
   digits delimited by x' and '.  Note: x'd7c4e2f9' and PDS9 are
   entirely equivalent; also, x'333' and x'0333' are equivalent.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS855E
  PDS855E THE DATA SET DIRECTORY IS FULL AND MEMBERS CANNOT BE ADDED
   The directory is full; if you are currently trying to save a member
   using an editor, you may wish to save it in another data set.
   This message can also be issued if trying to add ISPF statistics
   to a member.

   This type of problem can be resolved in several ways:
     1.  clean up the directory of the data set by deleting obsolete
         members and make room for new member names.
     2.  split the data set into two (or more) data sets.
     3.  reallocate the data set (with a larger directory) and copy
         all old members to the replacement data set.
     4.  expand the directory with FIXPDS.  For example, enter
         FIXPDS EXPAND(30)  to add 30 directory blocks.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS856E
  PDS856E STOW ERROR, R15=nn, R0=hexvalue
   A update to a member failed with the indicated return code and
   reason code.  STOW return codes and reason codes are as follows:
     R15=04, R0=00000000   The directory already contains
                           the specified new name.
     R15=08, R0=00000000   The specified name could not be
                           found.
     R15=12, R0=00000000   No space left in the directory.
                           The entry could not be added,
                           replaced, or changed.
     R15=12, R0=00000001   For a PDSE, an attempt by STOW to
                           create a member with no records
                           failed because the number of
                           members would have exceeded the
                           maximum allowed.
     R15=16, R0=00000001   A permanent input or output error
                           was detected. Control is not
                           given to the error analysis
                           (SYNAD) routine.
     R15=16, R0=00000002   A permanent I/O error occurred
                           while attempting to write the EOF
                           mark after the member. Control is
                           not given to the error analysis
                           (SYNAD) routine.
     R15=16, R0=00000004   An error occurred while writing
                           data buffered in system buffers.
                           Control is not given to the error
                           analysis (SYNAD) routine.
     R15=16, R0=00000737   The system found an I/O error
                           while trying to read or write the
                           VTOC.
     R15=16, R0=00000B37   The system was unable to update
                           the VTOC.
     R15=16, R0=00000D37   Either no secondary space is
                           available or a DADSM user exit
                           error occurred. The error
                           occurred when trying to write an
                           EOF; all primary space used.
     R15=16, R0=00000E37   Either no secondary space is
                           available or a DADSM user exit
                           error occurred.
     R15=20, R0=00000000   The data control block is not open, it is
                           open for input or a DEB error occurred.
     R15=20, R0=00000004   The initialize function was specified for
                           a PDSE with DISP=SHR.
     R15=24, R0=00000000   Insufficient virtual storage was available
                           to perform the STOW function.
     R15=28, R0=00000000   The DCB defined a PDS; initialize only
                           supports PDSEs.
     R15=28, R0=00000000   STOW add or replace was attempted for
                           a member of a PDSE with load modules
                           (a Program Management Library).
     R15=36, R0=00000000   For a PDSE, the alias has an invalid TTR.
     R15=40, R0=00000000   For a PDSE, user-supplied TTRs are in the
                           user field of the directory entry.
     R15=48, R0=00000004   For a PDSE, the add failed because you
                           cannot add a primary member name while the
                           data set is open for update.
     R15=48, R0=00000008   For a PDSE, the replace failed because you
                           cannot replace a primary member name while
                           the data set is open for update and the
                           specified member name does not exist.
     R15=48, R0=0000000C   For a PDSE, the replace failed because you
                           cannot replace an alias name if it is the
                           same name as the primary member.
     R15=48, R0=00000010   For a PDSE, the add or replace failed when
                           attempting to add or replace an alias, but
                           the member identified by the TTR did not
                           exist.
     R15=48, R0=00000014   For a PDSE, the replace failed when
                           attempting to replace a primary member
                           name while the data set is open for
                           update and the member name identified
                           an existing alias.
     R15=48, R0=00000018   For a PDSE, the replace failed when
                           attempting to replace a primary member
                           name while the data set is open for update,
                           but the input TTR has not been defined
                           for that member.
     R15=52, R0=00000000   For a PDSE, one or more members were placed
                           in a pending delete state; the space taken
                           by those modules is not immediately
                           available for reuse.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS858E
  PDS858E NO DEFAULT MEMBER HAS BEEN ESTABLISHED
   A command such as  MEMBERS *  may only be entered after a default
   member name or member group has been established.  To establish a
   default member name or member group, you could use any of the
   following example statements:
        MEMBERS abc        member ABC
        MEMBERS (abc,xyz)  members ABC and XYZ
        MEMBERS :          all members -- X'00' through X'FF'
        MEMBERS dd:        members from DD... through X'FF'
        MEMBERS :bb        members from X'00' through BB...
        MEMBERS aa:bb      members between AA... and BB...
        MEMBERS (abc,d:)   member ABC and those from D... through X'FF'
        MEMBERS aa/        member names containing AA anywhere
        MEMBERS /bb        member names containing BB anywhere
        MEMBERS aa/bb      member names containing AA and BB
        MEMBERS (aa/,bb/)  member names containing AA or BB
        MEMBERS aa*        members with names AA...
        MEMBERS *bb        members with names containing BB anywhere
        MEMBERS aa*bb      members with names AA... and BB elsewhere
        MEMBERS (aa*,bb/)  members with names AA... or with BB anywhere

   Note: after a command such as one of the above has been entered,
   the following example statement refers to the default member name
   or member group:
        MEMBERS *          members in the default member name or group

   You can determine if a member group is current by examining the
   normal -PDS86- prompt message (PDS300A).  If MEM= is followed by
   a blank, no default member group has been established.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS859E
  PDS859E COMMAND name WAS NOT FOUND
   The named TSO command is required to support a PDS subcommand but it
   could not be found in the LINKLIST, your STEPLIB/ISPLLIB dataset or
   in the LPALIB.  Ensure that the required TSO command is available
   from one of the above sources before trying this subcommand again.

   This message can also be issued if a program being executed by
   -PDS86- via IKJEFTSR is not found in the MVS load module search
   path.  Examples of these programs are listed below.

   AMBLIST     ASMDASM     CPKMAP      COBANAL     DELINKI     DISASM
   DISKMAP     EQALMA      FDRCPK      GIMCPTS     IEBCOPY     IEBPDSE
   ISRSUPC     MXI         OFFLOAD     PDSLOAD     PDSMATCH    RESOURCE

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS860E
  PDS860E MEMBER IS AN ALIAS BUT NO MAIN MEMBER EXISTS
   This alias member has no associated main member.  This type of
   alias member is termed an orphan.

   This type of error is usually caused by not linking a main module
   and all of its aliases; the main module and its aliases should be
   reinstalled.

   To correct this problem with -PDS86-, issue the following
   subcommands for each identified orphan member:
     DELETE memberz
        (where memberz is the orphan member)
     ALIAS memberx memberz
        (where memberx is the correct main member)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS861E
  PDS861E THE ALIAS DIRECTORY ENTRY NOTES THE MAIN MEMBER NAME AS membr
   This message displays the name of the main member for this alias
   member as noted by its directory entry.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS862E
  PDS862E ERROR IN GQSCAN DATA
   This message indicates that ENQUEUE check parameters are incorrect;
   this is probably a program error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS864E
  PDS864E member IS AN APPARENT ALIAS FOR THIS MEMBER
   This member and the identified member both point to the same TTR
   address but neither has its alias bit set.

   These members are called apparent aliases and the actual owner
   of the member data can not be determined.

   One cause of this type of problem is an open/close/EOV situation
   (OZ44857 -- also documented in II00587) in which opening a
   partitioned data set causes the FORMAT1 DSCB to be rewritten; If
   this occurs while the data set is open for update or output, then
   the DS1LSTAR (last TTR pointer) can be invalidated.

   Normally, this situation should only occur on the first access of
   each day; however, some user modifications cause the DSCB to be
   updated more often and increase the exposure for duplicate TTR's
   and overlaid members.

   If the data set is copied or compressed, IEBCOPY will hide this
   error by creating two identical members during the copy.

   To correct this problem with -PDS86-, determine which apparent
   alias member name should correspond to the member data and issue
   the following subcommand:
     DELETE memberx
        (where memberx is the non-corresponding alias name)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS865E
  PDS865E THE IEBCOPY OUTPUT CAN NOT BE OPENED
   A compress or copy has been performed but a summary of IEBCOPY's
   messages cannot be provided since the message data set can not be
   opened.

   This is probably a program error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS870E
  PDS870E PDS DIRECTORIES MUST BE CONTAINED IN ONE EXTENT
   The directory of a partitioned data set must be totally contained in
   the first extent of the data set.

   From VERIFY, it indicates that your data set was allocated with a
   invalid directory and the data set should not be used as it may
   fail in program load or when used by IEBCOPY.

   From FIXPDS, it indicates that your data set will require more than
   its first extent to contain the expanded (or reset) directory.
   This is not permitted as it would create an invalid data set
   directory.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS871E
  PDS871E A TTR FOR THIS MEMBER WAS NOT FOUND
   Due to an error condition, a record pointed by this member's
   directory entry could not be found in this load module.

   This message may be due to data set or equipment errors.  A VERIFY
   subcommand may provide more information.

   If this error occurs in FIXPDS, the subcommand is terminated before
   changing the member in error.  Any previously moved members and
   their associated aliases are fully updated, however.

   If this problem is due to data set errors, the data set may be
   damaged and should be recovered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS872E
  PDS872E THIS MEMBER IS AFTER THE DATA SET END-OF-FILE
   This member's data follows the end of data set marker (DS1LSTAR)
   for this data set.  To ensure that this diagnostic message is
   valid, -PDS86- reopens the data set from the EXCP routine in case
   another user has saved into the data set.

   This message indicates that your data set contains one or more
   invalid TTR pointers and that the data set has been damaged;
   the data set should be recovered in some fashion.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS873E
  PDS873E TTR IS BEYOND THE USED PORTION OF THE DATA SET
   A TTR pointer in this member's directory has a value which exceeds
   the end of data marker for the data set.

   This type of error is unusual; it indicates that your data set
   contains one or more invalid TTR pointers and that the data set has
   been damaged -- the data set should be recovered in some fashion.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS874E
  PDS874E TSO COMMAND NAME IS INVALID
   TSO SCAN service indicates that this TSO command name is invalid.

   Valid TSO command names follow these rules:
     1.  The TSO command name should be from one to eight bytes long.
     2.  The first character of the TSO command name must be a
         alphabetic or national character.
     3.  Any additional characters should be alphabetic, numeric
         or national characters.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS875E
  PDS875E THIS DATA SET HAS NO DIRECTORY BLOCKS
   This is a null data set -- it contains no tracks and consequently,
   no directory blocks and no members.

   When the data set takes an extent, it will receive actual disk
   tracks and directory blocks.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS876E
  PDS876E A DIRECTORY RECORD HAS AN INCORRECT LENGTH (NOT 256 BYTES)
   This data set has an invalid directory block.  Directory blocks
   should be 256 characters long and each block should contain an
   eight byte key.

   This type of error usually indicates that your data set has been
   written over and the data set should be recovered in some fashion.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS877E
  PDS877E INVALID SUBCOMMAND NAME
   TSO SCAN service indicates that this subcommand name is invalid.

   Valid subcommand names follow these rules:
     1.  The subcommand name should be from one to eight bytes long.
     2.  The first character of the subcommand name must be a
         alphabetic or national character.
     3.  Any additional characters should be alphabetic, numeric
         or national characters.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS879E
  PDS879E RESIDENCE MODE 64 AND ADDRESSING MODE xxx ARE INCOMPATIBLE
   Residence mode 64 and an addressing mode of either 24, 31, or ANY
   are incompatible; this is an invalid combination of linkage editor
   attributes.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS880E
  PDS880E RESIDENCE MODE ANY AND ADDRESSING MODE xxx ARE INCOMPATIBLE
   Residence mode ANY and an addressing mode of either 24 or ANY are
   incompatible; this is an invalid combination of linkage editor
   attributes.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS881E
  PDS881E REENTRANT ATTRIBUTE CONFLICTS WITH NOT REUSABLE
   A reentrant attribute is incompatible with a not reusable attribute;
   this is an invalid combination of linkage editor attributes.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS882E
  PDS882E TEST ATTRIBUTE CONFLICTS WITH NOT EDIT
   A TEST attribute is incompatible with a NOT EDIT attribute;
   this is an invalid combination of linkage editor attributes.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS883E
  PDS883E REUSABLE ATTRIBUTE CONFLICTS WITH SCATTER
   A reusable attribute is incompatible with a scatter load attribute;
   this is an invalid combination of linkage editor attributes.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS884E
  PDS884E OVERLAY ATTRIBUTE CONFLICTS WITH xxx
   This message documents an incompatible combination of the overlay
   attribute and another linkage editor attribute as follows:
     1.  Overlay and reentrant are incompatible.
     2.  Overlay and reusable are incompatible.
     3.  Overlay and scatter load are incompatible.
     4.  Overlay and RMODE ANY are incompatible.
     5.  Overlay and AMODE 31 are incompatible.
     6.  Overlay and AMODE 64 are incompatible.
     7.  Overlay and AMODE ANY are incompatible.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS885E
  PDS885E MORE THAN ONE OUTPUT MEMBER WOULD BE NAMED memname
   For a COPY or REPRO operation with the AS or TO keyword, multiple
   members can map to the same output member name.

   For example, if the member names A03BY, BONBY and CONCY are input
   and AS(ZZZ) is in effect, only the output member names ZZZBY and
   ZZZCY would result.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS892E
  PDS892E READ MULTIPLE FAILED AT TTR=ttttrr
   -PDS86- has an input mode called "read multiple" which can read
   an entire track of disk data at a time.  A read multiple can fail
   for any of several reasons:
     I/O error     - an I/O error is on the current track
     Invalid addr  - the disk TTR address provided is invalid
     Not capable   - the device can not perform a read multiple CCW
     Track overrun - too much data is recorded on a physical track

   After read multiple fails, -PDS86- uses its alternate double
   buffering input mode for the remainder of the subcommand.  With
   the next subcommand, read multiple is attempted again.

   If many subcommands issue failure messages for read multiple,
   consider changing the mode for input buffering to double with
   the following subcommand:
     CONTROL DOUBLE

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS893E
  PDS893E READ MULTIPLE ERROR -- NEXT TTR (ttttrr) IS INCORRECT
   -PDS86- has an input mode called "read multiple" which can read
   an entire track of disk data at a time.  The last read command
   failed to obtain a new TTR address for the next track even though
   no error condition was presented to the program.

   After read multiple fails, -PDS86- uses its alternate double
   buffering input mode for the remainder of the subcommand.  With
   the next subcommand, read multiple is attempted again.

   If many subcommands issue failure messages for read multiple,
   consider changing the mode for input buffering to double with
   the following subcommand:
     CONTROL DOUBLE

   This error is probably due to equipment errors; notify your
   hardware vendor of a possible problem with DASD "read multiple"
   on the device currently allocated.

   For STC 8880 controllers, ensure that EC 63096 is applied; for STC
   8890 cache controllers, ensure that EC 62974 is applied.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS900E
  PDS900E THE SOURCE AND TARGET DATA SETS MUST DIFFER
   The copy programs supported do not allow you to copy members
   into the input data set;  when the input and output data sets
   are identical, a data set compress would be attempted.

   You can perform this type of function with the REPRO subcommand
   by using the AS or TO keyword.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS910E
  PDS910E TSO COMMAND name IS NOT ALLOWED
   You are not authorized to use this TSO command.  Contact your
   systems support staff if this restriction causes a problem.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS920E
  PDS920E SUBCOMMAND name IS NOT ALLOWED FOR THIS DATA SET
   You are not authorized to use this subcommand.  Contact your
   systems support staff if this restriction causes a problem.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS930E
  PDS930E name IS AN INVALID SUBCOMMAND ABBREVIATION
   This subcommand name is not allowed.  You must enter additional
   characters to create a valid subcommand name.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS932E
  PDS932E OLD ALLOCATION IS REQUIRED FOR THIS FUNCTION
   For a PDSE data set, FIXPDS RESET requires OLD allocation.  This
   function uses a STOW DCB,,I form to reinitialize the data set.

   If you can not get OLD allocation to this data set, you can also
   delete all members by entering  DELETE :

   Note: Global variable &STOWI default is 'YES' which indicates
         APAR OA13224 "DISP=SHR FOR STOW INIT" is on the system.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS973E
  PDS973E NO DEFAULT OUTPUT DATA SET NAME HAS BEEN ESTABLISHED
   The default output data set name for the COPY subcommand has not
   yet been established.  Until a COPY command is entered with an
   actual data set name as output, the * notation for the default
   output data set name may not be used.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS980E
  PDS980E IEBCOPY WAS INTERRUPTED
   A compress or copy operation has been interrupted by an attention
   or ABEND.

   For a copy operation, this usually means that the output was only
   partially completed; for a compress operation, note the following:

   Compress is performed in-place on your data set; since IEBCOPY did
   not complete its operation, the data set may be destroyed.

   Attentions received during a compress operation cannot be ignored
   as IKJEFTSR is being used to gain authorization for IEBCOPY.

   It is suggested that you do not press the attention key during a
   compress or that you use some other method of gaining authorization;
   contact your system support staff for more information.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS982E
  PDS982E SEQUENTIAL INPUT MUST BE COPIED TO A SPECIFIC OUTPUT MEMBER
   Sequential input must be copied to a single output member; use
   syntax such as the following: PDS.DATA(membername).

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS983E
  PDS983E MAXGENS VALUE IS > 2,000,000,000
   The MAXGENS value has exceeded the largest allowed value.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS984E
  PDS984E MAXGENS VALUE EXCEEDS THE SMS LIMIT
   The MAXGENS value has exceeded the SMS MAXGENS_LIMIT.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS990E
  PDS990E EXTENT INITIALIZATION READ FAILED
   The first read for an extent of this data set failed.  This type
   of problem is unusual unless your directory contains invalid TTR
   pointers.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS991E
  PDS991E PERMANENT I/O ERROR AT TTR=hexttr
   An uncorrectable I/O error was encountered at the displayed TTR
   address.

   This error may be due to data set or equipment errors.  A VERIFY
   subcommand may provide more information.

   Data set recovery will be required if this is a data set error.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS993E
  PDS993E jobname,stepname,ucb,D,ddname,READ/WRITE,error message,
  hexbbcchhr,BPAM S
  hexttr,relrec#num,smsretur,smsreasn

   An uncorrectable I/O error was encountered at the displayed disk
   address.  The error message is generated by a SYNAD recovery
   routine for PDSE datasets.

   In this message, data will be filled in as follows:
     ucb             is the UCB address of the active device
     D               means direct access
     ddname          is the DDNAME of the data set
     READ/WRITE      is the function being performed
     error message   is a short description of the problem encountered
     hexbbcchhr      is the actual address of the error in hexadecimal
     BPAM S          indicates the data set was a PDSE
     hexttr          is the TTR (token address) of the member in error.
     relrec#num      is the relative record number of the error.  Note:
                     add 1,048,576 to get the actual TTR of the record.
     smsretur        is the SMS return code.
     smsreasn        is the SMS reason code.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS996E
  PDS996E subcommand IS NOT SUPPORTED FOR PROGRAM OBJECTS
   The following subcommands and functions are not yet supported for
   program objects (load members in PDSE data sets):
     ALIAS   -  assign an alias to a program object.
     ATTRIB  -  update module attributes; ATTRIB can display
                attributes of program objects, however.
     REPLACE -  update a program object.
     REPRO   -  reproduce a program object.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS997E
  PDS997E DIFFERENT VERSION OF PDS REINVOKED
   When ISPF services are requested within PDS and it has been
   invoked outside of ISPF (i.e. "READY" mode), PDS reinvokes itself
   recursively as an ISPF dialog to use ISPF services.

   This error indicates that a different version of -PDS86- was
   entered on the recursive entry.  This can happen if you invoke
   -PDS86- from either LINKLIST, LPALIB or STEPLIB and you have
   a different copy of -PDS86- in your ISPLLIB data set.

   This error is detected by comparing the assembly date and time of
   the calling version of PDS with the corresponding values from the
   invoked version of PDS.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS998E
  PDS998E ABEND Sxxx LOADING THIS MODULE
   The displayed ABEND code was received while loading this module.

   If you have your user profile set to WTPMSG as in the TSO command,
   PROFILE WTPMSG, you should have also first received an IEA703I
   message with the same ABEND code and a possible return code.

   In the following table of common messages, the ABEND identifier
   from the PDS998E message and the first part of the associated
   IEA703I message or a CSV011I message with a return code or a
   CSV016I message are listed with a short error description:

     ABEND  ASSOCIATED MSG   DESCRIPTION
     -----  --------------   -----------
     S106   IEA703I 106-C    Insufficient storage to load the module
     S106   IEA703I 106-D    Invalid record type in load module
     S106   IEA703I 106-E    Invalid TTR address in load module
     S106   IEA703I 106-F    Uncorrectable I/O error in load module
     S306   IEA703I 306-8    Uncorrectable I/O error searching linklist
     S706   IEA703I 706      "Not Executable" module

     S106   CSV011I RC=0B    FETCH routine error
     S106   CSV011I RC=0C    Insufficient storage to load the module
     S106   CSV011I RC=0D    Invalid record type in load module
     S106   CSV011I RC=0E    Invalid TTR address in load module
     S106   CSV011I RC=0F    Uncorrectable I/O error in load module
     S106   CSV011I RC=10    Relocation error in load module
     S706   CSV016I RC=04    "Not Executable" module

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=PDS999E
  PDS999E ABEND Sxxx Unnnn AT hexvalue IN PROGRAM progname
   This ABEND was noted during -PDS86- execution. The various
   fields are as follows:
     Sxxx     - the system ABEND code
     Unnnn    - the user ABEND code
     hexvalue - if signed, an offset from the routine entry point;
                otherwise, the address of the abending instruction.
     progname - the name of the abending program (if available)
                a. PDSMAIN - ABEND in the PDS mainline
                b. PARSE   - ABEND in the PARSE interface
                c. ISPDSPY - ABEND in the ISPF Dialog routines
                d. VSUBCMD - ABEND in the subcommand check
                e. VTSOCMD - ABEND in the TSO command check
                f. subname - ABEND in the subroutine identified below:
                     |
                     v
                   ALIAS    AMBLIST  ATTRIB   BROWSE   CHANGE
                   CLEAR    COBANAL  COMPARE  COMPRESS CONTROL
                   COPY     CPKMAP   DELETE   DELINK   DISASM
                   DISPLAY  DSNAMES  EXEC     FIXPDS   HELP
                   HISTORY  IF       LCS      LIST     LMA
                   LOAD     MAP      MATCH    MXIBAT   OFFLOAD
                   OUTCOPY  PRINTOFF PTSEXP   RENAME   REPRO
                   RESTORE  RX       SMPGEN   SRCHFOR  SUBLIST
                   TIME     TSO      TSOEDIT  USAGE    FAMS
                   VERIFY   VPDSE    XMIT

   Note: These control sections contain other subcommand processing.

   BROWSE  (EDIT, ISPF, ISPMODE, MEMLIST, and VIEW)
   DELETE  (MEMBERS and SUBMIT)
   TSOEDIT (FSE)
   LIST    (DIRENTRY, FIND, and REPLACE)
   DISPLAY (PATTERN)

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=IEB19CI
  IEB19CI MEMBER member {COPIED | LOADED}, text

   Explanation:  COPYMOD has been specified. The member is a load module
   which has been copied to the output data set with no change in block
   size or content. The link edit attributes of the member make it
   ineligible for processing by COPYMOD.

   In the message text:

   member    The specified member.

   text      One of the following:

             o   AS IS THEN ALTERED, MODULE IS PAGE-ALIGNED

                 Note: copied without reblocking and the functions of
                 ALTERMOD are performed against the copy.

             o   AS IS WITHOUT REBLOCKING, FORMAT IS SCATTER-LOAD

             o   AS IS WITHOUT REBLOCKING, MODULE IS NON-EDITABLE

   The severity is 4.

   System action

   The member was copied unaltered.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=IEB1163E
  IEB1163E SYSTEM ABEND code OCCURRED, TERMINATING IEBCOPY

   Explanation:  When one of the system ABENDs, S213, S913, S80A, S878,
   or SD37 occurs, the ESTAE recovery routine issues this message.

   System Action:  The copy operation terminates after freeing all
   obtained storage.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=IEC999I
  IEC999I IFG0TC0A,IFG0TC0B,TRIDJK  ,ISPFPROC,DEB ADDR=9AF02C-1,DSN =
  SYS20187.T114334.RA000.TRIDJK.R0103544

   Explanation:    The failure occurred during task close.  The most
                   common problem is the program modifying or freeing
                   the storage that contains an open DCB.  A -1 after
                   the DEB address means the open DCB or ACB storage
                   is not accessible.

                   The SYSPRINT DCB was left open after a Dialog
                   (ISPMODE) checkpoint END or ATTN interrupt while
                   running the PDS command processor.

   Action:         Do not interrupt subcommands that allocate
                   SYSPRINT.

                   The AMBLIST, COBANAL, CPKMAP, DISASM, DLINK,
                   LOAD, MATCH, MXIBAT, OFFLOAD, PTSEXP, and VPDSE
                   subcommands allocate SYSPRINT.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=IEBG00I
  IEBG00I DATA SET UTILITY - GENERATE
   IEBGENER header message.  COPY member/dataset to sequential file.

K V='CBTTAPE.ORG' P='PDS COMMAND' R='REL86' I=IEBG99I
  IEBG99I PROCESSING ENDED AT EOD
   IEBGENER trailer message.  COPY member/dataset to sequential file.

   OPERANDS -
  MSG(PDSxxx) - the message identifiers in the list identify the
                messages to be explained.

                For example, to have the PDS120I and the PDS999E
                messages explained in further detail, you should enter
                the following -PDS86- subcommand:
                HELP MSG MSG(PDS120,PDS999)
