         TITLE 'P D S  --  SMP GENERATION                    06/20/06'
***********************************************************************
***      SMPGEN SUBCOMMAND    ADDED BY JOHN KALINICH -- JUN., 2006  ***
***********************************************************************
*
SMPGEN   CSECT
         USING *,R8
         CLI   MSGDS2,C' '              OUTDSN() SPECIFIED?
         BE    SMP2100                  NO
         LA    R1,#SMPGEN               YES
         BAS   R2,SMP9990               FREE THIS DATA SET
         SPACE 2
*  ALLOCATE //SMPGEN OUTPUT DATA SET    OUTPUT SEQ DSN
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'SMPDDNAM+6,R3),SMPDDNAM       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SMPDDNAM+6(,R3)              START OF NEXT TEXT
         SPACE 1
SMP0000  DS    0H
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SMPDSNAM,R3),SMPDSNAM         SPECIFY DSNAME TEXT
*        MVC   6(44,R3),MSGDS2                   MOVE IN DSNAME TEXT
         SPACE 1
         LA    R2,5(,R3)                         WHERE TO STORE OUTPUT
         MVC   6(44,R3),BLANK128                 CLEAR DSNAME AREA
         MVC   DOUBLE(8),BLANK128                CLEAR MEMBER AREA
         LA    R1,MSGDS2                         DSN OR DSN(MBR)
         LA    R0,44
         CLI   0(R1),C''''                       QUOTED?
         BE    SMP0010                           YES, BRANCH
         SR    R14,R14                           NO
         L     R15,ADDRUPT                       START OF THE UPT
* 8-CHAR PREFIX                                               DRK JUL17
         TM    FLAGSZZ,TSO#8                     8-CHAR ID/PREFIX?    "
         BNO   SMP7PRE                           NO                   "
SMP8PRE  DS    0H                                YES                  "
         ICM   R14,B'0001',UPTPRF8L-UPT(R15)     PREFIX LENGTH ZERO?  "
         BZ    SMP0010+4                         YES, BRANCH          "
         MVC   6(8,R3),UPTPREF8-UPT(R15)         DSNAME PREFIX        "
         B     SMPCONT                                                "
SMP7PRE  DS    0H                                                     "
         ICM   R14,B'0001',UPTPREFL-UPT(R15)     PREFIX LENGTH ZERO?  "
         BZ    SMP0010+4                         YES, BRANCH          "
         MVC   6(7,R3),UPTPREFX-UPT(R15)         DSNAME PREFIX        "
SMPCONT  DS    0H                                             DRK JUL17
         AR    R2,R14                            POSITION FOR PERIOD
         SR    R0,R14
         MVI   1(R2),C'.'
         BCTR  R0,0
         BCTR  R1,0
         LA    R2,1(,R2)
         SPACE 1
SMP0010  LA    R1,1(,R1)                         NEXT INPUT BYTE
         LA    R2,1(,R2)                         NEXT OUTPUT BYTE
         CLI   0(R1),C''''                       END OF DSNAME?
         BE    SMP0050                           YES, BRANCH
         CLI   0(R1),C'('                        PARENTHESIS?
         BE    SMP0020                           YES, BRANCH
         CLI   0(R1),X'40'                       BLANK?
         BE    SMP0050                           YES, BRANCH
         MVC   0(1,R2),0(R1)                     MOVE IN ONE MORE BYTE
         BCT   R0,SMP0010
         B     SMP0050
         SPACE 1
SMP0020  MVC   DOUBLE(8),BLANK128                MEMBER NAME
         LA    R0,8
         LA    R2,DOUBLE-1
         SPACE 1
SMP0030  LA    R1,1(,R1)                         NEXT INPUT BYTE
         LA    R2,1(,R2)                         NEXT OUTPUT BYTE
         CLI   0(R1),C''''                       END OF DSNAME?
         BE    SMP0050                           YES, BRANCH
         CLI   0(R1),C')'                        PARENTHESIS?
         BE    SMP0050                           YES, BRANCH
         CLI   0(R1),X'40'                       BLANK?
         BE    SMP0050                           YES, BRANCH
         MVC   0(1,R2),0(R1)                     MOVE IN ONE MORE BYTE
         BCT   R0,SMP0030
SMP0050  DS    0H
         LA    R1,M99RBPTR                       RESET R1
         MVC   MSGDS2(44),6(R3)                  RESET THE DSNAME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SMPDSNAM+44(,R3)             START OF NEXT TEXT
SMP0060  DS    0H
         SPACE 1
* LOCATE OUTPUT DSNAME
         ST    R1,#SAVEREG              SAVE R1
         MVC   WORKTMP(44),MSGDS2       COPY DSNAME
         L     R14,LOCATE3
         LA    R15,WORKTMP              ACTUAL DSNAME
         SR    R0,R0                    NO CVOL VALUE
         LA    R1,MSGTEXT1              LOCATE WORK AREA
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         LOCATE PARMLIST
         LTR   15,15                    SUCCESSFUL LOCATE?
         BNZ   SMPNODSN                 NO, ERROR
         SPACE 1
* OBTAIN DSCB
         L     R14,OBTAIN3              OBTAIN FLAGS
         LA    R15,WORKTMP              ACTUAL DSNAME
         LA    R0,MSGTEXT1+6            VOLUME SERIAL (FROM LOCATE)
         LA    R1,MSGTEXT2              OUTPUT START ADDRESS
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         OBTAIN PARMLIST                GET THE FORMAT 1 DSCB
         LTR   R15,R15                  SUCCESSFUL?
         BZ    SMPDSCB                  YES, BRANCH
         M$MSG L830                     NO DSCB FOUND MESSAGE
         MVC   PMEMCURR,=XL4'00'        CURRENT MEMBER POINTER
         NI    FLAGSAA,FF-FMEM#MEM      TURN OFF MEMBER GROUP
         NI    FLAGSII,FF-FDIRGRP       NORMAL INPUT NOW
         B     NEWCMD
SMPNODSN MVI   MTLEN,44                 LENGTH OF INSERT
         MVC   INSERT#1(44),MSGDS2      DSNAME
         M$MSG L844$1
         MVC   PMEMCURR,=XL4'00'        CURRENT MEMBER POINTER
         NI    FLAGSAA,FF-FMEM#MEM      TURN OFF MEMBER GROUP
         NI    FLAGSII,FF-FDIRGRP       NORMAL INPUT NOW
         B     NEWCMD
SMPDSCB  DS    0H
         CLI   MSGTEXT2+X'26',X'02'     DSORG PARTITIONED?
         BNE   SMP0065                  NO
         CLI   DOUBLE,C' '              YES, MEMBER SPECIFIED?
         BNE   SMP0065                       YES
         MVC   DOUBLE(8),$SMPGEN             NO, GENERATE NAME
SMP0065  DS    0H
         SPACE 1
         L     R1,#SAVEREG                       RESTORE R1
         CLI   DOUBLE,C' '                       MEMBER NAME?
         BE    SMP0070                           NO
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SMPDSMBR,R3),SMPDSMBR         SPECIFY MEMBER TEXT
         MVC   6(8,R3),DOUBLE                    MOVE IN MEMBER TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SMPDSMBR+8(,R3)              START OF NEXT TEXT
SMP0070  DS    0H
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SMPALLOC,R3),SMPALLOC         SPECIFY DISP TEXT
         CLI   #SMPDISP,1                        DISP=OLD?    DRK FEB14
         BNE   *+4+4                             NO                   "
         MVI   6(R3),X'01'                       YES, OVERRIDE SHR    "
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SMPALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SMPNORM,R3),SMPNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SMPNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SMPANORM,R3),SMPANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   SMPERROR                      NO, BRANCH
         B     SMP2100
         SPACE 1
SMPERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    SMP2100                    NO, BRANCH          DRK FEB14
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         SPACE 2
SMP2100  MVC   MEMNAME(12),DIRNAME   ENSURE MEMBER NAME IS PRESENT
         MVC   #DELSAVE(1),FLAGSAA   SAVE FLAGSAA
         TM    FLAGSAA,FMEM#MEM      MEMBER GROUP?
         BO    SMP2200               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    SMP2110               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    SMP2200               YES, BRANCH
SMP2110  TM    #SMPALI,#SMPASS2      ASSOCIATES TOO?
         BO    SMP2200               YES, BRANCH
         SPACE 1
SMP2120  DS    0H
         TM    #SMPALI,#SMPASS2+2    ALIAS/NOALIAS SPECIFIED?
         BM    SMP2130               YES
*        OI    #SMPALI,&SMPGALI      USE THE DEFAULT
         OI    #SMPALI,2             USE THE DEFAULT
         TM    #SMPALI,#SMPASS2      ASSOCIATES TOO?
         BO    SMP2200               YES
         SPACE 3
SMP2130  DS    0H
         OI    #SMPALI,#SMPONE       ONLY A SINGLE MEMBER/DATA SET
         LA    R4,DDNAMEH            HOLD FOR THIS SUBCOMMAND
         MVC   0(8,R4),DIRNAME
         MVC   8(3,R4),DIRTTR
         ST    R4,#MEMPTR
         LA    R4,16(,R4)            POSITION FOR ONE ENTRY
         B     SMP2900
SMP2200  OI    FLAGSII,FDIRGRP       SIMULATE MEMBER GROUP INPUT
         TM    #SMPALI,#SMPASS2+2    ALIAS/NOALIAS SPECIFIED?
         BM    *+8                   YES
*        OI    #SMPALI,&SMPGALI      NO, USE THE DEFAULT
         OI    #SMPALI,2             NO, USE THE DEFAULT
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUPS NOW
         MVI   SUBPOOLT,21           SUBPOOL 21 DATA
         LA    R5,256/2              256 MEMBERS INITIALLY
         SPACE 1
SMP2210  SLL   R5,1                  MEMBERS*2 FOR EACH LOOP
         LR    R3,R5
         LR    R0,R5
         SLL   R0,4                  TABLE SIZE=MEMBERS*16
         ICM   R0,B'1000',SUBPOOLT
         GETMAIN R,LV=(0)
         LR    R4,R1                 NEW TABLE ADDRESS
         ICM   R0,B'1111',#MEMPTR    ANY PREVIOUS MEMBERS?
         BNZ   SMP2220               YES, BRANCH
         ST    R4,#MEMPTR            INITIALIZE MEMBER BASE
         B     SMP2500
         SPACE 1
SMP2220  SRL   R3,1                  SECOND HALF OF TABLE (# MEMBERS)
         LR    R14,R4                NEW TABLE START ADDRESS
         LR    R15,R5
         SLL   R15,3                 OLD TABLE SIZE=MEMBERS*8
         LR    R2,R15                START OF NEW PART
         LR    R1,R15
         MVCL  R14,R0                PRESERVE THE OLD TABLE
         L     R1,#MEMPTR
         LR    R0,R2                 LENGTH TO FREE
         ICM   R0,B'1000',SUBPOOLT   SUBPOOL TO FREE
         FREEMAIN R,LV=(0),A=(1)
         ST    R4,#MEMPTR            START OF NEW TABLE
         AR    R4,R2                 WHERE TO ADD MEMBERS
         SPACE 3
SMP2300  TM    #SMPALI,#SMPASSP      ASSOCIATES PHASE?
         BO    SMP2320               YES, BRANCH
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    SMP2320               YES, BRANCH
         TM    #DELSAVE,FF-FMEM#MEM  MEMBER ALREADY ADDED?
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         BNO   SMP2500               NO, BRANCH
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    SMP2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BNO   SMP2605               NO, BRANCH
         L     R1,PMEMCURR           CURRENT LIST ELEMENT
         TM    0(R1),X'80'           ANOTHER ELEMENT?
         BNO   SMP2605               NO, END OF LIST
         MVC   FLAGSAA(1),4(R1)      NEXT DESCRIPTOR FLAGS
         MVC   LMEMBER1+1(19),5(R1)  LEN1, MEMBER1, LEN2, MEMBER2
         L     R1,0(,R1)             NEXT ELEMENT POINTER
         ST    R1,PMEMCURR
         MVC   #DELSAVE(1),FLAGSAA   SAVE THE MEMBER DESCRIPTOR
         MVC   MEMNAME(8),MEMBER1    FIRST MEMBER NAME
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUP
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    SMP2319               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         MVC   DIRNAME,MEMBER1       MOVE TO BLDLLIST
         SPACE 2
         BLDL  INDCB,BLDLLIST          LOCATE DIRECTORY ENTRY
         B     *+4(R15)                PROCESS RETURN CODE
         B     SMP2315                   00 - SUCCESSFUL
         B     SMP2310                   04 - MEMBER NOT FOUND
         B     IOERROR                   08 - I/O ERROR
         SPACE 1
SMP2310  MVC   INSERT#1(8),DIRNAME
         M$MSG L853$1                MSG - (MEMBER) NOT FOUND
         B     SMP2300
         SPACE 1
SMP2315  MVC   MEMNAME(12),DIRNAME   FIRST MEMBER NAME
         B     SMP2500
         SPACE 1
SMP2319  MVI   STARTTR+2,X'01'       REREAD THE DIRECTORY
         SPACE 1
SMP2320  BAS   R14,READDIR           GET NEXT DIRECTORY BLOCK
         B     SMP2600               END OF MEMBERS -- BRANCH
         SPACE 1
         TM    #SMPALI,#SMPASSP      ASSOCIATES PHASE?
         BO    SMP2400               YES, BRANCH
         SPACE 1
         BAS   R2,MFILTER            CHECK MEMBER NAMES
         B     SMP2600                 00 - SIMULATE DIRECTORY END
         B     SMP2300                 04 - MEMBER FAILED FILTERING
         B     SMP2500                 08 - MEMBER PASSED FILTERING
         SPACE 3
SMP2400  L     R1,#MEMPTR            START OF MEMBER LIST
         B     SMP2410+4             SKIP FIRST ADD
SMP2410  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   SMP2300               YES, IGNORE THIS ENTRY
         CLC   8(3,R1),MEMTTR        MATCHING TTR?
         BNE   SMP2410               NO, BRANCH
         SPACE 3
SMP2500  L     R1,#MEMPTR            START OF MEMBER LIST
         B     SMP2510+4             SKIP FIRST ADD
SMP2510  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   SMP2580               YES, ADD THIS ENTRY
         CLC   0(8,R1),MEMNAME       FIND MYSELF?
         BE    SMP2300               YES, IGNORE THIS ENTRY
         B     SMP2510               NO, CONTINUE SEARCHING
         SPACE 2
SMP2580  MVC   0(16,R4),MEMNAME      ADD TO THE TABLE
         LA    R4,16(,R4)            NEXT MEMBER POSITION
         S     R3,=F'1'              ANY MORE FIT?
         BNP   SMP2210               NO, BRANCH
         B     SMP2300               YES, GET NEXT MEMBER
         SPACE 3
SMP2600  TM    #SMPALI,#SMPASSP      ASSOCIATED MEMBERS?
         BO    SMP2605               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  ELEMENT HAS NOW BEEN ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    SMP2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    SMP2300               YES, BRANCH
         SPACE 1
SMP2605  TM    #SMPALI,#SMPASSP      ASSOCIATES PHASE STARTED?
         BO    SMP2700               YES, BRANCH
         TM    #SMPALI,#SMPASS2      ASSOCIATE MEMBERS TOO?
         BNO   SMP2700               NO, BRANCH
         OI    #SMPALI,#SMPASSP      YES, ASSOCIATES PHASE STARTED
         NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
         MVI   STARTTR+2,X'01'       TTR=000001 (START OF DIRECTORY)
         B     SMP2300               DO ANY ASSOCIATED MEMBERS
         SPACE 3
SMP2700  NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
         SPACE 3
SMP2900  DS    0H                    ONE MEMBER
         ST    R4,#MEMLAST           SAVE LAST MEMBER POINTER
*  OPEN SMPGEN DATA SET
SMP6000  DS    0H
         CLI   MSGDS2,C' '           OUTDSN() SPECIFIED?
         BE    SMP6010               NO
         MVC   BAMDCB(SMPDL),SMPDCB            GET MODEL DCB
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SMPGEN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    SMP6010                         YES, BRANCH
         LA    R1,SMP865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     SMP9950X                        EXIT
         SPACE 2
SMP6010  DS    0H
         L     R3,#MEMPTR                 FIRST MEMBER POINTER
         L     R4,#MEMLAST                LAST MEMBER POINTER
         SPACE 1
SMP6530  CR    R3,R4                      END OF MEMBER TABLE?
         BNL   SMP7000                    YES
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         LA    R5,MSGTEXT1+4
         CLC   #SMPMAC(4),##TYPE          MAC/SRC/MACUPD/SRCUPD?
         BNE   *+4+4                      YES, AT LEAST 1 SPECIFIED
         MVI   #SMPMAC,1                  NO, DEFAULT TO MAC
         MVC   0(5,R5),##MAC              ++MAC IS DEFAULT
         CLI   #SMPSRC,1                  ++SRC?
         BNE   SMP6530A                   NO
         MVC   0(5,R5),##SRC              YES
         B     SMP6540
SMP6530A DS    0H
         CLI   #SMPSRCU,1                 ++SRCUPD?
         BNE   SMP6530B                   NO
         MVC   0(8,R5),##SRCUPD           YES
         LA    R5,3(,R5)                  UPD
         B     SMP6540
SMP6530B DS    0H
         CLI   #SMPMACU,1                 ++MACUPD?
         BNE   SMP6532                    NO
         MVC   0(8,R5),##MACUPD           YES
         LA    R5,3(,R5)                  UPD
         B     SMP6540
SMP6532  DS    0H
         CLC   #SMPTYPE(8),BLANKS         TYPE SPECIFIED?
         BE    SMP6540                    NO
         MVC   0(2,R5),##MAC              YES, ++
         LA    R5,2(,R5)
         LA    R15,#SMPTYPE
         BAS   R1,SMP8000                 LITTLE SUB LOOP
         B     SMP6542
SMP6540  DS    0H
         LA    R5,5(,R5)                  ++MAC/SRC
SMP6542  DS    0H
         MVC   0(10,R5),##MBR             PARENS
         MVC   1(8,R5),0(R3)              MEMBER NAME
         LA    R5,11(,R5)
         SPACE 1
         CLC   #SMPDIST(8),BLANKS         DISTLIB?
         BNE   SMP6544                    YES
         MVC   #SMPDIST(7),##DIST         NO, DEFAULT TO DISTLIB
SMP6544  DS    0H
         MVC   0(8,R5),##DIST
         LA    R5,8(,R5)
         LA    R15,#SMPDIST
         BAS   R1,SMP8000                 LITTLE SUB LOOP
         MVI   0(R5),C')'
         LA    R5,2(,R5)
SMP6550  DS    0H
         CLC   #SMPSYSL(8),BLANKS         SYSLIB?
         BE    SMP6560                    NO
         MVC   0(7,R5),##SYSL             YES
         LA    R5,7(,R5)
         LA    R15,#SMPSYSL
         BAS   R1,SMP8000                 LITTLE SUB LOOP
         MVI   0(R5),C')'
         LA    R5,2(,R5)
SMP6560  DS    0H
         CLI   MSGDS2,C' '                OUTDSN() SPECIFIED?
         BE    SMP6560@                   NO
         PUT   BAMDCB,MSGTEXT1+4          YES, WRITE TO OUTDSN
         B     SMP6560@+4
SMP6560@ DS    0H
         M$ERRST MSGTEXT1                 OUTPUT LINE 1
         SPACE 1
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         LA    R5,MSGTEXT1+4+2
         CLC   #SMPTXL(8),BLANKS          TXLIB?
         BE    SMP6570                    NO
         MVC   0(6,R5),##TXL              YES
         CLC   #SMPTYPE(7),##PGM          TYPE(PROGRAM)?      DRK APR19
         BNE   *+4+6                      NO                  DRK APR19
         MVC   0(6,R5),##LKL              YES, LKLIB          DRK APR19
         LA    R5,6(,R5)
         LA    R15,#SMPTXL
         BAS   R1,SMP8000                 LITTLE SUB LOOP
         MVI   0(R5),C')'
         LA    R5,2(,R5)
SMP6570  DS    0H
         CLC   #SMPREL(8),BLANKS          RELFILE?
         BE    SMP6580                    NO
         MVC   0(8,R5),##RELF             YES
         LA    R5,8(,R5)
         LA    R15,#SMPREL
         BAS   R1,SMP8000                 LITTLE SUB LOOP
         MVI   0(R5),C')'
         LA    R5,2(,R5)
SMP6580  DS    0H
         CLI   #SMPSRC,1                  ++SRC?
         BE    SMP6580A                   YES
         CLI   #SMPSRCU,1                 ++SRCUPD?
         BNE   SMP6580B                   NO
         SPACE 1
SMP6580A DS    0H
         CLC   #SMPDMOD(8),BLANKS         DISTMOD?
         BE    SMP6580B                   NO
         MVC   0(8,R5),##DMOD             YES
         LA    R5,8(,R5)
         LA    R15,#SMPDMOD
         BAS   R1,SMP8000                 LITTLE SUB LOOP
         MVI   0(R5),C')'
         LA    R5,2(,R5)
         SPACE 1
SMP6580B DS    0H
         CLC   #SMPTXL(8),BLANKS          TXLIB?
         BNE   SMP6580C                   YES
         CLC   #SMPREL(8),BLANKS          RELFILE?
         BNE   SMP6580C                   YES
         MVI   #SMPINLN,1                 NO, DEFAULT TO INLINE
SMP6580C DS    0H
         CLC   #SMPSSI(8),BLANKS          SSI?
         BE    SMP6590                    NO
         CLI   #SMPSRC,1                  ++SRC?
         BE    SMP6580D                   YES
         CLI   #SMPMAC,1                  ++MAC?
         BE    SMP6580D                   YES
         B     SMP6590                    NO
SMP6580D DS    0H
         CLI   #SMPINLN,1                 INLINE?
         BNE   SMP6590                    NO
         MVC   0(4,R5),##SSI
         LA    R5,4(,R5)
         LA    R15,#SMPSSI
         BAS   R1,SMP8000                 LITTLE SUB LOOP
         MVI   0(R5),C')'
         LA    R5,2(,R5)
SMP6590  DS    0H
         MVI   0(R5),C'.'                 TERMINATOR
         CLI   MSGDS2,C' '                OUTDSN() SPECIFIED?
         BE    SMP6590@                   NO
         PUT   BAMDCB,MSGTEXT1+4          YES, WRITE TO OUTDSN
         B     SMP6590@+4
SMP6590@ DS    0H
         M$ERRST MSGTEXT1                 OUTPUT LINE 2
         SPACE 1
         CLI   #SMPSRCU,1                 ++SRCUPD?
         BE    SMP6590A                   YES
         CLI   #SMPMACU,1                 ++MACUPD?
         BE    SMP6590A                   YES
         CLI   #SMPINLN,1                 INLINE?
         BE    SMP6592                    YES
         B     SMP6595                    NO
SMP6590A DS    0H
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         LA    R5,MSGTEXT1+4
         MVC   0(15,R5),##CHANGE          ./ CHANGE NAME=
         MVC   15(8,R5),0(R3)             MEMBER
         CLI   MSGDS2,C' '                OUTDSN() SPECIFIED?
         BE    SMP6590B                   NO
         PUT   BAMDCB,MSGTEXT1+4          YES, WRITE TO OUTDSN
         B     SMP6590B+4
SMP6590B DS    0H
         M$ERRST MSGTEXT1                 OUTPUT ./ CHANGE
SMP6592  DS    0H
         BAS   R6,SMPINPUT                READ MEMBER
         SPACE 1
SMP6595  DS    0H
         LA    R3,16(,R3)                 NEXT MEMBER POSITION
         B     SMP6530                    LOOP
         SPACE 1
SMP7000  DS    0H
         B     SMP9950
         SPACE 1
* LITTLE SUBROUTINE
SMP8000  DS    0H                      LITTLE SUB
         LA    R14,8                   FIRST 8 CHARACTERS
SMP8010  CLI   0(R15),C' '             SPACE?
         BER   R1                      YES, DONE
         MVC   0(1,R5),0(R15)          MOVE TO OUTPUT
         LA    R5,1(,R5)               NEXT TO   CHARACTER
         LA    R15,1(,R15)             NEXT FROM CHARACTER
         BCT   R14,SMP8010             LOOP FOR 8
         BR    R1                      ALL DONE
         SPACE 3
* READ MEMBER SUBROUTINE
SMPINPUT DS    0H
         STM   R3,R5,#SMPREGS      SAVE REGISTERS
         MVC   MEMNAME(8),0(R3)    INITIALIZE THE MEMBER NAME
         XC    #MEMCNT(4),#MEMCNT  COUNT OF INPUT LOGICAL RECORDS
         MVC   STARTTR(3),8(R3)    NO, FIRST DISK ADDRESS TO READ
         MVC   DIRNAME(8),0(R3)    MEMBER NAME FOR PAM
         SPACE 3
SMP9076  L     R15,=V(EXCP)
         BASR  R14,R15
         B     *+4(R15)            PROCESS RETURN CODE
         B     SMP9080               00 - SUCCESSFUL READ
         B     SMP9090               04 - END OF MEMBER
         B     SMP9090               08 - END OF DATA SET
         B     SMP9090               12 - I/O ERROR
         SPACE 2
SMP9080  LR    R3,R0               BUFFER START
         L     R5,LS               BLOCK LENGTH
         SPACE 1
SMP9082  DS    0H
         AR    R5,R3               END OF BUFFER
         BCTR  R5,0                END OF BUFFER -1
         TM    FLAGSCC,RECFMF      RECFM=F?
         LH    R4,LRECL
         BO    SMP9088             YES, BRANCH
         TM    FLAGSCC,RECFMV      RECFM=V?
         BNO   SMP9088             NO, ASSUME RECFM=U
         AH    R3,=H'4'            SKIP BLOCK LENGTH WORD
         B     SMP9086
         SPACE 3
SMP9084  BXLE  R3,R4,SMP9086       GET THE NEXT LOGICAL RECORD
         B     SMP9076             END OF BLOCK, BRANCH
         SPACE 2
         CNOP  0,8                 ALIGN FOR LOOP
SMP9086  TM    FLAGSCC,RECFMV      RECFM=V?
         BNO   SMP9088             NO, BRANCH
         SR    R4,R4
         ICM   R4,B'0011',0(R3)    RECORD LENGTH +4
         LR    R14,R4              RECORD LENGTH +4
         AH    R3,=H'4'            SKIP RECORD LENGTH WORD
         SH    R4,=H'4'            RECORD LENGTH VALID?
         BNM   SMP9088             YES, BRANCH
         B     SMP9076             NO, SKIP BLOCK
         SPACE 2
SMP9088  L     R1,#MEMCNT          ANOTHER
         LA    R1,1(,R1)                  OUTPUT
         ST    R1,#MEMCNT                       RECORD
         LR    R15,R4              LRECL
         C     R15,##MSGLEN        132 OR LESS?
         BNH   *+4+4               YES
         L     R15,##MSGLEN        MAKE 132
         BCTR  R15,0               -1 FOR MOVE
         MVC   MSGTEXT1(136),MSGBL132  BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(*-*),0(R3)
         EX    R15,*-6             MOVE LOGICAL RECORD
         CLI   MSGDS2,C' '         OUTDSN() SPECIFIED?
         BE    SMP9088@            NO
         PUT   BAMDCB,MSGTEXT1+4   YES, WRITE TO OUTDSN
         B     SMP9088@+4
SMP9088@ DS    0H
         M$ERRST MSGTEXT1          OUTPUT LOGICAL RECORD
         B     SMP9084
         SPACE 2
SMP9090  OC    #MEMCNT+1(3),#MEMCNT+1  ANY RECORDS?
         BNZ   SMP9094                 YES, BRANCH
         LA    R1,L510                 NO, NULL MEMBER WARNING
         M$MSG (R1)
         SPACE 2
SMP9094  DS    0H
         LM    R3,R5,#SMPREGS      RESTORE REGS
         BR    R6                  RETURN TO CALLER
         SPACE 2
SMP9950  DS    0H
         CLI   MSGDS2,C' '              OUTDSN() SPECIFIED?
         BE    SMP9950X                 NO
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SMPGEN
         LA    R1,BAMDCB
         FREEPOOL (1)
         LA    R1,#SMPGEN                 SMPGEN DDNAME
         BAS   R2,SMP9990                 FREE THIS DATA SET
SMP9950X DS    0H
         B     NEWSTAX
         SPACE 2
SMP9990  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),SMPFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,SMPUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         DROP  R1,R3,R4,R5
         SPACE 2
*  SMPGEN CONSTANTS
         PRINT NOGEN
SMPDCB   DCB   DSORG=PS,DDNAME=SMPGEN,MACRF=(PM)
SMPDL    EQU   *-SMPDCB
         PRINT NOGEN
SMP865E  M$TX  'PDS865E THE SMPGEN OUTPUT CAN NOT BE OPENED'
         PRINT GEN
SMPDDNAM DC    X'000100010006',C'SMPGEN'         SMPGEN   DDNAME
SMPDSNAM DC    X'00020001002C'                   DSNAME
SMPDSMBR DC    X'000300010008'                   MEMBER
SMPALLOC DC    X'00040001000108'                 DISP=SHR
SMPNORM  DC    X'00050001000108'                 DISP=(,KEEP)
SMPANORM DC    X'00060001000108'                 DISP=(,,KEEP)
SMPUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
SMPFDDNA DC    X'000100010008'                   FOR FREE DDNAME
         SPACE 1
#SMPGEN  DC    CL8'SMPGEN'                       DDNAME
$SMPGEN  DC    CL8'$SMPGEN'                      DEFAULT MEMBER NAME
#SMPASSP EQU   X'80'            SMPGEN: ASSOCIATES PHASE
#SMPONE  EQU   X'10'            SMPGEN: A SINGLE MEMBER
#SMPASS2 EQU   X'01'            SMPGEN: SMPGEN ASSOCIATES TOO
##TYPE   DC    X'00000000'
##MSGLEN DC    F'132'
##MAC    DC    C'++MAC'
##SRC    DC    C'++SRC'
##MACUPD DC    C'++MACUPD'
##SRCUPD DC    C'++SRCUPD'
##UPD    DC    C'UPD'
##CHANGE DC    C'./ CHANGE NAME='
##SSI    DC    C'SSI('
##MBR    DC    C'(        )'
##DIST   DC    C'DISTLIB('
##SYSL   DC    C'SYSLIB('
##TXL    DC    C'TXLIB('
##LKL    DC    C'LKLIB('                                      DRK APR19
##DMOD   DC    C'DISTMOD('
##RELF   DC    C'RELFILE('
##PGM    DC    C'PROGRAM'                                     DRK APR19
         SPACE 3
OBTAIN3  CAMLST SEARCH,0,0,0
         ORG   OBTAIN3+4
         SPACE 3
LOCATE3  CAMLST NAME,0,,0
         ORG   LOCATE3+4
