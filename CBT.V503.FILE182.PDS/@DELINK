         TITLE 'P D S  --  DELINK INTERFACE                  12/30/05'
***********************************************************************
***      DELINK SUBCOMMAND   ADDED BY JOHN KALINICH -- DEC., 2005   ***
***********************************************************************
*
DELINK   CSECT
         USING *,R8
         LA    R1,L530          ASSUME A NON-PARTITIONED DATA SET
         TM    DSORG,DS1DSGPO   CORRECT?
         BNO   MSGNEW           YES, BRANCH
         LA    R1,L701          ASSUME NOT A LOAD LIBRARY
         TM    FLAGSCC,RECFMU   CORRECT?
         BNO   MSGNEW           YES, BRANCH
         LA    R1,L706$1        ASSUME A PDS-E DATA SET       DRK FEB21
         MVC   INSERT#1(8),##SUBCOM                           DRK FEB21
         TM    DS1SMSFG,DS1PDSE CORRECT?                      DRK FEB21
         BO    MSGNEW           YES, BRANCH                   DRK FEB21
         SPACE 1
*  FREE SYSIN, SYSLIB, SYSPRINT, SYSLIN, AND LINKCNTL DATASETS
         LA    R1,=CL8'SYSIN'           SYSIN DDNAME
         BAS   R2,DLI8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSLIB'          SYSLIB DDNAME
         BAS   R2,DLI8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,DLI8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSLIN'          SYSLIN DDNAME
         BAS   R2,DLI8580               FREE THIS DATA SET
         LA    R1,=CL8'LINKCNTL'        LINKCNTL DDNAME
         BAS   R2,DLI8580               FREE THIS DATA SET
*  ALLOCATE DELINK //SYSLIB DATA SET
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'DLIDDNLI+6,R3),DLIDDNLI       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DLIDDNLI+6(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DLIDSNAM,R3),DLIDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DLIDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DLIALLOC,R3),DLIALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DLIALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DLINORM,R3),DLINORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'DLINORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'DLIANORM,R3),DLIANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   DLIERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE DELINK //SYSIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),DLIDDNIN      SYSIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),DLISYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         MVC   #CMXDDIN(8),=CL8'SYSIN'    MOVE IN THE DDNAME
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   DLIERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE DELINK //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),DLIDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),DLISYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDPR(8),=CL8'SYSPRINT' MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   DLIERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE DELINK //SYSLIN DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(12),DLIDDNLN      SYSLIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),DLISYSLN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   DLIERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE DELINK //LINKCNTL DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),DLIDDNCN      LINKCNTL DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(20),DLISYSCN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   DLIERROR                   NO, BRANCH
         B     DLI6000
         SPACE 2
DLIERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    DLI8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     DLI8550
         SPACE 3
DLI6000  DS    0H
*  OPEN SYSIN DATA SET
         MVC   BAMDCB(DLIDL),DLIDCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),#CMXDDIN
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SYSIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    DLI6010                         YES, BRANCH
         LA    R1,DLI865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     DLI8550                         EXIT
         SPACE 3
*  OUTPUT SYSIN RECORDS
DLI6010  DS    0H
         MVC   MSGTEXT1(136),MSGBL132      CLEAR THE MESSAGE AREA
         L     R2,ADDRCBUF                 COMMAND STRING
         LH    R1,0(R2)                    TOTAL LENGTH
         LH    R3,2(R2)                    LENGTH OF COMMAND VERB
         SR    R1,R3                       MINUS COMMAND VERB
         S     R1,=F'4'                    MINUS LENGTH HALFWORDS
         BCTR  R1,0                        MACHINE LENGTH
         LA    R2,4(R2)                    SKIP LENGTH HALFWORDS
         AR    R2,R3                       PT AT DELINK ARG
         OC    0(10,R2),BLANK128           FOLD TO UPPER CASE
         LA    R15,MSGTEXT1+4
         MVC   0(7,R15),DLIMBR             MEMBER STATEMENT
         LA    R15,7(R15)                  POINT AFTER
         LA    R14,8                       LOOP LIMIT
DLI6015  DS    0H
         CLI   0(R2),C' '                  END OF MEMBER NAME?
         BE    DLI6020                     YES
         MVC   0(1,R15),0(R2)              MOVE CHARACTER
         LA    R2,1(R2)                    BUMP
         LA    R15,1(R15)                   UP
         BCT   R14,DLI6015
DLI6020  DS    0H
         MVC   0(2,R15),=C').'             TRAILER
         PUT   BAMDCB,MSGTEXT1+4           OUTPUT DELINK STATEMENT
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SYSIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  DLINULL,USADDR=(R7),REPLACE=NO,IBUF=0,                  X
               OBUF=(DLI484W,DLI484WL),MF=(E,STAXPARM)
         LA    R1,DLIPARM                 PARM=
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,DLIPGM               2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,DLI7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),DLIEFTSR       INVOKE IKJEFTSR?
         BNE   DLINLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
DLINLNK  BAS   R2,ATTACH                  DELINK
         SPACE 3
DLI7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE    DRK JAN07
         C     R2,=F'40'                  PROGRAM NOT FOUND?  DRK JAN07
         BNE   DLI8000                    NO                  DRK JAN07
         MVC   INSERT#1(8),DLIPGM         YES, ERROR          DRK JAN07
         M$MSG L859$1                     NOT FOUND MESSAGE   DRK JAN07
         B     DLI8550                                        DRK JAN07
         SPACE 1
DLI8000  MVC   BAMDCB(DLIDL),DLIDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSLIN'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSLIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    DLI8010                      YES, BRANCH
         LA    R1,DLI865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     DLI8550                      EXIT
         SPACE 3
*  PROCESS SYSLIN RECORDS
DLI8010  GET   BAMDCB                     GET OBJECT RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(80),0(R1)       ADD THE DELINK MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     DLI8010
         SPACE 3
DLI8500  DS    0H
         CLC   ##SUBCAL(8),DLIEFTSR       INVOKE IKJEFTSR?
         BNE   DLI8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1                DRK JUL11
         BL    DLI8540                    YES, VALID DELINK
         MVI   MTLEN+4,11                 NO, ISSUE MESSAGE
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA          DRK JAN06
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11                     DRK JAN07
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   DLI8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE            DRK NOV07
         SRDL  R0,12                    SHIFT USER ABEND TO R1DRK NOV07
         ST    R0,FULLWORD              SYSTEM ABEND CODE     DRK NOV07
         MVC   INSERT#2+4(7),=C' ABEND='                      DRK NOV07
         UNPK  INSERT#2+11(5),FULLWORD+2(3)                   DRK NOV07
         TR    INSERT#2+11(4),TRTABLE                         DRK NOV07
         MVI   INSERT#2+11,C'S'         S000                  DRK NOV07
         MVI   INSERT#2+11+4,X'40'                            DRK NOV07
         SPACE 1                                              DRK NOV07
         SRL   R1,20                    USER ABEND            DRK NOV07
         CVD   R1,DOUBLE                                      DRK NOV07
         UNPK  DOUBLE(5),DOUBLE+5(3)                          DRK NOV07
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE        DRK NOV07
         MVI   INSERT#2+11+5,C'U'       U0000                 DRK NOV07
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND       DRK NOV07
         SPACE 1
DLI8530  DS    0H
         M$MSG L171$2
DLI8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SYSPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
DLI8550  M$ERRST MSGBLANK
         LA    R1,#CMXDDPR                SYSPRINT DDNAME
         BAS   R2,DLI8580                 FREE THIS DATA SET
         LA    R1,#CMXDDIN                SYSIN DDNAME
         BAS   R2,DLI8580                 FREE THIS DATA SET
         LA    R1,=CL8'LINKCNTL'          LINKCNTL DDNAME
         BAS   R2,DLI8580                 FREE THIS DATA SET
         LA    R1,=CL8'SYSLIB'            SYSLIB DDNAME
         BAS   R2,DLI8580                 FREE THIS DATA SET
         LA    R1,=CL8'SYSLIN'            SYSLIN DDNAME
         BAS   R2,DLI8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
DLI8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),DLIFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,DLIUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
DLINULL  BR    R14
         SPACE 2
*  DELINK CONSTANTS
         PRINT NOGEN
DLIDCB   DCB   DSORG=PS,DDNAME=DLI,MACRF=(GL,PM),EODAD=DLI8500
DLIDL    EQU   *-DLIDCB
         PRINT NOGEN
DLI484W  DC    C'PDS484W DELINK SHOULD NOT BE INTERRUPTED'
DLI484WL EQU   *-DLI484W
DLI865E  M$TX  'PDS865E THE DELINK OUTPUT CAN NOT BE OPENED'
         PRINT GEN
DLIEFTSR DC    CL8'IKJEFTSR'
DLIPGM   DC    CL8'DELINKI'                      DELINKER, CBT 90
DLIPARM  DC    AL2(DLIPARML-2)                   PARM LENGTH
         DC    C'ALL31(OFF),STACK(,,BELOW)/'     LE PARM      DRK JAN06
DLIPARML EQU   *-DLIPARM
DLIDDNLI DC    X'000100010006',C'SYSLIB'         SYSLIB   DDNAME
DLIDDNIN DC    X'000100010005',C'SYSIN'          SYSIN    DDNAME
DLIDDNLN DC    X'000100010006',C'SYSLIN'         SYSLIN   DDNAME
DLIDDNCN DC    X'000100010008',C'LINKCNTL'       LINKCNTL DDNAME
DLIDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
DLIDSNAM DC    X'00020001002C'                   DSNAME
DLIALLOC DC    X'00040001000108'                 DISP=SHR
DLINORM  DC    X'00050001000108'                 DISP=(,KEEP)
DLIANORM DC    X'00060001000108'                 DISP=(,,KEEP)
DLIDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
DLIFDDNA DC    X'000100010008'                   FOR FREE DDNAME
DLIDUMMY DC    X'00240000'                       DUMMY DATA SET
DLIBLKSI DC    X'0030000100020050'               DCB=BLKSIZE=80
DLINEW   DC    X'00040001000104'                 DISP=(NEW)
DLIDEL   DC    X'00050001000104'                 DISP=(,DELETE)
DLICDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
DLIPERM  DC    X'00520000'                       PERMANENT ALLOCATION
DLIUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
DLIPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
DLIPRTSE DC    X'000B00010003',AL3(100)          SPACE=(,(,NNN))
DLIPRTIN DC    X'000900010003',AL3(27930)        SPACE=(27930)
DLISINSP DC    X'000900010003',AL3(3120)         SPACE=(3120)
DLISLNSP DC    X'000900010003',AL3(27920)        SPACE=(27920)
         SPACE 1
DLIPRTRE DC    X'004900010001',XL1'50'           DCB=RECFM=VB
DLIPRTLR DC    X'004200010002',AL2(137)          DCB=LRECL=137
DLIPRTBL DC    X'003000010002',AL2(6854)         DCB=BLKSIZE=6854
         SPACE 2
DLISINRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
DLISINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
DLISINBL DC    X'003000010002',AL2(3120)         DCB=BLKSIZE=3120
DLISLNBL DC    X'003000010002',AL2(27920)        DCB=BLKSIZE=27920
         SPACE 2
DLISYSIN DC    A(DLIPRTFI,DLIPRTSE,DLISINSP)
         DC    A(DLISINRE,DLISINLR,DLISINBL)
         DC    A(DLINEW,DLIDEL,DLICDEL),X'80',AL3(DLIPERM)
DLISYSPR DC    A(DLIPRTFI,DLIPRTSE,DLIPRTIN)
         DC    A(DLIPRTRE,DLIPRTLR,DLIPRTBL)
         DC    A(DLINEW,DLIDEL,DLICDEL),X'80',AL3(DLIPERM)
DLISYSLN DC    A(DLIPRTFI,DLIPRTSE,DLISLNSP)
         DC    A(DLISINRE,DLISINLR,DLISLNBL)
         DC    A(DLINEW,DLIDEL,DLICDEL),X'80',AL3(DLIPERM)
DLISYSCN DC    A(DLIDUMMY,DLIBLKSI,DLINEW,DLIDEL),X'80',AL3(DLICDEL)
         SPACE 2
DLIMBR   DC    CL7'MEMBER('
         SPACE 2
