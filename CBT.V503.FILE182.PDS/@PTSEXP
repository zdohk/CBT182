         TITLE 'P D S  --  GIMCPTS INTERFACE                  9/23/09'
***********************************************************************
***      PTSEXP SUBCOMMAND   ADDED BY JOHN KALINICH -- SEP., 2009   ***
***********************************************************************
*
PTSEXP   CSECT
         USING *,R8
         SPACE 1
*  FREE SYSUT1, SYSUT2, AND SYSPRINT DATASETS
         LA    R1,SYSUT1B               SYSUT1 DDNAME
         BAS   R2,PTS8580               FREE THIS DATA SET
         LA    R1,SYSUT2B               SYSUT2 DDNAME
         BAS   R2,PTS8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,PTS8580               FREE THIS DATA SET
*  ALLOCATE PTSEXP //SYSUT1 DATA SET    INPUT PDS
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'PTSDDNU1+6,R3),PTSDDNU1       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSDDNU1+6(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSDSNAM,R3),PTSDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         CLC   MBRALL(8),MEMBER1                 ENTIRE PDS?  DRK AUG18
         BE    PTSDISP                           YES, SKIP            "
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSDSMBR,R3),PTSDSMBR         SPECIFY MEMBER TEXT
         MVC   6(8,R3),MEMBER1                   MOVE IN MEMBER TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSDSMBR+8(,R3)              START OF NEXT TEXT
         SPACE 1
PTSDISP  DS    0H
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSALLOC,R3),PTSALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSNORM,R3),PTSNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSANORM,R3),PTSANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   PTSERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE PTSEXP //SYSUT2 DATA SET    OUTPUT SEQ DSN
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'PTSDDNU2+6,R3),PTSDDNU2       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSDDNU2+6(,R3)              START OF NEXT TEXT
         SPACE 1
PTS0000  DS    0H
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSDSNAM,R3),PTSDSNAM         SPECIFY DSNAME TEXT
         SPACE 1
         LA    R2,5(,R3)                         WHERE TO STORE OUTPUT
         MVC   6(44,R3),BLANK128                 CLEAR DSNAME AREA
         MVC   DOUBLE(8),BLANK128                CLEAR MEMBER AREA
         LA    R1,MSGDS2                         DSN OR DSN(MBR)
         LA    R0,44
         CLI   0(R1),C''''                       QUOTED?
         BE    PTS0010                           YES, BRANCH
         SR    R14,R14                           NO
         L     R15,ADDRUPT                       START OF THE UPT
* 8-CHAR PREFIX                                               DRK JUL17
         TM    FLAGSZZ,TSO#8                     8-CHAR ID/PREFIX?    "
         BNO   PTS7PRE                           NO                   "
PTS8PRE  DS    0H                                YES                  "
         ICM   R14,B'0001',UPTPRF8L-UPT(R15)     PREFIX LENGTH ZERO?  "
         BZ    PTS0010+4                         YES, BRANCH          "
         MVC   6(8,R3),UPTPREF8-UPT(R15)         DSNAME PREFIX        "
         B     PTSCONT                                                "
PTS7PRE  DS    0H                                                     "
         ICM   R14,B'0001',UPTPREFL-UPT(R15)     PREFIX LENGTH ZERO?  "
         BZ    PTS0010+4                         YES, BRANCH          "
         MVC   6(7,R3),UPTPREFX-UPT(R15)         DSNAME PREFIX        "
PTSCONT  DS    0H                                             DRK JUL17
         AR    R2,R14                            POSITION FOR PERIOD
         SR    R0,R14
         MVI   1(R2),C'.'
         BCTR  R0,0
         BCTR  R1,0
         LA    R2,1(,R2)
         SPACE 1
PTS0010  LA    R1,1(,R1)                         NEXT INPUT BYTE
         LA    R2,1(,R2)                         NEXT OUTPUT BYTE
         CLI   0(R1),C''''                       END OF DSNAME?
         BE    PTS0050                           YES, BRANCH
         CLI   0(R1),C'('                        PARENTHESIS?
         BE    PTS0020                           YES, BRANCH
         CLI   0(R1),X'40'                       BLANK?
         BE    PTS0050                           YES, BRANCH
         MVC   0(1,R2),0(R1)                     MOVE IN ONE MORE BYTE
         BCT   R0,PTS0010
         B     PTS0050
         SPACE 1
PTS0020  MVC   DOUBLE(8),BLANK128                MEMBER NAME
         LA    R0,8
         LA    R2,DOUBLE-1
         SPACE 1
PTS0030  LA    R1,1(,R1)                         NEXT INPUT BYTE
         LA    R2,1(,R2)                         NEXT OUTPUT BYTE
         CLI   0(R1),C''''                       END OF DSNAME?
         BE    PTS0050                           YES, BRANCH
         CLI   0(R1),C')'                        PARENTHESIS?
         BE    PTS0050                           YES, BRANCH
         CLI   0(R1),X'40'                       BLANK?
         BE    PTS0050                           YES, BRANCH
         MVC   0(1,R2),0(R1)                     MOVE IN ONE MORE BYTE
         BCT   R0,PTS0030
PTS0050  DS    0H
         LA    R1,M99RBPTR                       RESET R1
         MVC   MSGDS2(44),6(R3)                  RESET THE DSNAME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSDSNAM+44(,R3)             START OF NEXT TEXT
PTS0060  DS    0H
         SPACE 1
* LOCATE OUTPUT DSNAME
         ST    R1,#SAVEREG              SAVE R1
         MVC   WORKTMP(44),MSGDS2       COPY DSNAME
         L     R14,LOCATE5
         LA    R15,WORKTMP              ACTUAL DSNAME
         SR    R0,R0                    NO CVOL VALUE
         LA    R1,MSGTEXT1              LOCATE WORK AREA
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         LOCATE PARMLIST
         CLI   #PTSDISP,4               NEW?
         BNE   PTSNOTNW                 NO
         LTR   R15,R15                  SUCCESSFUL LOCATE?
         BZ    PTSDSN                   YES, ERROR
         L     R1,#SAVEREG              RESTORE R1
         B     PTS0075                  NO, OK
PTSNOTNW DS    0H
         LTR   R15,R15                  SUCCESSFUL LOCATE?
         BNZ   PTSNODSN                 NO, ERROR
         SPACE 1
* OBTAIN DSCB
         L     R14,OBTAIN5              OBTAIN FLAGS
         LA    R15,WORKTMP              ACTUAL DSNAME
         LA    R0,MSGTEXT1+6            VOLUME SERIAL (FROM LOCATE)
         LA    R1,MSGTEXT2              OUTPUT START ADDRESS
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         OBTAIN PARMLIST                GET THE FORMAT 1 DSCB
         LTR   R15,R15                  SUCCESSFUL?
         BZ    PTSDSCB                  YES, BRANCH
         M$MSG L830                     NO DSCB FOUND MESSAGE
         B     NEWCMD
PTSDSN   MVI   MTLEN,44                 LENGTH OF INSERT
         MVC   INSERT#1(44),MSGDS2      DSNAME
         M$MSG L852$1                   DSNAME DOES NOT EXIST
         MVC   PMEMCURR,=XL4'00'        CURRENT MEMBER POINTER
         NI    FLAGSAA,FF-FMEM#MEM      TURN OFF MEMBER GROUP
         NI    FLAGSII,FF-FDIRGRP       NORMAL INPUT NOW
         B     NEWCMD
PTSNODSN MVI   MTLEN,44                 LENGTH OF INSERT
         MVC   INSERT#1(44),MSGDS2      DSNAME
         M$MSG L844$1
         B     NEWCMD
PTSDSCB  DS    0H
         CLI   MSGTEXT2+X'26',X'02'     DSORG PARTITIONED?
         BNE   PTS0065                  NO
         CLI   DOUBLE,C' '              YES, MEMBER SPECIFIED?
         BNE   PTS0065                       YES
         MVC   DOUBLE(8),$PTSEXP             NO, GENERATE NAME
PTS0065  DS    0H
         SPACE 1
         L     R1,#SAVEREG                       RESTORE R1
         CLC   MBRALL(8),MEMBER1                 ENTIRE PDS?  DRK AUG18
         BE    PTS0075                           YES, SKIP            "
         CLI   DOUBLE,C' '                       MEMBER NAME?
         BE    PTS0075                           NO
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSDSMBR,R3),PTSDSMBR         SPECIFY MEMBER TEXT
         MVC   6(8,R3),DOUBLE                    MOVE IN MEMBER TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSDSMBR+8(,R3)              START OF NEXT TEXT
PTS0075  DS    0H
* DISP                                                        DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSALLOC,R3),PTSALLOC         SPECIFY DISP TEXT
         CLI   #PTSDISP,0                        ANY OLD/SHR/MOD/NEW?
         BNE   *+8                               YES, BRANCH
         MVI   #PTSDISP,2                        NO, USE DEFAULT
         SPACE 1
         CLI   #PTSDISP,1                        OLD?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),PTSOOLD                     SPECIFY DISPOSITION
         SPACE 1
         CLI   #PTSDISP,2                        SHR?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),PTSOSHR                     SPECIFY DISPOSITION
         SPACE 1
         CLI   #PTSDISP,3                        MOD?
         BNE   *+8+8                             NO, BRANCH
         CLI   MSGTEXT2+X'26',X'40'              DSORG SEQ?
         BNE   *+8                               NO
         MVI   6(R3),PTSOMOD                     SPECIFY DISPOSITION
         SPACE 1
         CLI   #PTSDISP,4                        NEW?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),PTSONEW                     SPECIFY DISPOSITION
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
* DISP=NEW                                                    DRK MAR18
         CLI   #PTSDISP,4                        NEW?
         BL    PTSNW30                           NO, BRANCH
         SPACE 1
         CLI   #PTSVOL,0                         ANY VOLUME SERIAL?
         BE    PTSNW10                           NO, BRANCH
* VOLSER, UNIT                                                DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSVOLSR,R3),PTSVOLSR         SPECIFY VOLUME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         MVC   6(6,R3),#PTSVOL                   MOVE VOLSER
         LA    R3,L'PTSVOLSR(,R3)                START OF NEXT TEXT
         SPACE 1
PTSNW10  DS    0H
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSUNITP+8,R3),PTSUNITP       SPECIFY UNIT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSUNITP+8(,R3)              START OF NEXT TEXT
* DSORG, RECFM, LRECL, BLKSIZE                                DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSSDS+2,R3),PTSSDS           SPECIFY DSORG
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSSDS+2(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSSRF+1,R3),PTSSRF           SPECIFY RECFM
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'PTSSRF+1(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSSLR,R3),PTSSLR             SPECIFY LRECL
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         MVC   6(2,R3),LRECL                     MOVE LRECL
         LA    R3,L'PTSSLR+2(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSSBL,R3),PTSSBL             SPECIFY BLKSIZE
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         MVC   6(2,R3),BLKSI                     MOVE BLKSIZE
         LA    R3,L'PTSSBL+2(,R3)                START OF NEXT TEXT
         SPACE 1
* TRK/CYL ALLOCATION                                          DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSTRK,R3),PTSTRK             SPECIFY TRACK ALLOC
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         CLI   #PTSTRCY,0                        TRK/CYL REQUESTED?
         BH    PTSNW15                           YES, BRANCH
         MVI   #PTSTRCY,1                        NO, DEFAULT TO TRK
PTSNW15  CLI   #PTSTRCY,1                        TRACK?
         BNE   *+8                               NO, BRANCH
         MVI   1(R3),X'07'                       YES, CONVERT TO TRK
         CLI   #PTSTRCY,2                        CYLINDER?
         BNE   *+8                               NO, BRANCH
         MVI   1(R3),X'08'                       YES, CONVERT TO CYL
         LA    R3,L'PTSTRK(,R3)                  START OF NEXT TEXT
         SPACE 1
* SPACE (P,S)                                                 DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSFIRST+3,R3),PTSFIRST       SPECIFY PRIMARY
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         SR    R14,R14
         ICM   R14,B'0011',#PTSSPAC              ANY PRIMARY SPACE?
         BNZ   PTSNW20                           YES, BRANCH
         B     PTSNW25                           NO, USE DEFAULT
PTSNW20  STCM  R14,B'0111',6(R3)                 UPDATE FIRST QUANTITY
PTSNW25  DS    0H
         LA    R3,L'PTSFIRST+3(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSSECON+3,R3),PTSSECON       SPECIFY SECONDARY
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         SR    R14,R14
         ICM   R14,B'0011',#PTSSPAC+2            SECONDARY SPACE?
         BZ    PTSNW30                           NO
         SPACE 1
         STCM  R14,B'0111',6(R3)                 UPDATE 2ND QUANTITY
PTSNW30  DS    0H
         LA    R3,L'PTSSECON+3(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSCAT,R3),PTSCAT             DISP=(,CATLG)
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         CLI   #PTSDISP,4                        NEW?
         BE    *+8                               YES, BRANCH
         MVI   6(R3),X'08'                       NO, USE DISP=(,KEEP)
         LA    R3,L'PTSCAT(,R3)                  START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'PTSCDEL,R3),PTSCDEL           DISP=(,,DELETE)
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         CLI   #PTSDISP,4                        NEW?
         BE    *+8                               YES, BRANCH
         MVI   6(R3),X'08'                       NO, USE DISP=(,,KEEP)
         SPACE 1
PTSNW99  DS    0H
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         DROP  R1,R4,R5
PTSDB01  DS    0H
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   PTSERROR                      NO, BRANCH
         CLI   #PTSDISP,4                    NEW?
         BNE   PTSDB02                       NO, BRANCH
         MVI   MTLEN,44                 LENGTH OF INSERT
         MVC   INSERT#1(44),MSGDS2      DSNAME
         M$MSG L273$1                   DISPLAY OUTPUT DSN *DEBUG*
PTSDB02  DS    0H
         SPACE 2
*  ALLOCATE PTSEXP //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),PTSDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),PTSSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   PTSERROR                   NO, BRANCH
         B     PTSSTAX
         SPACE 2
PTSERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    PTS8550                    NO, BRANCH          DRK MAR18
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     PTS8550                    TERMINATE           DRK MAR18
         SPACE 3
PTSSTAX  DS    0H
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  PTSENULL,USADDR=(R7),REPLACE=NO,IBUF=0,                 X
               OBUF=(PTS484W,PTS484WL),MF=(E,STAXPARM)
         LA    R1,PTSPARM                 PARM=EXPAND
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,PTSPGM               2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,PTS7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),PTSEFTSR       INVOKE IKJEFTSR?
         BNE   PTSNLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
PTSNLNK  BAS   R2,ATTACH                  PTSEXP
         SPACE 3
PTS7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE
         C     R2,=F'40'                  PROGRAM NOT FOUND?
         BNE   PTS8000                    NO
         MVC   INSERT#1(8),PTSPGM         YES, ERROR
         M$MSG L859$1                     NOT FOUND MESSAGE
         B     PTS8550
         SPACE 1
PTS8000  DS    0H
         MVC   BAMDCB(PTSDL),PTSDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSPRINT'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    PTS8010                      YES, BRANCH
         LA    R1,PTS865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     PTS8550                      EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
PTS8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(120),1(R1)      MOVE TO MESSAGE LINE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     PTS8010
         SPACE 3
PTS8500  DS    0H                           EOF SYSPRINT
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)     CLOSE THE SYSPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 1
         L     R2,#SUBHOLD+28+8           LOAD RETURN CODE
         C     R2,=F'0'                   OK?
         BNE   PTS8550                    NO
         SPACE 1
         MVC   MSGTEXT1(136),MSGBL132       BLANK THE MESSAGE LINE
         M$ERRST MSGTEXT1                   OUTPUT BLANK LINE
         SPACE 1
         CLI   #PTSLIST,2                   NOLIST?           DRK MAY14
         BE    PTS8550                      YES               DRK MAY14
         CLC   MBRALL(8),MEMBER1            ENTIRE PDS?       DRK AUG18
         BE    PTS8550                      YES, SKIP                 "
         MVC   BAMDCB(PTSDL2),PTSDCB2       GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSUT2'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSUT2
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    PTT8010                      YES, BRANCH
         LA    R1,PTS865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     PTS8550                      EXIT
         SPACE 3
*  PROCESS SYSUT2 RECORDS
PTT8010  GET   BAMDCB                     GET EXPANDED RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(80),0(R1)       MOVE TO MESSAGE LINE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     PTT8010
         SPACE 3
PTT8500  DS    0H                         EOF SYSUT2
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SYSUT2 FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         CLC   ##SUBCAL(8),PTSEFTSR       INVOKE IKJEFTSR?
         BNE   PTS8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1
         BL    PTS8540                    YES, VALID PTSEXP
         MVI   MTLEN+4,11
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   PTS8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE
         SRDL  R0,12                    SHIFT USER ABEND TO R1
         ST    R0,FULLWORD              SYSTEM ABEND CODE
         MVC   INSERT#2+4(7),=C' ABEND='
         UNPK  INSERT#2+11(5),FULLWORD+2(3)
         TR    INSERT#2+11(4),TRTABLE
         MVI   INSERT#2+11,C'S'         S000
         MVI   INSERT#2+11+4,X'40'
         SPACE 1
         SRL   R1,20                    USER ABEND
         CVD   R1,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE
         MVI   INSERT#2+11+5,C'U'       U0000
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND
         SPACE 1
PTS8530  DS    0H
         M$MSG L171$2
PTS8540  DS    0H
         SPACE 2
PTS8550  M$ERRST MSGBLANK
         LA    R1,=CL8'SYSPRINT'          SYSPRINT DNAME
         BAS   R2,PTS8580                 FREE THIS DATA SET
         LA    R1,SYSUT1B                 SYSUT1 DDNAME
         BAS   R2,PTS8580                 FREE THIS DATA SET
         LA    R1,SYSUT2B                 SYSUT2 DDNAME
         BAS   R2,PTS8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
PTS8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),PTSFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,PTSUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
PTSENULL BR    R14
         SPACE 2
*  PTSEXP CONSTANTS
         PRINT NOGEN
PTSDCB   DCB   DSORG=PS,DDNAME=PTS,MACRF=(GL,PM),EODAD=PTS8500
PTSDL    EQU   *-PTSDCB
PTSDCB2  DCB   DSORG=PS,DDNAME=PTS2,MACRF=(GL,PM),EODAD=PTT8500
PTSDL2   EQU   *-PTSDCB2
         PRINT NOGEN
PTS484W  DC    C'PDS484W PTSEXP SHOULD NOT BE INTERRUPTED'
PTS484WL EQU   *-PTS484W
PTS865E  M$TX  'PDS865E THE PTSEXP OUTPUT CAN NOT BE OPENED'
         PRINT GEN
PTSEFTSR DC    CL8'IKJEFTSR'
PTSPGM   DC    CL8'GIMCPTS'                      GIMCPTS
PTSPARM  DC    AL2(PTSPARML-2)                   PARM LENGTH
         DC    CL6'EXPAND'                       EXPAND
PTSPARML EQU   *-PTSPARM
PTSDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
PTSDDNU1 DC    X'000100010006',C'SYSUT1'         SYSUT1   DDNAME
PTSDDNU2 DC    X'000100010006',C'SYSUT2'         SYSUT2   DDNAME
PTSDSNAM DC    X'00020001002C'                   DSNAME
PTSDSMBR DC    X'000300010008'                   MEMBER
PTSALLOC DC    X'00040001000108'                 DISP=SHR
PTSALMOD DC    X'00040001000102'                 DISP=MOD
PTSNORM  DC    X'00050001000108'                 DISP=(,KEEP)
PTSANORM DC    X'00060001000108'                 DISP=(,,KEEP)
PTSDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
PTSFDDNA DC    X'000100010008'                   FOR FREE DDNAME
PTSNEW   DC    X'00040001000104'                 DISP=(NEW)
PTSDEL   DC    X'00050001000104'                 DISP=(,DELETE)
PTSCAT   DC    X'00050001000102'                 DISP=(,CATLG)
PTSCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
PTSPERM  DC    X'00520000'                       PERMANENT ALLOCATION
PTSUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
PTSTRK   DC    X'00070000'                       SPACE=(TRK,
PTSFIRST DC    X'000A00010003',AL3(15)           SPACE=(,15
PTSSECON DC    X'000B00010003',AL3(15)           SPACE=(,,15
PTSOOLD  EQU   X'01'                             DISP=OLD
PTSOMOD  EQU   X'02'                             DISP=MOD
PTSONEW  EQU   X'04'                             DISP=NEW
PTSOSHR  EQU   X'08'                             DISP=SHR
PTSVOLSR DC    X'001000010006404040404040'       VOL=SER=
PTSUNITP DC    X'001500010008',CL8'&PUNIT'       UNIT=SYSALLDA
         SPACE 2
PTSSDS   DC    X'003C00010002',XL2'4000'         DSORG=PS
PTSSRF   DC    X'004900010001',XL1'90'           DCB=RECFM=FB
PTSSLR   DC    X'004200010002',AL2(80)           DCB=LRECL=80
PTSSBL   DC    X'003000010002',AL2(27920)        DCB=BLKSIZE=27920
         SPACE 2
PTSPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
PTSPRTSE DC    X'000B00010003',AL3(050)          SPACE=(,(,NNN))
PTSPRTIN DC    X'000900010003',AL3(27951)        SPACE=(27951)
         SPACE 1
PTSPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
PTSPRTLR DC    X'004200010002',AL2(121)          DCB=LRECL=121
PTSPRTBL DC    X'003000010002',AL2(27951)        DCB=BLKSIZE=27951
         SPACE 2
PTSSYSPR DC    A(PTSPRTFI,PTSPRTSE,PTSPRTIN)
         DC    A(PTSPRTRE,PTSPRTLR,PTSPRTBL)
         DC    A(PTSNEW,PTSDEL,PTSCDEL),X'80',AL3(PTSPERM)
SYSUT1B  DC    CL8'SYSUT1'
SYSUT2B  DC    CL8'SYSUT2'
$PTSEXP  DC    CL8'$PTSEXP'
MBRALL   DC    CL8'ALL'        SYSUT1=DSORG=PO                DRK AUG18
*                              SYSUT2=DSORG=PO                        "
         SPACE 3
OBTAIN5  CAMLST SEARCH,0,0,0
         ORG   OBTAIN5+4
         SPACE 3
LOCATE5  CAMLST NAME,0,,0
         ORG   LOCATE5+4
         SPACE 3
