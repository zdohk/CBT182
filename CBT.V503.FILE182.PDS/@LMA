         TITLE 'P D S  --  LOAD MODULE ANALYZER INTERFACE     9/20/06'
***********************************************************************
***      LMA     SUBCOMMAND   ADDED BY JOHN KALINICH -- SEP., 2006  ***
***********************************************************************
*
LMA      CSECT
         USING *,R8
         LA    R1,L530          ASSUME A NON-PARTITIONED DATA SET
         TM    DSORG,DS1DSGPO   CORRECT?
         BZ    MSGNEW           YES, BRANCH
         LA    R1,L701          ASSUME NOT A LOAD LIBRARY
         TM    FLAGSCC,RECFMU   CORRECT?
         BZ    MSGNEW           YES, BRANCH
         SPACE 1
*  FREE EQAIN, EQAPRINT, EQALIB, EQASYSPF, AND EQAPGMNM  DATASETS
         LA    R1,EQAIN                 EQAIN DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         LA    R1,EQAPRINT              EQAPRINT DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         LA    R1,EQALIB                EQALIB DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         LA    R1,EQASYSPF              EQASYSPF DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         LA    R1,EQAPGMNM              EQAPGMNM DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
*  ALLOCATE LMA //EQALIB DATA SET
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'LMADDNLI+6,R3),LMADDNLI       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'LMADDNLI+6(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'LMADSNAM,R3),LMADSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'LMADSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'LMAALLOC,R3),LMAALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'LMAALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'LMANORM,R3),LMANORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'LMANORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'LMAANORM,R3),LMAANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   LMAERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE LMA //EQAPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),LMADDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),LMASYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDPR(8),=CL8'SYSPRINT' MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   LMAERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE LMA //EQAIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),LMADDNIN      EQAIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),LMAEQAIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   LMAERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE LMA //EQASYSPF DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),LMADDNPF      EQASYSPF DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),LMAEQAIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   LMAERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE LMA //EQAPGMNM DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),LMADDNNM      EQASYSNM DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),LMAEQAIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   LMAERROR                   NO, BRANCH
         B     LMA2000
         SPACE 3
LMAERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    LMA8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     LMA8550
         SPACE 3
LMA2000  DS    0H
*  OPEN EQASYSPF DATA SET
         MVC   BAMDCB(LMADL),LMADCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),EQASYSPF
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN EQASYSPF
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    LMA2010                         YES, BRANCH
         LA    R1,LMA865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     LMA8550                         EXIT
         SPACE 3
LMA2010  DS    0H
         MVC   MSGTEXT1(136),MSGBL132   CLEAR THE MESSAGE AREA
         L     R2,=V(LMAPFX)       LMA PROGRAM PREFIX CSECT
LMA2020  MVC   MSGTEXT1+4(80),0(R2)  DESCRIPTION
         LA    R2,80(,R2)          NEXT ENTRY
         PUT   BAMDCB,MSGTEXT1+4   OUTPUT PREFIX STATEMENT
         CLI   0(R2),X'FF'         END OF TABLE?
         BNE   LMA2020             NO, BRANCH
         MVI   OPENLIST,X'80'      YES, CLOSE
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE EQASYSPF
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
*  OPEN EQAPGMNM DATA SET
         MVC   BAMDCB(LMADL),LMADCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),EQAPGMNM
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN EQAPGMNM
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    LMA2030                         YES, BRANCH
         LA    R1,LMA865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     LMA8550                         EXIT
         SPACE 3
LMA2030  DS    0H
         MVC   MSGTEXT1(136),MSGBL132   CLEAR THE MESSAGE AREA
         L     R2,=V(LMAPGM)       LMA PROGRAM NUMBER CSECT
LMA2040  MVC   MSGTEXT1+4(80),0(R2)  DESCRIPTION
         LA    R2,80(,R2)          NEXT ENTRY
         PUT   BAMDCB,MSGTEXT1+4   OUTPUT PROGRAM STATEMENT
         CLI   0(R2),X'FF'         END OF TABLE?
         BNE   LMA2040             NO, BRANCH
         MVI   OPENLIST,X'80'      YES, CLOSE
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE EQAPGMNM
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
LMA2100  MVC   MEMNAME(12),DIRNAME   ENSURE MEMBER NAME IS PRESENT
         MVC   #DELSAVE(1),FLAGSAA   SAVE FLAGSAA
         TM    FLAGSAA,FMEM#MEM      MEMBER GROUP?
         BO    LMA2200               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    LMA2110               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    LMA2200               YES, BRANCH
LMA2110  TM    #LMAALI,#LMAASS2      ASSOCIATES TOO?
         BO    LMA2200               YES, BRANCH
         SPACE 1
LMA2120  DS    0H
         TM    #LMAALI,#LMAASS2+2    ALIAS/NOALIAS SPECIFIED?
         BM    LMA2130               YES
*        OI    #LMAALI,&LMAALI       USE THE DEFAULT
         OI    #LMAALI,2             USE THE DEFAULT
         TM    #LMAALI,#LMAASS2      ASSOCIATES TOO?
         BO    LMA2200               YES
         SPACE 3
LMA2130  DS    0H
         OI    #LMAALI,#LMAONE       ONLY A SINGLE MEMBER/DATA SET
         LA    R4,DDNAMEH            HOLD FOR THIS SUBCOMMAND
         MVC   0(8,R4),DIRNAME
         ST    R4,#MEMPTR
         LA    R4,16(,R4)            POSITION FOR ONE ENTRY
         B     LMA2900
LMA2200  OI    FLAGSII,FDIRGRP       SIMULATE MEMBER GROUP INPUT
         TM    #LMAALI,#LMAASS2+2    ALIAS/NOALIAS SPECIFIED?
         BM    *+8                   YES
*        OI    #LMAALI,&LMAALI       NO, USE THE DEFAULT
         OI    #LMAALI,2             NO, USE THE DEFAULT
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUPS NOW
         MVI   SUBPOOLT,21           SUBPOOL 21 DATA
         LA    R5,256/2              256 MEMBERS INITIALLY
         SPACE 1
LMA2210  SLL   R5,1                  MEMBERS*2 FOR EACH LOOP
         LR    R3,R5
         LR    R0,R5
         SLL   R0,4                  TABLE SIZE=MEMBERS*16
         ICM   R0,B'1000',SUBPOOLT
         GETMAIN R,LV=(0)
         LR    R4,R1                 NEW TABLE ADDRESS
         ICM   R0,B'1111',#MEMPTR    ANY PREVIOUS MEMBERS?
         BNZ   LMA2220               YES, BRANCH
         ST    R4,#MEMPTR            INITIALIZE MEMBER BASE
         B     LMA2500
         SPACE 1
LMA2220  SRL   R3,1                  SECOND HALF OF TABLE (# MEMBERS)
         LR    R14,R4                NEW TABLE START ADDRESS
         LR    R15,R5
         SLL   R15,3                 OLD TABLE SIZE=MEMBERS*8
         LR    R2,R15                START OF NEW PART
         LR    R1,R15
         MVCL  R14,R0                PRESERVE THE OLD TABLE
         L     R1,#MEMPTR
         LR    R0,R2                 LENGTH TO FREE
         ICM   R0,B'1000',SUBPOOLT   SUBPOOL TO FREE
         FREEMAIN R,LV=(0),A=(1)
         ST    R4,#MEMPTR            START OF NEW TABLE
         AR    R4,R2                 WHERE TO ADD MEMBERS
         SPACE 3
LMA2300  TM    #LMAALI,#LMAASSP      ASSOCIATES PHASE?
         BO    LMA2320               YES, BRANCH
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    LMA2320               YES, BRANCH
         TM    #DELSAVE,FF-FMEM#MEM  MEMBER ALREADY ADDED?
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         BNO   LMA2500               NO, BRANCH
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    LMA2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BNO   LMA2605               NO, BRANCH
         L     R1,PMEMCURR           CURRENT LIST ELEMENT
         TM    0(R1),X'80'           ANOTHER ELEMENT?
         BNO   LMA2605               NO, END OF LIST
         MVC   FLAGSAA(1),4(R1)      NEXT DESCRIPTOR FLAGS
         MVC   LMEMBER1+1(19),5(R1)  LEN1, MEMBER1, LEN2, MEMBER2
         L     R1,0(,R1)             NEXT ELEMENT POINTER
         ST    R1,PMEMCURR
         MVC   #DELSAVE(1),FLAGSAA   SAVE THE MEMBER DESCRIPTOR
         MVC   MEMNAME(8),MEMBER1    FIRST MEMBER NAME
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUP
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    LMA2319               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         MVC   DIRNAME,MEMBER1       MOVE TO BLDLLIST
         SPACE 2
         BLDL  INDCB,BLDLLIST          LOCATE DIRECTORY ENTRY
         B     *+4(R15)                PROCESS RETURN CODE
         B     LMA2315                   00 - SUCCESSFUL
         B     LMA2310                   04 - MEMBER NOT FOUND
         B     IOERROR                   08 - I/O ERROR
         SPACE 1
LMA2310  MVC   INSERT#1(8),DIRNAME
         M$MSG L853$1                MSG - (MEMBER) NOT FOUND
         B     LMA2300
         SPACE 1
LMA2315  MVC   MEMNAME(12),DIRNAME   FIRST MEMBER NAME
         B     LMA2500
         SPACE 1
LMA2319  MVI   STARTTR+2,X'01'       REREAD THE DIRECTORY
         SPACE 1
LMA2320  BAS   R14,READDIR           GET NEXT DIRECTORY BLOCK
         B     LMA2600               END OF MEMBERS -- BRANCH
         SPACE 1
         TM    #LMAALI,#LMAASSP      ASSOCIATES PHASE?
         BO    LMA2400               YES, BRANCH
         SPACE 1
         BAS   R2,MFILTER            CHECK MEMBER NAMES
         B     LMA2600                 00 - SIMULATE DIRECTORY END
         B     LMA2300                 04 - MEMBER FAILED FILTERING
         B     LMA2500                 08 - MEMBER PASSED FILTERING
         SPACE 3
LMA2400  L     R1,#MEMPTR            START OF MEMBER LIST
         B     LMA2410+4             SKIP FIRST ADD
LMA2410  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   LMA2300               YES, IGNORE THIS ENTRY
         CLC   8(3,R1),MEMTTR        MATCHING TTR?
         BNE   LMA2410               NO, BRANCH
         SPACE 3
LMA2500  L     R1,#MEMPTR            START OF MEMBER LIST
         B     LMA2510+4             SKIP FIRST ADD
LMA2510  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   LMA2580               YES, ADD THIS ENTRY
         CLC   0(8,R1),MEMNAME       FIND MYSELF?
         BE    LMA2300               YES, IGNORE THIS ENTRY
         B     LMA2510               NO, CONTINUE SEARCHING
         SPACE 2
LMA2580  MVC   0(16,R4),MEMNAME      ADD TO THE TABLE
         LA    R4,16(,R4)            NEXT MEMBER POSITION
         S     R3,=F'1'              ANY MORE FIT?
         BNP   LMA2210               NO, BRANCH
         B     LMA2300               YES, GET NEXT MEMBER
         SPACE 3
LMA2600  TM    #LMAALI,#LMAASSP      ASSOCIATED MEMBERS?
         BO    LMA2605               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  ELEMENT HAS NOW BEEN ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    LMA2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    LMA2300               YES, BRANCH
         SPACE 1
LMA2605  TM    #LMAALI,#LMAASSP      ASSOCIATES PHASE STARTED?
         BO    LMA2700               YES, BRANCH
         TM    #LMAALI,#LMAASS2      ASSOCIATE MEMBERS TOO?
         BNO   LMA2700               NO, BRANCH
         OI    #LMAALI,#LMAASSP      YES, ASSOCIATES PHASE STARTED
         NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
         MVI   STARTTR+2,X'01'       TTR=000001 (START OF DIRECTORY)
         B     LMA2300               DO ANY ASSOCIATED MEMBERS
         SPACE 3
LMA2700  NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
         SPACE 3
LMA2900  DS    0H
         ST    R4,#MEMLAST           SAVE LAST MEMBER POINTER
*  OPEN EQAIN DATA SET
         MVC   BAMDCB(LMADL),LMADCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),EQAIN
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN EQAIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    LMA2910                         YES, BRANCH
         LA    R1,LMA865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     LMA8550                         EXIT
         SPACE 3
LMA2910  DS    0H
         TM    FLAGSHH,FMEMALLM         ALL MEMBERS?
         BNO   LMA4010                  NO
         B     LMA4540                  YES
LMA4010  DS    0H
         L     R3,#MEMPTR                 FIRST MEMBER POINTER
         L     R4,#MEMLAST                LAST MEMBER POINTER
         MVC   MSGTEXT1(136),MSGBL132     CLEAR THE MESSAGE AREA
         SPACE 1
LMA4530  CR    R3,R4                      END OF MEMBER TABLE?
         BNL   LMA4540                    YES
         LA    R5,MSGTEXT1+4
         MVC   0(14,R5),LMASEL            SELECT MEMBER=
         LA    R5,14(,R5)
         MVC   0(8,R5),0(R3)              MEMBER NAME
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT SELECT STATEMENT
         LA    R3,16(,R3)                 NEXT MEMBER POSITION
         B     LMA4530
         SPACE 1
LMA4540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE EQAIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
LMA4550  DS    0H
         MVC   #LMAPARM+2(60),BLANK128  CLEAR PARM AREA
         LA    R5,#LMAPARM+2            PT AT PARM VALUE FIELD
         CLI   #LMALOUD,1               LOUD?
         BNE   LMA4560                  NO, BRANCH
         MVC   0(4,R5),LOUD
         LA    R5,4(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
LMA4560  DS    0H
         CLI   #LMASHOW,1               SHOWLIB?
         BNE   LMA4570                  NO, BRANCH
         MVC   0(7,R5),SHOWLIB
         LA    R5,7(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
LMA4570  DS    0H
         CLI   #LMAOSVS,1               OSVSONLY?
         BNE   LMA4580                  NO, BRANCH
         MVC   0(8,R5),OSVSONLY
         LA    R5,8(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
LMA4580  DS    0H
         CLI   #LMAFPRS,1               CKVOLFPRS?
         BNE   LMA4582                  NO, BRANCH
         MVC   0(9,R5),CKVOLFPR
         LA    R5,9(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
LMA4582  DS    0H
         CLI   #LMAINFO,1               LEINFO?
         BNE   LMA4584                  NO, BRANCH
         MVC   0(6,R5),LEINFO
         LA    R5,6(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
LMA4584  DS    0H
         CLI   #LMASCAN,1               LESCAN?
         BNE   LMA4586                  NO, BRANCH
         MVC   0(6,R5),LESCAN
         LA    R5,6(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
LMA4586  DS    0H
         CLI   #LMALD,1                 LISTLD?
         BNE   LMA4590                  NO, BRANCH
         MVC   0(6,R5),LISTLD
         LA    R5,6(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
LMA4590  DS    0H
         CLI   #LMADATE,C' '            DATEFMT?
         BE    LMA4600                  NO, BRANCH
         MVC   0(8,R5),DATEFMT
         LA    R5,8(,R5)
         MVC   0(8,R5),#LMADATE
         LA    R5,8(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
LMA4600  DS    0H
         CLI   #LMASORT,C' '            SORTBY?
         BE    LMA4620                  NO, BRANCH
         MVC   0(7,R5),SORTBY
         LA    R5,7(,R5)
         LH    R15,#LMASRTL             SORTBY VALUE LENGTH
         BCTR  R15,0
         MVC   0(*-*,R5),#LMASORT       <<EXECUTED>>
         EX    R15,*-6                  MOVE SEARCH STRING
         LA    R5,1(R15,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
         SPACE 1
LMA4620  DS    0H
         LA    R15,#LMAPARM+2           START OF PARM
         SR    R5,R15                   PARM LENGTH
         BZ    LMA4630                  ZERO
         BCTR  R5,0                     NO, SHIFT OUT COMMA
LMA4630  DS    0H
         STCM  R5,B'0011',#LMAPARM
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  LMANULL,USADDR=(R7),REPLACE=NO,IBUF=0,                  X
               OBUF=(LMA484W,LMA484WL),MF=(E,STAXPARM)
         LA    R1,#LMAPARM                PARM=VALUE
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,LMAPROG              2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,LMA7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),LMAEFTSR       INVOKE IKJEFTSR?
         BNE   LMANLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
LMANLNK  BAS   R2,ATTACH                  EQALMA
         SPACE 3
LMA7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE    DRK JAN07
         C     R2,=F'40'                  PROGRAM NOT FOUND?  DRK JAN07
         BNE   LMA8000                    NO                  DRK JAN07
         MVC   INSERT#1(8),LMAPROG        YES, ERROR          DRK JAN07
         M$MSG L859$1                     NOT FOUND MESSAGE   DRK JAN07
         B     LMA8550                                        DRK JAN07
         SPACE 1
LMA8000  MVC   BAMDCB(LMADL),LMADCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),EQAPRINT
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN EQAPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    LMA8010                      YES, BRANCH
         LA    R1,LMA865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     LMA8550                      EXIT
         SPACE 3
*  PROCESS EQAPRINT RECORDS
LMA8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(132),1(R1)      ADD THE LMA MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     LMA8010
         SPACE 3
LMA8500  DS    0H
         CLC   ##SUBCAL(8),LMAEFTSR       INVOKE IKJEFTSR?
         BNE   LMA8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1                DRK JAN07
         BL    LMA8540                    YES, VALID LMA
         MVI   MTLEN+4,11
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11                     DRK JAN07
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   LMA8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE            DRK NOV07
         SRDL  R0,12                    SHIFT USER ABEND TO R1DRK NOV07
         ST    R0,FULLWORD              SYSTEM ABEND CODE     DRK NOV07
         MVC   INSERT#2+4(7),=C' ABEND='                      DRK NOV07
         UNPK  INSERT#2+11(5),FULLWORD+2(3)                   DRK NOV07
         TR    INSERT#2+11(4),TRTABLE                         DRK NOV07
         MVI   INSERT#2+11,C'S'         S000                  DRK NOV07
         MVI   INSERT#2+11+4,X'40'                            DRK NOV07
         SPACE 1                                              DRK NOV07
         SRL   R1,20                    USER ABEND            DRK NOV07
         CVD   R1,DOUBLE                                      DRK NOV07
         UNPK  DOUBLE(5),DOUBLE+5(3)                          DRK NOV07
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE        DRK NOV07
         MVI   INSERT#2+11+5,C'U'       U0000                 DRK NOV07
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND       DRK NOV07
         SPACE 1
LMA8530  DS    0H
         M$MSG L171$2
LMA8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE EQAPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
LMA8550  M$ERRST MSGBLANK
         LA    R1,EQAIN                 EQAIN DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         LA    R1,EQAPRINT              EQAPRINT DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         LA    R1,EQALIB                EQALIB DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         LA    R1,EQASYSPF              EQASYSPF DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         LA    R1,EQAPGMNM              EQAPGMNM DDNAME
         BAS   R2,LMA8580               FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
LMA8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),LMAFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,LMAUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
LMANULL BR    R14
         SPACE 2
*  EQALMA CONSTANTS
         PRINT NOGEN
LMADCB   DCB   DSORG=PS,DDNAME=LMA,MACRF=(GL,PM),EODAD=LMA8500
LMADL    EQU   *-LMADCB
         PRINT NOGEN
LMA484W  DC    C'PDS484W LMA SHOULD NOT BE INTERRUPTED'
LMA484WL EQU   *-LMA484W
LMA865E  M$TX  'PDS865E THE LMA OUTPUT CAN NOT BE OPENED'
         PRINT GEN
LMAEFTSR DC    CL8'IKJEFTSR'
LMAPROG  DC    CL8'EQALMA'                       DEBUG TOOL LMA
LMASEL   DC    CL14'SELECT MEMBER='
EQAIN    DC    CL8'EQAIN'
EQAPRINT DC    CL8'EQAPRINT'
EQALIB   DC    CL8'EQALIB'
EQASYSPF DC    CL8'EQASYSPF'
EQAPGMNM DC    CL8'EQAPGMNM'
LOUD     DC    CL4'LOUD'
SHOWLIB  DC    CL7'SHOWLIB'
SORTBY   DC    CL7'SORTBY='
OSVSONLY DC    CL8'OSVSONLY'
LEINFO   DC    CL6'LEINFO'
LESCAN   DC    CL6'LESCAN'
LISTLD   DC    CL6'LISTLD'
DATEFMT  DC    CL8'DATEFMT='
CKVOLFPR DC    CL9'CKVOLFPRS'
LMADDNIN DC    X'000100010005',C'EQAIN'          EQAIN    DDNAME
LMADDNPR DC    X'000100010008',C'EQAPRINT'       EQAPRINT DDNAME
LMADDNLI DC    X'000100010006',C'EQALIB'         EQALIB   DDNAME
LMADDNPF DC    X'000100010008',C'EQASYSPF'       EQASYSPF DDNAME
LMADDNNM DC    X'000100010008',C'EQAPGMNM'       EQAPGMNM DDNAME
LMADSNAM DC    X'00020001002C'                   DSNAME
LMAALLOC DC    X'00040001000108'                 DISP=SHR
LMANORM  DC    X'00050001000108'                 DISP=(,KEEP)
LMAANORM DC    X'00060001000108'                 DISP=(,,KEEP)
LMADDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
LMAFDDNA DC    X'000100010008'                   FOR FREE DDNAME
LMANEW   DC    X'00040001000104'                 DISP=(NEW)
LMADEL   DC    X'00050001000104'                 DISP=(,DELETE)
LMACDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
LMAPERM  DC    X'00520000'                       PERMANENT ALLOCATION
LMAUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
LMAPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
LMAPRTSE DC    X'000B00010003',AL3(050)          SPACE=(,(,NNN))
LMAPRTIN DC    X'000900010003',AL3(27930)        SPACE=(27930)
LMASINSP DC    X'000900010003',AL3(6480)         SPACE=(6480)
         SPACE 1
LMAPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
LMAPRTLR DC    X'004200010002',AL2(133)          DCB=LRECL=133
LMAPRTBL DC    X'003000010002',AL2(27930)        DCB=BLKSIZE=27930
         SPACE 2
LMASINRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
LMASINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
LMASINBL DC    X'003000010002',AL2(6480)         DCB=BLKSIZE=6480
         SPACE 2
LMAEQAIN DC    A(LMAPRTFI,LMAPRTSE,LMASINSP)
         DC    A(LMASINRE,LMASINLR,LMASINBL)
         DC    A(LMANEW,LMADEL,LMACDEL),X'80',AL3(LMAPERM)
LMASYSPR DC    A(LMAPRTFI,LMAPRTSE,LMAPRTIN)
         DC    A(LMAPRTRE,LMAPRTLR,LMAPRTBL)
         DC    A(LMANEW,LMADEL,LMACDEL),X'80',AL3(LMAPERM)
         SPACE 2
#LMAASSP EQU   X'80'            LMA: ASSOCIATES PHASE
#LMAONE  EQU   X'10'            LMA: A SINGLE MEMBER
#LMAASS2 EQU   X'01'            LMA: ANALYZE ASSOCIATES TOO
         SPACE 2
