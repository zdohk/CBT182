 *** Note ***  This install member has old information on SPF and ISPFv1.
               Use $$$INST instructions instead.

 PDS Command -- Version 8.6 -- Installation


 Note: This member should be printed for use in the following PDS
       generation steps; also, read the installation steps that
       apply to you before you perform any of the following steps.
       Also, be sure to print and read member $$$$READ.

 A. PDS command and the HELP member

    1.  Select a name for the PDS command (assume PDSAA for the
        following) where the name is from 1 to 8 characters long.
        Several steps can be saved by not changing the name of PDS
        but instead just use an alias for PDS86 on the load module
        and help member (skip steps A.3b,  A.4e, B.9).

        Quickstart:  Use the default name of PDS86 for the PDS command
        and installation will be much easier.

    2.  Edit member #PDSGEN (and #PDSGENB if required) to set PDS global
        assembler variables according to instructions in each member.
        Also, note the conventions used in #PDSGEN and #PDSGENB:
        a.  The default value for each operand is coded first.
        b.  For those variables which have common alternatives,
            their values are coded next as comments.
        c.  If you wish to use one of these alternatives, you need
            only convert the comment line to a valid SETC value;
            you do not need to modify the earlier default line.
        d.  It is recommended that you do not modify the default
            line; then, if you need to regenerate PDS later, the
            list of possible choices will still be available.

        Note:  An alternative to updating #PDSGEN is to uncomment the
        COPY statement for #PDSGENU (at the end of #PDSGEN) and make
        your changes in that user member (the current default).

    3.  Edit member PDSHELP as follows:
        a.  An undocumented operand of the COMPRESS subcommand (SHR)
            can be used to compress data sets which are already
            allocated.  Document this operand if you want it used
            at your installation.
        b.  Replace all occurences of -PDS86- by PDSAA (note use
            capital letters).
        c.  Make any required changes for nullified or renamed
            subcommands (from the #PDSGEN &N... SETC statements).
        d.  Make any required changes for invoked TSO commands or
            CLISTS (from the #PDSGEN &C... SETC statements).
        e.  Save the changed HELP member into 'SYS1.HELP(PDSAA)'
            or a concatenated SYSHELP library as member PDSAA,
            or as PDS86 if you are not changing the name.
        f.  Note: a HELP print program is provided; see member PDSHJCL.

 .- 4.  Edit member PDSASMH as follows before submitting:
 |      *** Assembler H ***
 |      a.  Add a JOB statement.
 |      b.  To use the OS/VS assembler, change IEV90 to IFOX00 (Note:
 |          for MVS/XA, use IEV90 since a BASSM is in the CVT MACRO).
 |      c.  Change the installation library name.
 OR     d.  Change the link library name to a library that is
 |            accessible to your TSO session.  The PDS load module
 |            is a TSO command processor and is not a called program.
 |            When testing, this program should be invoked from TSO.
 |      e.  Change the SYSLMOD member name from PDS86 to PDSAA.
 |
 '--->  Edit member PDSJCLHL as follows before submitting:
        *** High Level Assembler ***
        a.  Add a JOB statement.
        b.  This uses the high level assembler (ASMA90) which is
            required for OS/390 2.4 and above.  APAR PQ13531 must
            be installed or you will get ASMA303W warnings in the
            @DIALOG assembly on the USINGs in the x'F001' ---> x'FFF8'
            location counter range.  The multiple address resolutions
            on the USING DIRLINK,R3 statements in @SUBS can be ignored.
            PDS will continue to function as expected.  The ASMA303W
            warnings can be suppressed with PARM=('USING(WARN(11))').

            Note:  A *PROCESS SUPRWARN(303) has been added to the
                   @SUBS member.

            OA22449: EXTENDED ADDRESS VOLUME (EAV) COEXISTENCE SUPPORT
            FOR LSPACE is required if you are running z/OS V1R7, V1R8,
            or V1R9.  For anything older than those, change the
            EXPDATA keyword to DATA on the LSPACE macros in @DIALOG.

        c.  Change the installation library name.
        d.  Change the link library name to a library that is
              accessible to your TSO session.  The PDS load module
              is a TSO command processor and is not a called program.
              When testing, this program should be invoked from TSO.
        e.  Change the SYSLMOD member name from PDS86 to PDSAA.

    5.  Test PDSAA (do not use ISPMODE or MEMLIST until later)
              The PDS load module PDSAA is a TSO command processor
              and is not a called program.  When testing, this
              program should be invoked from TSO as follows:
                  PDSAA dataset.name XISPMODE       or, from
              within ISPF, go to the command line and type:
                  TSO PDSAA dataset.name XISPMODE

    6.  If PDS subcommands receive 806 ABENDS (for modules such as
        COMPARE, DSPRINT, FSE, HEL, LIST, PRINTOFF, RELEASE, REVIEW,
        SPFCOPY and VPSPRINT), it is probably because options in
        member #PDSGEN were not matched with your installation.
        You should either install any missing TSO commands or fix
        the incorrect options in #PDSGEN and reassemble PDS.

    7.  To install a subcommand or TSO command authorization exit,
        see member $$$SECUR.

1B.  ISPF interface notes:

     1.  The ISPF interface consists of the PDS subcommands, BROWSE,
         EDIT, EDREC, ISPF, ISPMODE, ISPXEQ, MEMLIST and VIEW which
         request ISPF services from the PDS command.  Since release 8.0
         of PDS, the ISPMODE and MEMLIST subcommands require ISPF V2 or
         above.  The following instructions apply to ISPF V2, for V1 go
         to section C first.  Most of the following can be used with V1.
         If you are using the old SPF go to section E.

     2.  If PDS is invoked as an ISPF dialog from an ISPF selection panel,
         ISPF services can be used without restrictions.

     3.  For ISPF Version 2:  ISPF services can be used without
         restrictions when PDS is invoked from ISPF option 6 or
         from the ISPF TSO command.

     4.  If PDS is not invoked from an ISPF select panel:
         a.  ISPF services can not be used when PDS is invoked from
             another TSO command if ISPF is already active.
         b.  If PDS is invoked from READY mode or from another TSO
             command (and ISPF is not already active) and the first
             BROWSE, EDIT, ISPF, ISPMODE, MEMLIST, VIEW or OUTCOPY
             subcommand or CONTROL subcommand with a SYSOUT or DSNAME
             operand is entered, PDS attaches ISPF and directs ISPF to
             call PDS recursively as a dialog; thereafter, ISPF services
             are invoked directly.
         c.  If your installation does not have ISPF at all sites, you
             may wish to generate a copy of PDS without ISPF support
             for those sites without ISPF; then, error messages will
             not be produced when the OUTCOPY subcommand is used or
             when the CONTROL subcommand is used with its SYSOUT or
             DSNAME operands.

     5.  When a BROWSE, EDIT, ISPF, ISPMODE, MEMLIST, or VIEW subcommand
         is entered, asterisks may first appear below the entered
         subcommand; this is VTAM's page protection -- the enter key
         must be pushed to get the first ISPF screen displayed.

     6.  &CISP must be set to 'ISPFV2' for the assembly of PDS.

     7.  If an ISPF jump command (like =X) or a return key is entered
         to terminate a PDS ISPF subcommand, the next BROWSE or EDIT
         subcommand will appear to be ignored; however, if the
         subcommand is repeated, the condition clears.  Set &RETURNX
         to 'YES' in #PDSGENB to circumvent this problem; this should
         treat RETURN like END in the ISPF subcommands.

     8.  Do NOT renumber the ISPF panels

     9.  Edit member P86@CUA or P86PN@P  changing PDS86 to PDSAA

     10. Edit member PDSPJCL, change data set names and submit to
         copy panel and message members into your ISPF data sets.

     11. For information on changing your ISPF command tables for RFIND,
         RCHANGE, LEFT and RIGHT, see member $$$CTBL.  These changes
         are NECESSARY so that PDS can gain control of your PFKs for
         these commands in order to gain the benefit of these commands.

     13. The LISTC/LISTFILE function require the new versions of the
         VTOC and DSAT TSO commands, see section D.

     14. For use of the TRAP feature used with ISPMODE see member
         $$$TRAP on how to install the PDSTRAP clist.

     15. The primary panel for any version of PDS should be aliased as
         PDS@PRIM.  During testing, P86@CUA or P86PN@P should be used
         to invoke PDS version 8.6.

         Panel P86@CUA is an alternative to the P86PN@P primary panel.
         P86@CUA is a newer breed CUA panel which has code in it to use
         reference lists from the action bar.  It also has the "Learning
         PDS" tutorial by Sam Golob on the help pull-down.  Use of
         P86@CUA is recommended.

         Note:  As distributed, member PDS@PRIM is a clone copy of
         P86@CUA so you don't have to alias it to use it.

         To place PDS version 8.6 into production, the following PDS
         subcommands should be entered:

           delete pds@prim
           alias  p86@cua  pds@prim ----.
                                        |
                                        or
                                        |
           alias  p86pn@p  pds@prim <---'

     16. If you do not already use PDS@PRIM to invoke PDS, change a
         panel to call PDS@PRIM with either of the following methods
         after taking appropriate backups:
         a.  For the primary options menu, view the two change lines
             in member ISPFPRIM and make corresponding changes in
             'ISP.SISPPENU(ISR@PRIM)' -- your primary panel.
             For the example in member ISPFPRIM, the PDS@PRIM panel
             would be invoked by entering pds from the primary
             options panel or by entering =pds from any other panel.
         b.  For the utility menu (option 3), view the two change
             lines in member ISPFUTIL and make corresponding changes
             in 'ISP.SISPPENU(ISRUTIL)'.
             For the example in member ISPFUTIL, the PDS@PRIM panel
             would be invoked by entering p from the utility options
             panel or by entering =3.p from any other panel.

    17.  Exit from ISPF

    18.  Test ISPF and PDSAA (including ISPMODE and MEMLIST)
         a.  Note: you can issue TSO %PDSLIBDF from the ISPF command
         line to launch PDSAA in lieu of modifying a selection panel.
         The PDSLIBDF clist is on the distribution PDS and uses ISPF
         LIBDEF statments to allocate the necessary libraries.  To
         test with additional utilities (e.g., VTOC, DSAT, DVOL, etc.)
         you must use the TSOLIB command (from READY) to define a task
         library for these command processors.

    19.  If the results of a MEMLIST subcommand are not in ascending
         order or if member entries are duplicated, you need maintenance
         for module ISPDTRDA.  A PTF that fixes this problem is UZ49139
         from the 8602 tape.

1C.  If you have ISPF and ISPF/PDF Version 1:

     1.  ISPF Version 1 and Version 2 are the same except for the
         following:

     2.  For ISPF Version 1:  ISPF services can not be used when PDS
         is invoked from ISPF option 6 or from the ISPF TSO command.

     3.  &CISP should be set to 'ISPF' for the assembly of PDS:
         the generated code is not identical to ISPFV2'

     4.  Because MEMLIST and ISPMODE will not work most Panels are
         not used.

1D.  Additional utilities to consider:

     VTOC from the CBT tape file 112 should be reinstalled to take
     advantage of the PDS interface introduced in December, 1988

     BLKDISK from the CBT tape file 296 should be reinstalled to take
     advantage of the PDS interface introduced in January, 1989

     DSAT from the CBT tape file 296 should be reinstalled to take
     advantage of the PDS interface introduced in January, 1989

     DVOL from the CBT tape file 296 should be reinstalled to take
     advantage of the PDS interface introduced in January, 1989

     COMPARE from the CBT tape file 296 should be reinstalled to take
     advantage of the PDS interface introduced in January, 1989

     MXI from the CBT tape file 410 should be reinstalled to take
     advantage of the PDS interface introduced in November, 2005

     DISASM from the CBT tape file 217 should be reinstalled to take
     advantage of the PDS interface introduced in December, 2005

     DELINKI from the CBT tape file 090 should be reinstalled to take
     advantage of the PDS interface introduced in January, 2006

     OFFLOAD from the CBT tape file 093 should be reinstalled to take
     advantage of the PDS interface introduced in January, 2006

     PDSLOAD from the CBT tape file 093 should be reinstalled to take
     advantage of the PDS interface introduced in June, 2009

     PDSMATCH from the CBT tape file 357 should be reinstalled to take
     advantage of the PDS interface introduced in June, 2010

     RESOURCE and REBUILD from file 234 should be reinstalled to take
     advantage of the PDS interface introduced in July, 2007

     COBANAL from the CBT tape file 321 should be reinstalled to take
     advantage of the PDS interface introduced in January, 2008

     DISKMAP from the CBT tape file 792 should be reinstalled to take
     advantage of the PDS interface introduced in March, 2014

     The following utilities from the CBT tape are also
     useful with PDS and probably should be reinstalled:


 * Member     Original source   Description (CP is command processor)
 * ---------|-----------------|--------------------------------------
 * BLKDISK  | (CBT FILE 296)  | Disk block size optimizing CP
 * COBANAL  | (CBT FILE 321)  | COBOL Analysis program
 * COMPARE  | (CBT FILE 296)  | COMPARE (based on Yale program) CP
 * COMPAREC | COMXMIT member  | COMPAREC CP (Invokes SuperC compare)
 * COMPAREW | COMXMIT member  | COMPAREW CP (Invokes Comparex compare)
 * DELINKI  | (CBT FILE 090)  | Delinker program
 * DISASM   | (CBT FILE 217)  | Disassembler program
 * DISKMAP  | (CBT FILE 792)  | DISKMAP track mapping program (EAV)
 * DSAT     | (CBT FILE 296)  | Disk data set attributes display CP
 * DVOL     | (CBT FILE 296)  | Disk free space display CP
 * DWNSPDSR | (CBT FILE 090)  | Subroutine for DELINKI
 * HEL      | (CBT FILE 134)  | Full-screen HELP CP
 * MXI      | (CBT FILE 410)  | MVS eXtended Information program
 * OFFLOAD  | (CBT FILE 093)  | Offload PDS members to a sequential file
 * PDSLOAD  | (CBT FILE 093)  | Pdsload PDS members from a sequential file
 * PDSMATCH | (CBT FILE 357)  | Compare directories of 2 PDS's for matches
 * RESOURCE | (CBT FILE 234)  | Disassembler program for PDSE's
 * REBUILD  | (CBT FILE 234)  | Disassembler program for PDSE's
 * RELEASE  | (CBT FILE 296)  | DASD space release CP
 * REVIEW   | (CBT FILE 134)  | Full-screen data set display CP
 * REVSMF   | (CBT FILE 134)  | Subroutine for REVIEW
 * VTOC     | (CBT FILE 112)  | VTOC CP

   Note:  For quick install, RECEIVE INDS(installation.pds(UTILXMIT))
   to install load versions of the above command processors with the
   exception of MXI.

1E.  If you have SPF (5668-009):

     1.  &CISP should have been set to 'SPF' for the assembly of PDS.

     2.  As with ISPF, extended return (X or =X and the return key) or
         just the return key may cause PDS to ignore BROWSE, EDIT or
         ISPF subcommands.  You should research APAR OZ72295 for
         possible fixes for this situation.  &RETURNX should be set
         to 'YES' as in ISPF to circumvent some problems with this.

     3.  Note: if any BROWSE, ISPF or EDIT subcommand is terminated by
         any option request (=1, =2, ...) and the return key, the PDS
         END subcommand may result in a S30A ABEND.  PTF UZ61659 and
         its co-requisite, UZ61864, from the 8304 PUT tape should fix
         this problem.

     4.  If you have previously installed the SPF entry panel for PDS,
         you need not repeat steps 5 through 7 as the materials have
         not changed for this release of PDS.

     5.  Do NOT renumber the SPF panels

     6.  Copy member SPFMSGS into 'ISP.SISPMENU(PDSM00)' or any
         message library (ISPMLIB) data set.

     7.  Edit member SPFSEL changing all PDS86 to PDSAA and copy the
         changed member into 'ISP.SISPPENU(PDSSEL)' or any panel
         library (ISPPLIB) data set.

     8.  Change a panel to call PDSSEL with either of the following
         methods after taking appropriate backups:
         a.  For the primary options menu, view the two change lines
             in member SPFPRIM and make corresponding changes in
             'ISP.SISPENU(ISP@PRIM)' -- your primary panel.
             For the example in member SPFPRIM, the PDSSEL panel
             would be invoked by entering pds from the primary
             options panel or by entering =pds and PF key 4 from
             any other panel.
         b.  For the utility menu (option 3), view the two change
             lines in member SPFUTIL and make corresponding changes
             in 'ISP.SISPENU(ISPUTIL)'.
             For the example in member SPFUTIL, the PDSSEL panel
             would be invoked by entering p from the utility
             options panel or by entering =3.p and PF key 4 from
             any other panel.

     9.  ISPMODE and MEMLIST are not supported for SPF.

    10.  Exit from SPF

    11.  Test SPF and PDSAA (note: the PDS panel does not have any
         memory across SPF sessions as it does for ISPF sessions).

1F.  The differences between SPF and ISPF:

     1.  A difference between the SPF and the ISPF versions of
         this program are the lines labelled ISPF and ISPPANEL
         as follows from members @PDSMAIN and @SUBS:
         a.  For SPF:  "ISPF ...    PARM(++12345678)              "
                       "ISPPANEL ... PANEL(ISP@PRIM)              "
         b.  For ISPF: "ISPF ...    PARM(++12345678) NEWAPPL(ISR) "
                       "ISPPANEL ... PANEL(ISR@PRIM) NEWAPPL(ISR) "

     2.  These lines could be modified by reassembling PDS with a
         different value for &CISP or with a zap program of some kind.

     3.  If NEWAPPL(ISR) is present on a call to SPF, error messages
         will be issued and PDS will not allow any further SPF
         services to be used.

     4.  If NEWAPPL(ISR) is not present on a call to ISPF, the default
         values of ISPF's PF keys will be in effect for the PDS/ISPF
         session.

1G.  UCB Services (see member $$$UCB):

     If you are running an older MVS/ESA system (4.2.0, 4.2.2, or 4.3.0)
     that has toleration support installed for RANGE=ALL and LOC=ANY
     usage on the UCBSCAN and EDTINFO macros, then use a value of MVS510
     or higher for &MVSLEV and put hard branches after the test under
     mask (TM  CVTOSLV1-CVT(R15),HBB5510/20) instructions in modules
     @DIALALV, @DIALINE, and @DIALOG to order to invoke the proper macro
     calls.

     If you are running an older MVS/ESA system (4.2.0, 4.2.2, or 4.3.0)
     that does not have toleration support installed, the RANGE=ALL and
     LOC=ANY parameters must be removed from the UCBSCAN and EDTINFO
     macros or assembly errors will result.  See APARs OW11516 and
     OW13662.

Problems with the install or questions on the program contact...

  John Kalinich                         Sam Golob
  St Louis, MO                          Sam Golob Systems Programming
  the.pds.command@gmail.com             sbgolob@cbttape.org

  P.S.  Put "PDS 8.6" in the Subject: line of your email so it won't
        be overlooked.
