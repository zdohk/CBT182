         TITLE 'P D S  --  PDSLOAD INTERFACE                  5/26/09'
***********************************************************************
*** SEPARATE/LOAD SUBCOMMAND  ADDED BY JOHN KALINICH -- MAY., 2009  ***
***********************************************************************
*
SEPARATE CSECT
         USING *,R8
         SPACE 1
*  FREE SYSUT1, SYSUT2, AND SYSPRINT DATASETS
         LA    R1,SYSUT1A               SYSUT1 DDNAME
         BAS   R2,SEP8580               FREE THIS DATA SET
         LA    R1,SYSUT2A               SYSUT2 DDNAME
         BAS   R2,SEP8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,SEP8580               FREE THIS DATA SET
*  ALLOCATE SEPARATE //SYSUT2 DATA SET  OUTPUT PDS
*  REMOVE QUOTES OR ADD PREFIX TO DSNAME
         SPACE 1
         MVC   MSGDS1(46),BLANK128               CLEAR DSNAME AREA
         LA    R2,MSGDS1-1
         LA    R1,MSGDS2                         OUTPUT PDS
         LA    R0,46
         CLI   0(R1),C''''                       QUOTED?
         BE    SEP0010                           YES, BRANCH
         SR    R14,R14                           NO
         L     R15,ADDRUPT                       START OF THE UPT
* 8-CHAR PREFIX                                               DRK JUL17
         TM    FLAGSZZ,TSO#8                     8-CHAR ID/PREFIX?    "
         BNO   SEP7PRE                           NO                   "
SEP8PRE  DS    0H                                YES                  "
         ICM   R14,B'0001',UPTPRF8L-UPT(R15)     PREFIX LENGTH ZERO?  "
         BZ    SEP0010+4                         YES, BRANCH          "
         MVC   1(8,R2),UPTPREF8-UPT(R15)         DSNAME PREFIX        "
         B     SEPCONT                                                "
SEP7PRE  DS    0H                                                     "
         ICM   R14,B'0001',UPTPREFL-UPT(R15)     PREFIX LENGTH ZERO?  "
         BZ    SEP0010+4                         YES, BRANCH          "
         MVC   1(7,R2),UPTPREFX-UPT(R15)         DSNAME PREFIX        "
SEPCONT  DS    0H                                             DRK JUL17
         AR    R2,R14                            POSITION FOR PERIOD
         SR    R0,R14
         MVI   1(R2),C'.'
         BCTR  R0,0
         BCTR  R1,0
         LA    R2,1(,R2)
         SPACE 1
SEP0010  LA    R1,1(,R1)                         NEXT INPUT BYTE
         LA    R2,1(,R2)                         NEXT OUTPUT BYTE
         CLI   0(R1),C''''                       END OF DSNAME?
         BE    SEP0020                           YES, BRANCH
         CLI   0(R1),X'40'                       BLANK?
         BE    SEP0020                           YES, BRANCH
         MVC   0(1,R2),0(R1)                     MOVE IN ONE MORE BYTE
         BCT   R0,SEP0010
         B     SEP0020
         SPACE 1
SEP0020  DS    0H
*  LOCATE OUTPUT DSNAME
         MVC   WORKTMP(44),MSGDS1       COPY DSNAME
         L     R14,LOCATE4
         LA    R15,WORKTMP              ACTUAL DSNAME
         SR    R0,R0                    NO CVOL VALUE
         LA    R1,MSGTEXT1              LOCATE WORK AREA
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         LOCATE PARMLIST
         CLI   #SEPDISP,4               NEW?
         BNE   SEPNOTNW                 NO
         LTR   R15,R15                  SUCCESSFUL LOCATE?
         BZ    SEPDSN                   YES, ERROR
         B     SEP2000                  NO, OK
SEPNOTNW DS    0H
         LTR   R15,R15                  SUCCESSFUL LOCATE?
         BNZ   SEPNODSN                 NO, ERROR
         SPACE 1
*  OBTAIN DSCB
         L     R14,OBTAIN4              OBTAIN FLAGS
         LA    R15,WORKTMP              ACTUAL DSNAME
         LA    R0,MSGTEXT1+6            VOLUME SERIAL (FROM LOCATE)
         LA    R1,MSGTEXT2              OUTPUT START ADDRESS
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         OBTAIN PARMLIST                GET THE FORMAT 1 DSCB
         LTR   R15,R15                  SUCCESSFUL?
         BZ    SEPDSCB                  YES, BRANCH
         M$MSG L830                     NO DSCB FOUND MESSAGE
         B     NEWCMD
SEPDSN   MVI   MTLEN,44                 LENGTH OF INSERT
         MVC   INSERT#1(44),WORKTMP     DSNAME
         M$MSG L852$1                   DSNAME DOES NOT EXIST
         MVC   PMEMCURR,=XL4'00'        CURRENT MEMBER POINTER
         NI    FLAGSAA,FF-FMEM#MEM      TURN OFF MEMBER GROUP
         NI    FLAGSII,FF-FDIRGRP       NORMAL INPUT NOW
         B     NEWCMD
SEPNODSN MVI   MTLEN,44                 LENGTH OF INSERT
         MVC   INSERT#1(44),WORKTMP     DSNAME
         M$MSG L844$1
         B     NEWCMD
SEPDSCB  DS    0H
         LA    R1,L521          ASSUME A NON-PARTITIONED DATA SET
         TM    MSGTEXT2+DS1DSORG-DS1FMTID,DS1DSGPO  DSORG=PO?
         BZ    MSGNEW                   NO, BRANCH
         SPACE 1
SEP2000  DS    0H
         MVC   MSGDS1(44),WORKTMP       RESTORE DSNAME
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'SEPDDNU2+6,R3),SEPDDNU2       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPDDNU2+6(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPDSNAM,R3),SEPDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),MSGDS1                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
* DISP                                                        DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPALLOC,R3),SEPALLOC         SPECIFY DISP TEXT
         CLI   #SEPDISP,0                        ANY OLD/SHR/MOD/NEW?
         BNE   *+8                               YES, BRANCH
         MVI   #SEPDISP,2                        NO, USE DEFAULT
         SPACE 1
         CLI   #SEPDISP,1                        OLD?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),SEPOOLD                     SPECIFY DISPOSITION
         SPACE 1
         CLI   #SEPDISP,2                        SHR?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),SEPOSHR                     SPECIFY DISPOSITION
         SPACE 1
         CLI   #SEPDISP,4                        NEW?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),SEPONEW                     SPECIFY DISPOSITION
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
* DISP=NEW                                                    DRK MAR18
         CLI   #SEPDISP,4                        NEW?
         BL    SEPNW30                           NO, BRANCH
         SPACE 1
         CLI   #SEPVOL,0                         ANY VOLUME SERIAL?
         BE    SEPNW10                           NO, BRANCH
* VOLSER, UNIT                                                DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPVOLSR,R3),SEPVOLSR         SPECIFY VOLUME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         MVC   6(6,R3),#SEPVOL                   MOVE VOLSER
         LA    R3,L'SEPVOLSR(,R3)                START OF NEXT TEXT
         SPACE 1
SEPNW10  DS    0H
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPUNITP+8,R3),SEPUNITP       SPECIFY UNIT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPUNITP+8(,R3)              START OF NEXT TEXT
* DSORG, RECFM, LRECL, BLKSIZE                                DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPSDS+2,R3),SEPSDS           SPECIFY DSORG
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPSDS+2(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPSRF+1,R3),SEPSRF           SPECIFY RECFM
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPSRF+1(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPSLR,R3),SEPSLR             SPECIFY LRECL
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         MVC   6(2,R3),LRECL                     MOVE LRECL
         LA    R3,L'SEPSLR+2(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPSBL,R3),SEPSBL             SPECIFY BLKSIZE
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         MVC   6(2,R3),BLKSI                     MOVE BLKSIZE
         LA    R3,L'SEPSBL+2(,R3)                START OF NEXT TEXT
         SPACE 1
* TRK/CYL ALLOCATION                                          DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPTRK,R3),SEPTRK             SPECIFY TRACK ALLOC
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         CLI   #SEPTRCY,0                        TRK/CYL REQUESTED?
         BH    SEPNW15                           YES, BRANCH
         MVI   #SEPTRCY,1                        NO, DEFAULT TO TRK
SEPNW15  CLI   #SEPTRCY,1                        TRACK?
         BNE   *+8                               NO, BRANCH
         MVI   1(R3),X'07'                       YES, CONVERT TO TRK
         CLI   #SEPTRCY,2                        CYLINDER?
         BNE   *+8                               NO, BRANCH
         MVI   1(R3),X'08'                       YES, CONVERT TO CYL
         LA    R3,L'SEPTRK(,R3)                  START OF NEXT TEXT
         SPACE 1
* SPACE (P,S)                                                 DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPFIRST+3,R3),SEPFIRST       SPECIFY PRIMARY
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         SR    R14,R14
         ICM   R14,B'0011',#SEPSPAC              ANY PRIMARY SPACE?
         BNZ   SEPNW20                           YES, BRANCH
         B     SEPNW25                           NO, USE DEFAULT
SEPNW20  STCM  R14,B'0111',6(R3)                 UPDATE FIRST QUANTITY
SEPNW25  DS    0H
         LA    R3,L'SEPFIRST+3(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPSECON+3,R3),SEPSECON       SPECIFY SECONDARY
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         SR    R14,R14
         ICM   R14,B'0011',#SEPSPAC+2            SECONDARY SPACE?
         BZ    SEPNW30                           NO
         SPACE 1
         STCM  R14,B'0111',6(R3)                 UPDATE 2ND QUANTITY
SEPNW30  DS    0H
         LA    R3,L'SEPSECON+3(,R3)              START OF NEXT TEXT
         SPACE 1
* DIR (B)                                                     DRK MAR18
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPDIR+3,R3),SEPDIR           SPECIFY DIRECTORY BLKS
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         ICM   R0,B'1111',#SEPDIR#               ANY DIR(NUM) SPECIFIED
         BZ    SEPNW35                           NO, USE DEFAULT
         STCM  R0,B'0111',6(R3)                  UPDATE DIR COUNT
SEPNW35  DS    0H
         LA    R3,L'SEPDIR+3(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPCAT,R3),SEPCAT             DISP=(,CATLG)
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         CLI   #SEPDISP,4                        NEW?
         BE    *+8                               YES, BRANCH
         MVI   6(R3),X'08'                       NO, USE DISP=(,KEEP)
         LA    R3,L'SEPCAT(,R3)                  START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPCDEL,R3),SEPCDEL           DISP=(,,DELETE)
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         CLI   #SEPDISP,4                        NEW?
         BE    *+8                               YES, BRANCH
         MVI   6(R3),X'08'                       NO, USE DISP=(,,KEEP)
         SPACE 1
SEPNW99  DS    0H
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         DROP  R1,R4,R5
SEPDB01  DS    0H
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   SEPERROR                      NO, BRANCH
         CLI   #SEPDISP,4                    NEW?
         BNE   SEPDB02                       NO, BRANCH
         MVI   MTLEN,44                 LENGTH OF INSERT
         MVC   INSERT#1(44),MSGDS1      DSNAME
         M$MSG L273$1                   DISPLAY OUTPUT DSN *DEBUG*
SEPDB02  DS    0H
         SPACE 2
*  ALLOCATE SEPARATE //SYSUT1 DATA SET  INPUT PDS DSN
         SPACE 1
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'SEPDDNU1+6,R3),SEPDDNU1       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPDDNU1+6(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPDSNAM,R3),SEPDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPDSMBR,R3),SEPDSMBR         SPECIFY MEMBER TEXT
         MVC   6(8,R3),MEMBER1                   MOVE IN MEMBER TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPDSMBR+8(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPALLOC,R3),SEPALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPNORM,R3),SEPNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SEPNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SEPANORM,R3),SEPANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   SEPERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE SEPARATE //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),SEPDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),SEPSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   SEPERROR                   NO, BRANCH
         B     SEP2100
         SPACE 2
SEPERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    SEP8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     SEP8550
         SPACE 3
SEP2100  DS    0H
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  SEPANULL,USADDR=(R7),REPLACE=NO,IBUF=0,                 X
               OBUF=(SEP484W,SEP484WL),MF=(E,STAXPARM)
         LA    R1,SEPPARM                 PARM='UPDTE(><)'
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,SEPPGM               2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,SEP7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),SEPEFTSR       INVOKE IKJEFTSR?
         BNE   SEPNLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
SEPNLNK  BAS   R2,ATTACH                  PDSLOAD
         SPACE 3
SEP7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE
         C     R2,=F'40'                  PROGRAM NOT FOUND?
         BNE   SEP8000                    NO
         MVC   INSERT#1(8),SEPPGM         YES, ERROR
         M$MSG L859$1                     NOT FOUND MESSAGE
         B     SEP8550
         SPACE 1
SEP8000  DS    0H
         CLI   #SEPLIST,2                   NOLIST?
         BE    SEP8550                      YES
         SPACE 1
         MVC   BAMDCB(SEPDL),SEPDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSPRINT'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    SEP8010                      YES, BRANCH
         LA    R1,SEP865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     SEP8550                      EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
SEP8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(120),1(R1)      ADD THE PDSLOAD MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     SEP8010
         SPACE 3
SEP8500  DS    0H
         CLC   ##SUBCAL(8),SEPEFTSR       INVOKE IKJEFTSR?
         BNE   SEP8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1
         BL    SEP8540                    YES, VALID PDSLOAD
         MVI   MTLEN+4,11
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   SEP8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE
         SRDL  R0,12                    SHIFT USER ABEND TO R1
         ST    R0,FULLWORD              SYSTEM ABEND CODE
         MVC   INSERT#2+4(7),=C' ABEND='
         UNPK  INSERT#2+11(5),FULLWORD+2(3)
         TR    INSERT#2+11(4),TRTABLE
         MVI   INSERT#2+11,C'S'         S000
         MVI   INSERT#2+11+4,X'40'
         SPACE 1
         SRL   R1,20                    USER ABEND
         CVD   R1,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE
         MVI   INSERT#2+11+5,C'U'       U0000
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND
         SPACE 1
SEP8530  DS    0H
         M$MSG L171$2
SEP8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SYSPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
SEP8550  M$ERRST MSGBLANK
         LA    R1,=CL8'SYSPRINT'          SYSPRINT DNAME
         BAS   R2,SEP8580                 FREE THIS DATA SET
         LA    R1,SYSUT1A                 SYSUT1 DDNAME
         BAS   R2,SEP8580                 FREE THIS DATA SET
         LA    R1,SYSUT2A                 SYSUT2 DDNAME
         BAS   R2,SEP8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
SEP8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),SEPFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,SEPUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
SEPANULL BR    R14
         SPACE 2
*  SEPARATE CONSTANTS
         PRINT NOGEN
SEPDCB   DCB   DSORG=PS,DDNAME=SEP,MACRF=(GL,PM),EODAD=SEP8500
SEPDL    EQU   *-SEPDCB
         PRINT NOGEN
SEP484W  DC    C'PDS484W LOAD SHOULD NOT BE INTERRUPTED'
SEP484WL EQU   *-SEP484W
SEP865E  M$TX  'PDS865E THE LOAD OUTPUT CAN NOT BE OPENED'
         PRINT GEN
SEPEFTSR DC    CL8'IKJEFTSR'
SEPPGM   DC    CL8'PDSLOAD'                      PDSLOAD
SEPPARM  DC    AL2(SEPPARML-2)                   PARM LENGTH
         DC    C'UPDTE(><)'                      CBT STANDARD PARM
SEPPARML EQU   *-SEPPARM
SEPDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
SEPDDNU1 DC    X'000100010006',C'SYSUT1'         SYSUT1   DDNAME
SEPDDNU2 DC    X'000100010006',C'SYSUT2'         SYSUT2   DDNAME
SEPDSNAM DC    X'00020001002C'                   DSNAME
SEPDSMBR DC    X'000300010008'                   MEMBER
SEPALLOC DC    X'00040001000108'                 DISP=SHR
SEPNORM  DC    X'00050001000108'                 DISP=(,KEEP)
SEPANORM DC    X'00060001000108'                 DISP=(,,KEEP)
SEPDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
SEPFDDNA DC    X'000100010008'                   FOR FREE DDNAME
SEPNEW   DC    X'00040001000104'                 DISP=(NEW)
SEPDEL   DC    X'00050001000104'                 DISP=(,DELETE)
SEPCAT   DC    X'00050001000102'                 DISP=(,CATLG)
SEPCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
SEPPERM  DC    X'00520000'                       PERMANENT ALLOCATION
SEPUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
SEPTRK   DC    X'00070000'                       SPACE=(TRK,
SEPFIRST DC    X'000A00010003',AL3(15)           SPACE=(,15
SEPSECON DC    X'000B00010003',AL3(15)           SPACE=(,,15
SEPDIR   DC    X'000C00010003',AL3(150)          SPACE=(,,,150)
SEPOOLD  EQU   X'01'                             DISP=OLD
SEPONEW  EQU   X'04'                             DISP=NEW
SEPOSHR  EQU   X'08'                             DISP=SHR
SEPVOLSR DC    X'001000010006404040404040'       VOL=SER=
SEPUNITP DC    X'001500010008',CL8'&PUNIT'       UNIT=SYSALLDA
         SPACE 2
SEPSDS   DC    X'003C00010002',XL2'0200'         DSORG=PO
SEPSRF   DC    X'004900010001',XL1'90'           DCB=RECFM=FB
SEPSLR   DC    X'004200010002',AL2(80)           DCB=LRECL=80
SEPSBL   DC    X'003000010002',AL2(27920)        DCB=BLKSIZE=27920
         SPACE 2
SEPPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
SEPPRTSE DC    X'000B00010003',AL3(050)          SPACE=(,(,NNN))
SEPPRTIN DC    X'000900010003',AL3(27951)        SPACE=(27951)
         SPACE 1
SEPPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
SEPPRTLR DC    X'004200010002',AL2(121)          DCB=LRECL=121
SEPPRTBL DC    X'003000010002',AL2(27951)        DCB=BLKSIZE=27951
         SPACE 2
SEPSYSPR DC    A(SEPPRTFI,SEPPRTSE,SEPPRTIN)
         DC    A(SEPPRTRE,SEPPRTLR,SEPPRTBL)
         DC    A(SEPNEW,SEPDEL,SEPCDEL),X'80',AL3(SEPPERM)
SYSUT1A  DC    CL8'SYSUT1'
SYSUT2A  DC    CL8'SYSUT2'
         SPACE 3
OBTAIN4  CAMLST SEARCH,0,0,0
         ORG   OBTAIN4+4
         SPACE 3
LOCATE4  CAMLST NAME,0,,0
         ORG   LOCATE4+4
         SPACE 3
