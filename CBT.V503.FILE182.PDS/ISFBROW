/* Rexx */
   rc=isfcalls('ON')
/*************************/
/* Access the ST display */
/*************************/
   Address SDSF "ISFEXEC ST "userid()
/************************************/
/* Find TSO Userid                  */
/************************************/
   do ix=1 to JNAME.0
      if JNAME.ix = userid() & ,
        QUEUE.ix = "EXECUTION" & ,
        ACTSYS.ix <> "" then
      do
      /*****************************************/
      /* Issue the ? (JDS) action against the  */
      /* row to list the data sets in the job. */
      /******************************************/
         Address SDSF "ISFACT ST TOKEN('"TOKEN.ix"') PARM(NP ?)" ,
           "( prefix jds_"
      /**********************************************/
      /* Find the SYSnnnnn data set and read it     */
      /* using ISFBROWSE.  Use isflinelim to limit  */
      /* the number of REXX variables returned.     */
      /**********************************************/
         isflinelim=5000
         do jx=1 to jds_DDNAME.0

            if left(jds_DDNAME.jx,3) = "SYS" &,
              datatype(right(jds_DDNAME.jx,5)) = "NUM" then
            do
             /*****************************************************/
             /* Read the records from the data set.               */
             /*****************************************************/
               do until isfnextlinetoken=''

                  Address SDSF "ISFBROWSE ST TOKEN('"jds_TOKEN.jx"')"

                  do kx=1 to isfline.0
                     msg = strip(substr(isfline.kx,2))
                     if left(msg,8) = 'IEB1035I' |,
                       left(msg,8) = 'IEB1013I' |,
                       left(msg,8) = 'IEB1098I' |,
                       left(msg,8) = 'IEB147I ' Then
                     say msg
                  end
               /*****************************/
               /* Set start for next browse */
               /*****************************/
                  isfstartlinetoken = isfnextlinetoken
                  say
               end
            end
         end
      end
   end
   rc=isfcalls('OFF')
   exit
/* J. Kalinich               */
/* Rexx exec to extract XMIT/IEBCOPY messages from SYSOUT */
