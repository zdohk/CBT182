/* --------------------  rexx procedure  -------------------- *
 | Name:      PDSQINST                                        |
 |                                                            |
 | Function:  PDS 8.6 Quick Install                           |
 |                                                            |
 | Syntax:    %PDSQINST                                       |
 |                                                            |
 | Dependencies: Must be run under ISPF from the PDS          |
 |               distribution library                         |
 |                                                            |
 | Author:    Lionel B. Dyck                                  |
 |                                                            |
 | History:  (most recent on top)                             |
 |            10/29/18 - Change name for point/shoot panels   |
 |                     - Correct copy of pns panels           |
 |            09/06/18 - Update to process the LBD            |
 |                       point-and-shoot panels as an         |
 |                       XMIT file (DRK)                      |
 |            06/20/18 - Update to prompt to default          |
 |                       Compare utility                      |
 |                     - And A LOT of cleanup                 |
 |            10/31/17 - Creation (LBD)                       |
 |                                                            |
 * ---------------------------------------------------------- */
 parse source x1 x2 x3 x4 pds86dsn .

/* --------------------------------- *
 | Validate that a dsname was passed |
 * --------------------------------- */
  if pds86dsn = '' then do
    say 'This exec requires the dataset name of the pds 8.6' ,
      'distribution dataset.'
    say 'Try again . . .'
    exit 8
  end

/* ---------------------------------------- *
 | Now make sure the passed dsname is valid |
 * ---------------------------------------- */
  if sysdsn("'"pds86dsn"'") /= 'OK' then do
    say 'PDS 8.6 supplied distribution dataset name:' pds86dsn
    say 'Error:' sysdsn("'"pds86dsn"'")
    say 'Try again . . .'
    exit 12
  end

/* ----------------------------------------------- *
 | Now qualify the passed dsname and then validate |
 | that it is a PDS 8.6 distribution dataset.      |
 * ----------------------------------------------- */
  if left(pds86dsn,1) = "'"
  then p86dsn = substr(pds86dsn,2,length(pds86dsn)-2)
  else do
    p86dsn = pds86dsn
  end
  if sysdsn("'"p86dsn"($$$INST)'") /= 'OK' then do
    say p86dsn 'is not a valid PDS 8.6 distribution dataset.'
    say 'Try again. . . '
    exit 16
  end

/* ------------------------- *
 | Prompt for the target HLQ |
 * ------------------------- */
  x = PROMPT("ON") /* enable prompting */
  if sysvar('syspref') /= '' then dhlq = sysvar('syspref')
  else dhlq = sysvar('sysuid')
  say 'Enter the HLQ for the PDS 8.6 datasets to be created' ,
    'or blank for:' dhlq
  pull hlq
  if strip(hlq) = '' then hlq = dhlq
  say 'Target datasets will be created under HLQ:' hlq'.NEW.PDS86'

/* -------------------------------- *
 | Ask about Point and Shoot Panels |
 * -------------------------------- */
 say ' '
 say 'Enter any non-blank to install the LBD Custom' ,
     'Point and Shoot ISPF Panels:'
 pull pnsp
 pnsp = strip(pnsp)

/* -------------------------------- *
 | Ask about defaulting to COMPARE$ |
 * -------------------------------- */
 do forever
    say 'Enter any blank to default Compare to Super-C, '
    say '  Y to use Yale COMPARE$, or'
    say '  C to use Micro-Focus COMPAREX'
    pull pncp
    pncp = strip(pncp)
    if pncp = '' then leave
    if pos(pncp,'CY') > 0 then leave
    say 'Invalid reply:' pncp
    say 'Try again:'
    end

/* ---------------------------- *
 | Construct the target dsnames |
 * ---------------------------- */
  exec   = "'"hlq".NEW.PDS86.EXEC'"
  load   = "'"hlq".NEW.PDS86.LOAD'"
  msgs   = "'"hlq".NEW.PDS86.MSGS'"
  panels = "'"hlq".NEW.PDS86.PANELS'"
  lbdpan = "'"hlq".NEW.PDS86PN.PANELS'"

/* -------------------------- *
 | Test for existing datasets |
 * -------------------------- */
 if 'OK' = sysdsn(exec) then do
    say 'The target datasets already exist'
    say 'Delete them or select a new HLQ.'
    say 'Exiting . . .'
    exit 8
    end
/* ------------------------------- *
 | And Allocate the Target dsnames |
 * ------------------------------- */
  'Alloc ds('panels') new spa(120,90) tr dir(120)' ,
    'recfm(f b) lrecl(80) blksize(0)'
  if pnsp /= '' then do
    'Alloc ds('lbdpan') new spa(15,15) tr dir(5)' ,
      'recfm(f b) lrecl(80) blksize(0)'
    end
  'Alloc ds('exec') new spa(15,15) tr dir(56)' ,
    'recfm(f b) lrecl(80) blksize(0)'
  'Alloc ds('msgs') new spa(15,15) tr dir(12)' ,
    'recfm(f b) lrecl(80) blksize(0)'
  'Alloc ds('load') new spa(90,15) tr dir(52)' ,
    'recfm(u) blksize(32760)'
  'Free ds('panels msgs load')'

/* ------------------------ *
 | Receive the XMIT members |
 * ------------------------ */
  queue "dsn("load")"
  "Receive inds('"p86dsn"(UTILXMIT)')"
  queue "dsn("load")"
  "Receive inds('"p86dsn"(Z035XMIT)')"
  if pnsp /= '' then do
    queue "dsn("lbdpan")"
    "Receive inds('"p86dsn"(LBDPXMIT)')"
    end

/* -------------------------------------------------- *
 | If requested invoke AMASPZAP to change the default |
 | compare utility from Super-C to Yales COMPARE$ or  |
 | Micro-Focus COMPAREX.                              |
 * -------------------------------------------------- */
 if pncp /= '' then do
 'Alloc f(syslib) shr reuse ds('load')'
 'Alloc f(sysprint) ds(*) reuse'
 'Alloc f(sysin) unit(sysda) spa(1,1) tr recfm(f b)' ,
       'lrecl(80) blksize(32720) reuse'
  cc.1 = ' NAME PDS86 OPTIONS'
  cc.2 = ' VER   0EBC  C3D6D4D7,C1D9C540      COMPARE    SUBCOMMAND'
  cc.3 = ' VER   0ED0  C3D6D4D7,C1D9C5C3      COMPAREC   SUPER-C Default'
  if pncp = 'Y' then
  cc.4 = ' REP   0ED0  C3D6D4D7,C1D9C55B      COMPARE$   YALE'
  if pncp = 'C' then
  cc.4 = ' REP   0ED0  C3D6D4D7,C1D9C5E6      COMPAREW   COMPAREX'
  cc.0 = 4
  'Execio * diskw sysin (finis stem cc.'
  "Call 'sys1.miglib(amaspzap)'"
  'free f(syslib sysin sysprint)'
  'alloc f(sysprint) ds(*)'
  'alloc f(sysin) ds(*)'
  end

/* ------------------ *
 | Get into ISPF Mode |
 * ------------------ */
  Address ISPExec
  'Control Errors Return'
  'control nondispl enter'
  'libdef ispllib dataset id('load') stack'
  rexx = '(pds86x qwikfix)'
  'Select cmd(pds86' "'"p86dsn"'" 'copy' rexx exec ' shr)'
  'Select cmd(pds86' "'"p86dsn"'" 'copy (p86* pds@prim)' panels ' shr)'
  'Select cmd(pds86' "'"p86dsn"'" 'copy pdsm86' msgs ' shr)'
  if pnsp /= '' then do
     'Select cmd(pds86' lbdpan 'copy :' panels ' replace shr)'
     'Select cmd(pds86' panels 'del lbd*)'
     end
  'libdef ispllib'

  Address TSO ,
  "altlib activate dataset("exec") application(exec)"
  pds86x = substr(exec,2,length(exec)-2)||"(pds86x)"
  "Edit Dataset('"pds86x"') macro(qwikfix)" ,
        'parm(hlq)'
  Address TSO
  'altlib deactivate application(exec)'
  'delete 'lbdpan
  Address ISPExec

 /* -------------------------------- *
  | Now display the target libraries |
  * -------------------------------- */
  "LMDINIT LISTID(LISTID) LEVEL("hlq".NEW.PDS86)"
  "LMDDISP LISTID("ListId") Confirm(Yes)",
    "View(Volume)"
  "LMDFREE LISTID("ListId")"
