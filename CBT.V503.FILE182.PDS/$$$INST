 PDS Command -- Version 8.6 -- Installation

 See member $$$$QWIK for quick installs.

 Note:  This member should be printed for use in the following PDS
        generation steps; also, read the installation steps that
        apply to you before you perform any of the following steps.
        Also, be sure to print and read member $$$$READ.

 A. PDS command and the HELP member

    1.  Select a name for the PDS command (assume PDSAA for the
        following) where the name is from 1 to 8 characters long.
        Several steps can be saved by not changing the name of PDS
        but instead just use an alias for PDS86 on the load module
        and help member (skip steps A.3b,  A.4e, B.9).

        Quickstart:  Use the default name of PDS86 for the PDS command
        and installation will be much easier.

    2.  Edit member #PDSGEN (and #PDSGENB if required) to set PDS global
        assembler variables according to instructions in each member.
        Also, note the conventions used in #PDSGEN and #PDSGENB:
        a.  The default value for each operand is coded first.
        b.  For those variables which have common alternatives,
            their values are coded next as comments.
        c.  If you wish to use one of these alternatives, you need
            only convert the comment line to a valid SETC value;
            you do not need to modify the earlier default line.
        d.  It is recommended that you do not modify the default
            line; then, if you need to regenerate PDS later, the
            list of possible choices will still be available.

        Note:  The recommended alternative to updating #PDSGEN is to
        uncomment the COPY statement for #PDSGENU (at the end of
        #PDSGEN) and make your changes in that user member.  This is
        now the default.

    3.  Edit member PDSHELP as follows:
        a.  An undocumented operand of the COMPRESS subcommand (SHR)
            can be used to compress data sets which are already
            allocated.  Document this operand if you want it used
            at your installation.
        b.  Replace all occurences of -PDS86- by PDSAA (note use
            capital letters).
        c.  Make any required changes for nullified or renamed
            subcommands (from the #PDSGEN &N... SETC statements).
        d.  Make any required changes for invoked TSO commands or
            CLISTS (from the #PDSGEN &C... SETC statements).
        e.  Save the changed HELP member into 'SYS1.HELP(PDSAA)'
            or a concatenated SYSHELP library as member PDSAA,
            or as PDS86 if you are not changing the name.
        f.  Note: a HELP print program is provided; see member PDSHJCL.

    4.  Edit member PDSJCLHL as follows before submitting:
        a.  Add a JOB statement.
        b.  This uses the high level assembler (ASMA90).
        c.  Change the installation library name.
        d.  Change the link library name to a library that is
            accessible to your TSO session.  The PDS load module
            is a TSO command processor and is not a called program.
            When testing, this program should be invoked from TSO.
        e.  Change the SYSLMOD member name from PDS86 to PDSAA.

    5.  Test PDSAA (do not use ISPMODE or MEMLIST until later).
        The PDS load module PDSAA is a TSO command processor
        and is not a called program.  When testing, this
        program should be invoked from TSO as follows:

        PDSAA dataset.name XISPMODE or, from within ISPF type:
        TSO PDSAA dataset.name XISPMODE

    6.  If PDS subcommands receive 806 ABENDS (for modules such as
        COMPARE, DSPRINT, FSE, HEL, LIST, PRINTOFF, RELEASE, REVIEW,
        SPFCOPY and VPSPRINT), it is probably because options in
        member #PDSGEN were not matched with your installation.
        You should either install any missing TSO commands or fix
        the incorrect options in #PDSGEN and reassemble PDS.
        These commands must reside in a task or link library.

    7.  To install a subcommand or TSO command authorization exit,
        see member $$$SECUR.

 B. ISPF interface notes:

    1.  The ISPF interface consists of the PDS subcommands, BROWSE,
        EDIT, EDREC, ISPF, ISPMODE, ISPXEQ, MEMLIST and VIEW which
        request ISPF services from the PDS command.

    2.  If PDS is invoked as an ISPF dialog from an ISPF selection panel,
        ISPF services can be used without restrictions.

    3.  ISPF services can be used without restrictions when PDS is
        invoked from ISPF option 6 or from the ISPF TSO command.

    4.  If PDS is not invoked from an ISPF select panel:
        a.  ISPF services can not be used when PDS is invoked from
            another TSO command if ISPF is already active.
        b.  If PDS is invoked from READY mode or from another TSO
            command (and ISPF is not already active) and the first
            BROWSE, EDIT, ISPF, ISPMODE, MEMLIST, VIEW or OUTCOPY
            subcommand or CONTROL subcommand with a SYSOUT or DSNAME
            operand is entered, PDS attaches ISPF and directs ISPF to
            call PDS recursively as a dialog; thereafter, ISPF services
            are invoked directly.

    5.  When a BROWSE, EDIT, ISPF, ISPMODE, MEMLIST, or VIEW subcommand
        is entered, asterisks may first appear below the entered
        subcommand; this is VTAM's page protection -- the enter key
        must be pushed to get the first ISPF screen displayed.

    6.  &CISP must be set to 'ISPFV2' for the assembly of PDS.

    7.  If an ISPF jump command (like =X) or a return key is entered
        to terminate a PDS ISPF subcommand, the next BROWSE or EDIT
        subcommand will appear to be ignored; however, if the
        subcommand is repeated, the condition clears.  Set &RETURNX
        to 'YES' in #PDSGENB to circumvent this problem; this should
        treat RETURN like END in the ISPF subcommands.

    8.  Do NOT renumber the ISPF panels

    9.  Edit member P86@CUA or P86PN@P  changing PDS86 to PDSAA

    10. Edit member PDSPJCL, change data set names and submit to
        copy panel and message members into your ISPF data sets.

    11. For information on changing your ISPF command tables for RFIND,
        RCHANGE, LEFT and RIGHT, see member $$$CTBL.  These changes
        are NECESSARY so that PDS can gain control of your PFKs for
        these commands in order to gain the benefit of these commands.

    13. The LISTC/LISTFILE function require the new versions of the
        VTOC and DSAT TSO commands, see section C.

    14. For use of the TRAP feature used with ISPMODE see member
        $$$TRAP on how to install the PDSTRAP clist.

    15. The primary panel for any version of PDS should be aliased as
        PDS@PRIM.  During testing, P86@CUA or P86PN@P should be used
        to invoke PDS version 8.6.

        Panel P86@CUA is an alternative to the P86PN@P primary panel.
        P86@CUA is a new breed CUA panel which has code in it to use
        reference lists from the action bar.  It also has the "Learning
        PDS" tutorial by Sam Golob on the help pull-down.  Use of
        P86@CUA is recommended.

        Note:  As distributed, member PDS@PRIM is a clone copy of
        P86@CUA so you don't have to alias it to use it.

        To place PDS version 8.6 into production, the following PDS
        subcommands should be entered:

          delete pds@prim
          alias  p86@cua  pds@prim ----.
                                       |
                                       or
                                       |
          alias  p86pn@p  pds@prim <---'

    16. If you do not already use PDS@PRIM to invoke PDS, change a
        panel to call PDS@PRIM with either of the following methods
        after taking appropriate backups:
        a.  For the primary options menu, view the two change lines
            in member ISPFPRIM and make corresponding changes in
            'ISP.SISPPENU(ISR@PRIM)' -- your primary panel.
            For the example in member ISPFPRIM, the PDS@PRIM panel
            would be invoked by entering p from the primary
            options panel or by entering =p from any other panel.
        b.  For the utility menu (option 3), view the two change
            lines in member ISPFUTIL and make corresponding changes
            in 'ISP.SISPPENU(ISRUTIL)'.
            For the example in member ISPFUTIL, the PDS@PRIM panel
            would be invoked by entering p from the utility options
            panel or by entering =3.p from any other panel.

   17.  Exit from ISPF

   18.  Test ISPF and PDSAA (including ISPMODE and MEMLIST)
        a.  Note: you can issue TSO %PDSLIBDF from the ISPF command
        line to launch PDSAA in lieu of modifying a selection panel.
        The PDSLIBDF clist is on the distribution PDS and uses ISPF
        LIBDEF statments to allocate the necessary libraries.  To
        test with additional utilities (e.g., VTOC, DSAT, DVOL, etc.)
        you must use the TSOLIB command (from READY) to define a task
        library for these command processors.

 C. Additional utilities to consider:

    VTOC from the CBT tape file 112 should be reinstalled to take
    advantage of the PDS interface introduced in December, 1988

    BLKDISK from the CBT tape file 296 should be reinstalled to take
    advantage of the PDS interface introduced in January, 1989

    DSAT from the CBT tape file 296 should be reinstalled to take
    advantage of the PDS interface introduced in January, 1989

    DVOL from the CBT tape file 296 should be reinstalled to take
    advantage of the PDS interface introduced in January, 1989

    COMPARE from the CBT tape file 296 should be reinstalled to take
    advantage of the PDS interface introduced in January, 1989

    MXI from the CBT tape file 410 should be reinstalled to take
    advantage of the PDS interface introduced in November, 2005

    DISASM from the CBT tape file 217 should be reinstalled to take
    advantage of the PDS interface introduced in December, 2005

    DELINKI from the CBT tape file 090 should be reinstalled to take
    advantage of the PDS interface introduced in January, 2006

    OFFLOAD from the CBT tape file 093 should be reinstalled to take
    advantage of the PDS interface introduced in January, 2006

    PDSLOAD from the CBT tape file 093 should be reinstalled to take
    advantage of the PDS interface introduced in June, 2009

    PDSMATCH from the CBT tape file 357 should be reinstalled to take
    advantage of the PDS interface introduced in June, 2010

    RESOURCE and REBUILD from file 234 should be reinstalled to take
    advantage of the PDS interface introduced in July, 2007

    COBANAL from the CBT tape file 321 should be reinstalled to take
    advantage of the PDS interface introduced in January, 2008

    DISKMAP from the CBT tape file 792 should be reinstalled to take
    advantage of the PDS interface introduced in March, 2014

    The following utilities from the CBT tape are also
    useful with PDS and probably should be reinstalled:


 * Member     Original source   Description (CP is command processor)
 * ---------|-----------------|--------------------------------------
 * BLKDISK  | (CBT FILE 296)  | Disk block size optimizing CP
 * COBANAL  | (CBT FILE 321)  | COBOL Analysis program
 * COMPARE  | (CBT FILE 296)  | COMPARE (based on Yale program) CP
 * COMPAREC | COMXMIT member  | COMPAREC CP (Invokes SuperC compare)
 * COMPAREW | COMXMIT member  | COMPAREW CP (Invokes Comparex compare)
 * DELINKI  | (CBT FILE 090)  | Delinker program
 * DISASM   | (CBT FILE 217)  | Disassembler program
 * DISKMAP  | (CBT FILE 792)  | DISKMAP track mapping program (EAV)
 * DSAT     | (CBT FILE 296)  | Disk data set attributes display CP
 * DVOL     | (CBT FILE 296)  | Disk free space display CP
 * DWNSPDSR | (CBT FILE 090)  | Subroutine for DELINKI
 * HEL      | (CBT FILE 134)  | Full-screen HELP CP
 * MXI      | (CBT FILE 410)  | MVS eXtended Information program
 * OFFLOAD  | (CBT FILE 093)  | Offload PDS members to a sequential file
 * PDSLOAD  | (CBT FILE 093)  | Pdsload PDS members from a sequential file
 * PDSMATCH | (CBT FILE 357)  | Compare directory/data of 2 PDS's for matches
 * RESOURCE | (CBT FILE 234)  | Disassembler program for PDSE's
 * REBUILD  | (CBT FILE 234)  | Disassembler program for PDSE's
 * RELEASE  | (CBT FILE 296)  | DASD space release CP
 * REVIEW   | (CBT FILE 134)  | Full-screen data set display CP
 * REVSMF   | (CBT FILE 134)  | Subroutine for REVIEW
 * VTOC     | (CBT FILE 112)  | VTOC CP

   Note:  For quick install, RECEIVE INDS(installation.pds(UTILXMIT))
   to install load versions of the above command processors.

 Problems with the install or questions on the program contact...

  John Kalinich                         Sam Golob
  St Louis, MO                          Sam Golob Systems Programming
  the.pds.command@gmail.com             sbgolob@cbttape.org

  Greg Price
  Prycroft Six Pty. Ltd.
  service2@prycroft6.com.au

  P.S.  Put "PDS 8.6" in the Subject: line of your email so it won't
        be overlooked.
