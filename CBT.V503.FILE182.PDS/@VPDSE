         TITLE 'P D S  --  IEBPDSE INTERFACE                  2/22/11'
***********************************************************************
***      VPDSE  SUBCOMMAND   ADDED BY JOHN KALINICH -- FEB., 2011   ***
***********************************************************************
*
         SPACE 1
VPDSE    CSECT
         USING *,R8
         LA    R1,L535                 ASSUME A NON-PDSE
         TM    DS1SMSFG,DS1PDSE        PDSE DATASET?
         BNO   MSGNEW                  NO, BRANCH
         AGO   .NOFAMS
*  CALL FAMS INTERFACE UNTIL IEBPDSE IS AVAILABLE (Z/OS 1.13)
         L     R4,=V(FAMS)             FAMS SUBROUTINE
         BASR  R3,R4                   CALL SUBROUTINE
         M$ERRST MSGBLANK
         COPY  @SMS                    SMS INFO
         CLI   #VPELIST,2              NOLIST?
         BE    VPENOTX                 YES
         SPACE 1
*  PDSE STRUCTURE NOTES UNTIL IEBPDSE IS AVAILABLE (Z/OS 1.13)
         MVC   MSGTEXT1(136),MSGBL132  CLEAR THE NOTES MSG
         L     R2,=A(PDSENOTE)         PDSE STRUCTURE NOTES
VPENOTE  MVC   MSGTEXT1+04(64),00(R2)  DESCRIPTION
         LA    R2,64(,R2)              NEXT ENTRY
         M$ERRST MSGTEXT1              OUTPUT THIS NOTE
         CLI   0(R2),X'FF'             END OF TABLE?
         BNE   VPENOTE                 NO, BRANCH
         M$ERRST MSGBLANK              ONE BLANK LINE
VPENOTX  DS    0H
         B     NEWCMD                  ALL DONE
.NOFAMS  ANOP
         SPACE 1
*  FREE SYSIN, SYSLIB, AND SYSPRINT DATASETS
VPE1000  DS    0H
         LA    R1,=CL8'SYSIN'           SYSIN DDNAME
         BAS   R2,VPE8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSLIB'          SYSLIB DDNAME
         BAS   R2,VPE8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,VPE8580               FREE THIS DATA SET
*  ALLOCATE IEBPDSE //SYSLIB DATA SET
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'VPEDDNLI+6,R3),VPEDDNLI       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'VPEDDNLI+6(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'VPEDSNAM,R3),VPEDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'VPEDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'VPEALLOC,R3),VPEALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'VPEALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'VPENORM,R3),VPENORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'VPENORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'VPEANORM,R3),VPEANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   VPEERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE IEBPDSE //SYSIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),VPEDDNIN      SYSIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),VPESYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         MVC   #CMXDDIN(8),=CL8'SYSIN'    MOVE IN THE DDNAME
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   VPEERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE IEBPDSE //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),VPEDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),VPESYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDPR(8),=CL8'SYSPRINT' MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   VPEERROR                   NO, BRANCH
         SPACE 3
         B     VPE6000
         SPACE 2
VPEERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    VPE8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     VPE8550
         SPACE 3
VPE6000  DS    0H
*  OPEN SYSIN DATA SET
         MVC   BAMDCB(VPEDL),VPEDCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),#CMXDDIN
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SYSIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    VPE6010                         YES, BRANCH
         LA    R1,VPE865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     VPE8550                         EXIT
         SPACE 3
*  OUTPUT SYSIN RECORD
VPE6010  DS    0H
         AGO   .NOINPUT                   BYPASS, SYSIN NOT USED
         SPACE 1
         MVC   MSGTEXT1(136),MSGBL132     CLEAR THE MESSAGE AREA
         LA    R15,MSGTEXT1+4
         MVC   0(15,R15),VPEPDSE          VERIFY
         MVC   15(44,R15),DSNAME          DSNAME
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT IEBPDSE STATEMENT
.NOINPUT ANOP
         SPACE 1
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SYSIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  VPENULL,USADDR=(R7),REPLACE=NO,IBUF=0,                  X
               OBUF=(VPE484W,VPE484WL),MF=(E,STAXPARM)
         LA    R1,VPEPARM                 PARM=
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,VPEPGM               2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,VPE7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),VPEEFTSR       INVOKE IKJEFTSR?
         BNE   VPENLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
VPENLNK  BAS   R2,ATTACH                  IEBPDSE
         SPACE 3
VPE7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE
         C     R2,=F'40'                  PROGRAM NOT FOUND?
         BNE   VPE8000                    NO
         MVC   INSERT#1(8),VPEPGM         YES, ERROR
         M$MSG L859$1                     NOT FOUND MESSAGE
         B     VPE8550
         SPACE 1
VPE8000  MVC   BAMDCB(VPEDL),VPEDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSPRINT'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSLIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    VPE8010                      YES, BRANCH
         LA    R1,VPE865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     VPE8550                      EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
VPE8010  DS    0H
         SR    R2,R2                      ZERO COUNTER
VPE8020  GET   BAMDCB                     GET OBJECT RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(131),0(R1)      ADD THE IEBPDSE MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         LA    R2,1(,R2)                  BUMP COUNTER
         C     R2,=F'1'                   FIRST RECORD?
         BNE   *+4+6                      NO
         MVC   #VPEMSG(3),MSGTEXT1+4+3    YES, MOVE IGW MSG NUMBER
         B     VPE8020
         SPACE 3
VPE8500  DS    0H
         CLI   #VPELIST,2              NOLIST?
         BE    VPE8510                 YES
         CLC   #VPEMSG(3),=CL3'700'    PDSE VALIDATION SUCCESSFUL?
         BNE   VPE8510                 NO
         SPACE 1
*  IGW700I MESSAGE NOTES
         M$ERRST MSGBLANK              ONE BLANK LINE
         MVC   MSGTEXT1(136),MSGBL132  CLEAR THE NOTES MSG
         L     R2,=A(IGW700I)          IGW700I MSG NOTES
VPENOTE2 MVC   MSGTEXT1+4(64),0(R2)    DESCRIPTION
         LA    R2,64(,R2)              NEXT ENTRY
         M$ERRST MSGTEXT1              OUTPUT THIS NOTE
         CLI   0(R2),X'FF'             END OF TABLE?
         BNE   VPENOTE2                NO, BRANCH
VPE8510  DS    0H
         CLC   ##SUBCAL(8),VPEEFTSR       INVOKE IKJEFTSR?
         BNE   VPE8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1                DRK JUL11
         BL    VPE8540                    YES, VALID IEBPDSE
         MVI   MTLEN+4,11                 NO, ISSUE MESSAGE
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   VPE8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE
         SRDL  R0,12                    SHIFT USER ABEND TO R1
         ST    R0,FULLWORD              SYSTEM ABEND CODE
         MVC   INSERT#2+4(7),=C' ABEND='
         UNPK  INSERT#2+11(5),FULLWORD+2(3)
         TR    INSERT#2+11(4),TRTABLE
         MVI   INSERT#2+11,C'S'         S000
         MVI   INSERT#2+11+4,X'40'
         SPACE 1
         SRL   R1,20                    USER ABEND
         CVD   R1,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE
         MVI   INSERT#2+11+5,C'U'       U0000
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND
         SPACE 1
VPE8530  DS    0H
         M$MSG L171$2
VPE8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SYSPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
VPE8550  M$ERRST MSGBLANK
         LA    R1,#CMXDDPR                SYSPRINT DDNAME
         BAS   R2,VPE8580                 FREE THIS DATA SET
         LA    R1,#CMXDDIN                SYSIN DDNAME
         BAS   R2,VPE8580                 FREE THIS DATA SET
         LA    R1,=CL8'SYSLIB'            SYSLIB DDNAME
         BAS   R2,VPE8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
VPE8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),VPEFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,VPEUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
VPENULL  BR    R14
         SPACE 2
*  VPDSE CONSTANTS
         PRINT NOGEN
VPEDCB   DCB   DSORG=PS,DDNAME=VPE,MACRF=(GL,PM),EODAD=VPE8500
VPEDL    EQU   *-VPEDCB
         PRINT NOGEN
VPE484W  DC    C'PDS484W VPDSE SHOULD NOT BE INTERRUPTED'
VPE484WL EQU   *-VPE484W
VPE865E  M$TX  'PDS865E THE VPDSE OUTPUT CAN NOT BE OPENED'
         PRINT GEN
VPEEFTSR DC    CL8'IKJEFTSR'
VPEPGM   DC    CL8'IEBPDSE'                      IEBPDSE
VPEPARM  DC    AL2(VPEPARML-2)                   PARM LENGTH
* PARM(<DUMP|NODUMP,><FLUSH|NOFLUSH,>            IEBPDSE PARM
*      <NOAANLYSIS,><PERFORMPENDINGDELETE>)
VPEPARML EQU   *-VPEPARM
*
VPEDDNLI DC    X'000100010006',C'SYSLIB'   L=6   SYSLIB   DDNAME
VPEDDNIN DC    X'000100010005',C'SYSIN'    L=5   SYSIN    DDNAME
VPEDDNPR DC    X'000100010008',C'SYSPRINT' L=8   SYSPRINT DDNAME
VPEDSNAM DC    X'00020001002C'             L=44  DSNAME
*
VPEALLOC DC    X'00040001000108'                 DISP=SHR
VPENORM  DC    X'00050001000108'                 DISP=(,KEEP)
VPEANORM DC    X'00060001000108'                 DISP=(,,KEEP)
VPEDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
VPEFDDNA DC    X'000100010008'                   FOR FREE DDNAME
VPENEW   DC    X'00040001000104'                 DISP=(NEW)
VPEDEL   DC    X'00050001000104'                 DISP=(,DELETE)
VPECDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
VPEPERM  DC    X'00520000'                       PERMANENT ALLOCATION
VPEUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
VPEPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
VPEPRTSE DC    X'000B00010003',AL3(100)          SPACE=(,(,NNN))
VPEPRTIN DC    X'000900010003',AL3(27951)        SPACE=(27951)
VPESINSP DC    X'000900010003',AL3(3120)         SPACE=(3120)
         SPACE 1
VPEPRTRE DC    X'004900010001',XL1'80'           DCB=RECFM=F
VPEPRTLR DC    X'004200010002',AL2(131)          DCB=LRECL=131
VPEPRTBL DC    X'003000010002',AL2(131)          DCB=BLKSIZE=131
         SPACE 2
VPESINRE DC    X'004900010001',XL1'80'           DCB=RECFM=F
VPESINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
VPESINBL DC    X'003000010002',AL2(80)           DCB=BLKSIZE=80
         SPACE 2
VPESYSIN DC    A(VPEPRTFI,VPEPRTSE,VPESINSP)
         DC    A(VPESINRE,VPESINLR,VPESINBL)
         DC    A(VPENEW,VPEDEL,VPECDEL),X'80',AL3(VPEPERM)
VPESYSPR DC    A(VPEPRTFI,VPEPRTSE,VPEPRTIN)
         DC    A(VPEPRTRE,VPEPRTLR,VPEPRTBL)
         DC    A(VPENEW,VPEDEL,VPECDEL),X'80',AL3(VPEPERM)
         SPACE 2
VPEPDSE  DC    CL15' VERIFY DSNAME='   SYSIN NOT USED IN IEBPDSE
         COPY  @IGW700I
*        COPY  @PDSE                   PDSE STRUCTURE NOTES  ** TEST **
         SPACE 2
