/* --------------------  rexx procedure  -------------------- *
 | Name:      PLUG                                            |
 |                                                            |
 | Function:  PLUG macro is used to plug data into a range of |
 |            lines starting at a given column.               |
 |                                                            |
 | Use:       If .from and .to labels are not specified,      |
 |            then mark the lines with the On or OO           |
 |            range line command.                             |
 |                                                            |
 |            If column is not specified, the cursor position |
 |            will be used.                                   |
 |                                                            |
 | Syntax:    PLUG string startcol .from .to                  |
 |                                                            |
 | Author:    Janko Kalinic                                   |
 |                                                            |
 | History:  (most recent on top)                             |
 |            11/12/93 - Creation                             |
 * ---------------------------------------------------------- */
Address ISRedit
"isredit macro (plugstr col label1 label2) NOPROCESS"
trace
if plugstr = '?' |,
   translate(plugstr) = 'HELP' then
  do
    Address ISPexec "display panel(plug#)"
    exit 1
  end
if plugstr = '' then
  do
    zedsmsg = 'No plug string'
    zedlmsg = 'You must specify a plug string'
    Address ISPexec "setmsg msg(isrz001)"
    exit 12
  end
/* See if labels were used with no column specified */
if substr(col,1,1) = '.' then
  do
    label2 = label1
    label1 = col
    col = ''
  end
/* If no column specified, then use cursor position */
if col = '' then
  do
    "isredit (end)  = lrecl"
    "isredit (cl,cc) = cursor"
    if cc = 0 |,
       cc > end then
      do
        zedsmsg = 'Specify start column'
        zedlmsg = 'Use a number or cursor location for start of plug'
        Address ISPexec "setmsg msg(isrz001)"
        exit 12
      end
    else
      col = cc
  end
else
  if datatype(col) <> 'NUM' then
    do
      zedsmsg = 'Start column not numeric'
      zedlmsg = 'Use a numeric for the start column number'
      Address ISPexec "setmsg msg(isrz001)"
      exit 12
    end
/* If .labels were specified, ignore (O) line range */
if substr(label1,1,1) = '.' then
  do
    label1 = translate(label1)
    label2 = translate(label2)
    Address ISPexec "control errors return"
    "isredit (fr)  = linenum "label1
    if rc > 0 then
      do
        zedsmsg = 'Probable label error'
        zedlmsg = '"'label1'" recognized as invalid',
                  'or undefined label in plug cmd'
        Address ISPexec "setmsg msg(isrz001)"
        exit 12
      end
    "isredit (lr)  = linenum "label2
    if rc > 0 then
      do
        zedsmsg = 'Probable label error'
        zedlmsg = '"'label2'" recognized as invalid',
                  'or undefined label in plug cmd'
        Address ISPexec "setmsg msg(isrz001)"
        exit 12
      end
    /* set cursor on first line in range */
    "isredit cursor = "label1 "1"
    labels = 'yes'
  end
/* Process line commands, check if o/c was specified */
Address ISPexec "control errors return"
"isredit process range O C"
if rc > 0 &,
   labels <> 'yes' then
  do
    zedsmsg = 'Enter "O" line cmd'
    zedlmsg = 'You must specify the "data" lines',
              'to be plugged, using "On" or "OO",',
              'or labels'
    Address ISPexec "setmsg msg(isrz001)"
    exit 12
  end
if labels <> 'yes' then
  do
    "isredit (fr)  = linenum .zfrange"
    "isredit (lr)  = linenum .zlrange"
    /* set cursor on first line in range */
    "isredit cursor = .zfrange 1"
  end

pluglen = length(plugstr)
/* Check for plug string delimiters */
if substr(plugstr,1,1) = "'" |,
   substr(plugstr,1,1) = '"' then
  pluglen = pluglen - 2
else
  plugstr = "'"plugstr"'"
anychar = copies('=',80)
i = fr
do while i <= lr
  "isredit change p'"substr(anychar,1,pluglen)"'" plugstr col
  chgcc = rc
  if chgcc > 0 then
    do
      zedsmsg = "Plug failed, rc="chgcc
      zedlmsg = "Target lines "fr+0" to "lr+0" at column" col+0
      Address ISPexec "setmsg msg(isrz001)"
      exit 12
    end
  i = i + 1
end
zedsmsg = "Chars "plugstr" plugged"
zedlmsg = "Chars "plugstr" plugged in lines "fr+0" to "lr+0" at column" col+0
Address ISPexec "setmsg msg(isrz001)"
/* Set cursor on first line in range */
"isredit cursor = "fr col
exit 0
/* Janko K */
/* Edit macro to plug data into a range of lines */
