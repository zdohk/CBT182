-
-
-
-
0
-                    EFFECTIVE USE OF THE TSO PDS COMMAND, PART 2
+                    ____________________________________________
0
-                             PDS Version 8.6
+                             _______________
-                             John Kalinich



-

-
0                             Contents last updated on
                              February 20, 2022 for PDS 8.6
1
0
1                               TABLE OF CONTENTS                        PAGE- 3
+                               _________________
-        Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
-        Subcommands. . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
            AMBLIST . . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
            BROWSE  . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
            COBANAL . . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
            COMPRESS. . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
            CONDEND . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
            DISASM. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
            DLINK . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
            DSNAME  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
            EDREC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
            ISPXEQ. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20
            LMA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
            LOAD. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
            MATCH . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
            MXIBAT. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
            OFFLOAD . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
            OPTIONS . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
            PTSEXP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27
            SMPGEN. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
            SRCHFOR . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
            SUBMIT  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
            TRKMAP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
            VIEW. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
            VPDSE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
            XMIT. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34
            XISPMODE. . . . . . . . . . . . . . . . . . . . . . . . . . . . 35
         Appendix A: External Programs. . . . . . . . . . . . . . . . . . . 36
         Appendix B: User Commands. . . . . . . . . . . . . . . . . . . . . 37
         Appendix C: Acknowledgements . . . . . . . . . . . . . . . . . . . 38
1                            INTRODUCTION                                PAGE- 4
+                            ____________
- This document is intended to provide systems programmers and
  other users of the PDS command with examples and notes on using
  the command effectively.
-
     History
+    _______
0    PDS was originally written in 1972 at Security Pacific National Bank
     by programmers Tom Springer, William Finkelstein, and Steve Smith.

     Bruce Leland and Steve Smith updated and enhanced PDS from 1975-1990.
     John Kalinich and Greg Price are the programmers who now maintain PDS.

     Since the PDS command was written, it has grown in size and
     complexity:
        A.  Number of subcommands (was 12, now 65)
        B.  Number of source statements (was 4050, now 66586)
        C.  Number of HELP statements (was 500, now 10416)
        D.  Size of load module (was 16K, now 365K)
-
     Purpose
+    _______
0    The PDS command was designed to manipulate PDS's or partitioned
     data sets. PDSE support was added in PDS v8.6.  In the past, only
     non-authorized functions have been performed by the PDS command.

     Sequential data sets are also allowed for several of the PDS
     subcommands which process target data sets (BROWSE, COPY, DSPRINT,
     EDIT, FIND, FIXPDS, FSE, LIST, PRINTOFF, REPLACE, REVIEW, SUBMIT,
     TSOEDIT, TSOLIST, VERIFY, VIEW and VPSPRINT).  The documented
     syntax is changed in that no data is entered for the member name
     position.

     Thus, a LIST subcommand such as LIST MEMBERXX SKIPREC(20) for a
     partitioned data set would be entered as LIST SKIPREC(20) for a
     sequential data set.
-
     Operation
+    _________
0    The PDS command accepts the name of a target data set, allocates
     the data set, and processes subcommands entered by the user.

     PDS is a standard TSO command processor which uses PUTLINE,
     GETLINE, and PUTGET MACRO's for terminal communication.  PDS
     subcommands which perform full screen output use ISPF dialog
     services.  The command processor is reentrant and refreshable.
-
1                            SUBCOMMANDS                                 PAGE- 5
+                            ___________
- On the following pages, examples are provided for several of the PDS
  subcommands.  Note that for each example, command inputs are provided
  in lower-case and system messages are in upper-case.

  Note:  These are subcommands added since PDS v7.3 (see $$$PROSE),
         and those not documented in $$$PROSE.
0
- AMBLIST
+ _______
0 The AMBLIST subcommand lists the load module map, cross-reference map,
  and CSECT identification records (IDR).

- Example 1: a LISTIDR and LISTLOAD for module IEFBR14.
+ __________
  amblist  iefbr14

   LISTIDR   DDN=SYSLIB,OUTPUT=ALL,MEMBER=IEFBR14

                    *****  M O D U L E   S U M M A R Y  *****
      MEMBER NAME:  IEFBR14        MAIN ENTRY POINT:    00000000
      LIBRARY:      SYSLIB         AMODE OF MAIN ENTRY POINT: 24
          NO ALIASES **
   -----------------------------------------------------------------------
         ****          ATTRIBUTES OF MODULE           ****
   **   BIT  STATUS   BIT  STATUS         BIT  STATUS    BIT  STATUS   **
         0  RENT       1  REUS             2  NOT-OVLY    3  NOT-TEST
         4  NOT-OL     5  BLOCK            6  EXEC        7  1-TXT
         8  NOT-DC     9  ZERO-ORG         10 EP-ZERO     11 NO-RLD
         12 EDIT       13 NO-SYMS          14 F-LEVEL     15 NOT-REFR
   -----------------------------------------------------------------------
                      MODULE SSI:        NONE
                      APFCODE:           00000000
                      RMODE:             24
                      LONGPARM:          NO

     *****LOAD MODULE PROCESSED EITHER BY VS LINKAGE EDITOR OR BINDER
                             LISTIDR FOR LOAD MODULE IEFBR14

     THIS LOAD MODULE CONTAINS NO INFORMATION SUPPLIED BY SPZAP
   -----------------------------------------------------------------------
     THIS LOAD MODULE WAS PRODUCED BY THE BINDER
     5695PMB01  AT LEVEL 02.02 ON DAY 141 OF YEAR 2015 AT 16:03:28.
   -----------------------------------------------------------------------
      CSECT        TRANSLATOR               VR.MD            YR/DY
      IEFBR14      566896201                02.01          2005/339
   -----------------------------------------------------------------------
      CSECT          YR/DAY                 USER DATA
      IEFBR14      2006/012                 RSI53390780
1                                                                        PAGE- 6
   LISTLOAD DDN=SYSLIB,OUTPUT=XREF,MEMBER=IEFBR14

                    *****  M O D U L E   S U M M A R Y  *****
      MEMBER NAME:  IEFBR14         MAIN ENTRY POINT:    00000000
      LIBRARY:      SYSLIB          AMODE OF MAIN ENTRY POINT: 24
          NO ALIASES **
   -----------------------------------------------------------------------
         ****          ATTRIBUTES OF MODULE           ****
   BIT  STATUS         BIT  STATUS         BIT  STATUS     BIT  STATUS   **
    0  RENT             1  REUS             2  NOT-OVLY     3  NOT-TEST
    4  NOT-OL           5  BLOCK            6  EXEC         7  1-TXT
    8  NOT-DC           9  ZERO-ORG         10 EP-ZERO      11 NO-RLD
    12 EDIT             13 NO-SYMS          14 F-LEVEL      15 NOT-REFR
   -----------------------------------------------------------------------
                      MODULE SSI:        NONE
                      APFCODE:           00000000
                      RMODE:             24
                      LONGPARM:          NO

     *****LOAD MODULE PROCESSED EITHER BY VS LINKAGE EDITOR OR BINDER
          NUMERICAL MAP AND CROSS-REFERENCE LIST OF LOAD MODULE IEFBR14

   CONTROL SECTION
    LMOD LOC     NAME      LENGTH  TYPE  RMODE
         00    IEFBR14         04   SD    24
    LENGTH OF LOAD MODULE      08

          ALPHABETICAL MAP OF LOAD MODULE IEFBR14

   CONTROL SECTION
      NAME     LMOD LOC   LENGTH  TYPE   RMODE
    IEFBR14         00        04   SD     24

   **    END OF MAP AND CROSS-REFERENCE LISTING
1                                                                        PAGE- 7
  BROWSE
+ ______
0 The BROWSE subcommand enters ISPF browse for a member.
- Example 1: browse a member.
+ __________

  browse pdsjcl
   ---screen clear---

   BROWSE    HABL.LIB.PDS60(PDSJCL) - 60.00         Line 0000000000 Col 001 080
   COMMAND ===> _                                               Scroll ===> CSR
   ************************************ Top of Data ****************************
   //ONE   EXEC  PGM=ASMBLR,REGION=2048K,
   //             PARM=(NORLD,RENT,TERM,NOSTMT,'LINECOUNT(55)',
   //             'XREF(SHORT),BUFSIZE(MAX),SYSPARM(ISPF)')

- Note 1: to obtain an ISPF member list from which you may select members
+ _______
          to browse, enter:
  browse :
1                                                                        PAGE- 8
  COBANAL
+ _______
0 The COBANAL subcommand analyzes a COBOL load module.
- Example 1: the attributes of a COBOL load module are listed.
+ __________
  cobanal  badidr

   COBANAL V1.42 - DETAIL Report.   Dataset=AD.CMDLIB
                   PARM=BADIDR

   ------------ Info -----------------------------------------------------
   Program: BADIDR   is COBOL Enterprise Version 03 Release 02 Modlevel 00

   ------------ Timestamps -----------------------------------------------
   Compiled program name AR08950
   Date: 27.05.2004 (european) 27.May.2004 (long)  Time: 17:15:56

   ------------ Statistics -----------------------------------------------
   Number of data items  :     299
   Number of instructions:     213

   ------------ Options in effect ----------------------------------------
    ADV     APOST   DATA(31)  NODECK   NODUMP  DYNAM      FASTSRT
    MAP     NONUM   OBJ       OFFSET   NOOPTIMIZE         OUTDD(Supplied)
    RES     NOSEQ   SIZE(MAX) SOURCE   NOSSRANGE          NOTERM    NOTEST
    VBREF   XREF    ZWB       NONAME           NUMCLS(PRIM)          DBCS
    NOCURRENCY      Compilation unit = Program
    RMODE(ANY)      NO TEST(STMT)      NO TEST(PATH)      NO TEST(BLOCK)
    INTDATE(ANSI)   NO TEST(SEPARATE)          NOT PGMNAME(LONGUPPER)
    NODLL           NOEXPORTALL        NODATEPROC         YEARWINDOW(1900)
    NOOPT OR OPT(STD)          LIB             NOLIST   AWO       NOEVENTS
    NOT PGMNAME(LONGMIXED)     NUMPROC(NOPFD)  RENT
    ARITH(COMPAT)   NOTHREAD   TRUNC(BIN)      NOWORD   CODEPAGE(1140)

   ------- Info about DATA DIVISION    -----------------------------------
   Program use QSAM or SAM access method
   Program use no VSAM sequential files
   Program use no VSAM indexed files
   Program use no VSAM RBA files
   Program use no CODE-SET (ASCII files)
   Program use no spanned records
   Program has no picture G (DBCS) items
   Program has no OCCURS DEPENDING ON items
   Program has no SYNCHRONIZED clause
   Program has no JUSTIFIED clause
   Program has no POINTER items
   Program has no complex ODO clause
   Program has no external floating-point items
   Program has no internal floating-point items
   Program has no Proc-Pointer or Func-Pointer items
   The working storage size is    105552
1                                                                        PAGE- 9
   ------- Info about ENVIRONMENT DIVISION -------------------------------
   Program use no FILE-STATUS clause
   Program use no RERUN clause in I/O-control
   Program use no UPSI switches
   Program address TGT via R13
   ------- Info about PROCEDURE DIVISION  --------------------------------
   Following statements in control (check Y/N):
    Accept        Y  Add           Y  Alter         N  Call          Y
    Compute       N  Delete        N  Display       Y  Divide        N
    Entry         N  Exit          Y  Go to         Y  If            Y
    Inspect       N  Merge         N  Move          Y  Multiply      N
    Read          Y  Release       N  Return        N  Rewrite       N
    Sort          N  Start         N  Stop          N  String        Y
    Use           N  Write         Y  Continue      Y  End-Add       N
    End-Delete    N  End-Divide    N  End-Evaluate  N  End-If        Y
    End-Return    N  End-Rewrite   N  End-Search    N  End-Start     N
    End-Unstring  N  End-Write     N  Goback        Y  Evaluate      N
    Cancel        N  Close         Y  XML           N  End-XML       N
    End-Perform   N  Enter         N  End-Call      N  End-Compute   N
    Initialize    Y  Invoke        N  End-Multiply  N  End-Read      N
    Open          Y  Perform       Y  End-String    N  End-Subtract  N
    Search        N  Set           N  Service       N  End-Invoke    N
    Subtract      N  Unstring      N  Exec          N  End-Exec      N
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

   No hexadecimal literals
   No altered GO TO
   No I/O error declarative
   No Label declarative
   No Debugging declarative
   No Program segmentation
   No Open Extend
   No Exit Program
   Call literal (static?), see options
   No Call identifier
   No Call on overflow
   No Call length of
   No Call address of
   No Close reel/unit
   No Exponentiation used
   No Floating point items used
   Copy-Statements
   No Basis-Statements
   No DBCS-Name in Program
   No Shift-In/Shift-Out
   No DBCS literal
   No Replace-Statements
   Reference modification was used
   No Nested Program
1                                                                        PAGE-10
   No INITIAL Program
   No COMMON Program
   No Select Optional Files
   No External Files
   No Global Files
   No Record is varying clause
   No Accept from SYSIPT used in Label Declarative
   No Display upon SYSLST used in Label Declarative
   No Display upon SYSPCH used in Label Declarative
   Intrinsic function was used
   No Function Random was used
   No Java-based OO syntax was used
   No National data was used
   ------------ FCB-Analysis ---------------------------------------------
   DDName   RecFM Acc  DSOrg RecL   Blk  RM
   AR8950AI FB    SEQ  PS     100     0  F     Input Close Read-IO E
   AR8950BI FB    SEQ  PS     100     0  F     Input Close Read-IO E
   AR8950AO FB    SEQ  PS     100     0  F     Output Close Write-IO E
   AR8950AP FA    SEQ  PS     134   134  F     Output Close Write-IO L

   ------- Info about the Binder          --------------------------------
   This program contains the following CSECTS

     $PRIV00000001
     Bound   : B_IDRB 2004.148 5695PMB01  V01 M03 z/OS Binder

     AR08950
               B_IDRL 2004.148 5655G5300  V32 M00 Ent. Cob
               B_ESD           Length: 00002F24 Offset: 00000000
               B_IDRU 2004.148 0í     øÀð    øT¸ø         ­ Âð    F· m0
     DFHXCSTB
               B_IDRL 2000.272 569623400  V01 M02 ASMA90
               B_ESD           Length: 00000152 Offset: 00002F28
               B_IDRU 2001.262 UQ46987
     CEESG005
               B_IDRL 2002.095 569623400  V01 M04 ASMA90
               B_IDRL 2002.095 PL/X-370   V01 M04
               B_ESD           Length: 00000018 Offset: 00003080
               B_IDRU 2002.095 RSI20951023
     CEEGMTO
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_ESD           Length: 00000014 Offset: 00003098
     CEEDATE
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_ESD           Length: 00000014 Offset: 000030B0
     CEELOCT
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_ESD           Length: 00000014 Offset: 000030C8
1                                                                        PAGE-11
     CEEBETBL
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_ESD           Length: 00000028 Offset: 000030E0
     CEESTART
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_ESD           Length: 000000B0 Offset: 00003108
     IGZCBSO
               B_IDRL 2002.095 569623400  V01 M04 ASMA90
               B_IDRL 2002.095 PL/X-370   V01 M04
               B_ESD           Length: 00000568 Offset: 000031B8
               B_IDRU 2002.095 RSI20950481
     CEEARLU
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_IDRL 2002.109 PL/X-390   V02 M01
               B_ESD           Length: 000000B0 Offset: 00003720
     CEEBPIRA
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_IDRL 2002.109 PL/X-390   V02 M01
               B_ESD           Length: 000002D8 Offset: 000037D0
     CEECPYRT
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_IDRL 2002.109 PL/X-390   V02 M01
               B_ESD           Length: 000000E2 Offset: 00003AA8
     CEEBPUBT
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_ESD           Length: 00000070 Offset: 00003B90
     CEEBTRM
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_ESD           Length: 000000A4 Offset: 00003C00
     CEEBLLST
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_ESD           Length: 0000005C Offset: 00003CA8
     CEEBINT
               B_IDRL 2002.109 569623400  V01 M04 ASMA90
               B_IDRL 2002.109 PL/X-390   V02 M01
               B_ESD           Length: 00000008 Offset: 00003D08

   ------- Info about the CEEUOPT/#pragma/PLXOPT -------------------------
   No LE User Options present

   ------------ CICS (contains also included Csects) ---------------------
   CICS Precompiler Version: n/a
   CICS Stub Version: n/a
   CICS EXCI Version: 530

   Note: This program uses the CICS EXCI Interface.
1                                                                        PAGE-12
                   BMS Maps:    0
                   COBOL V4:    0
                OS/VS/COBOL:    0
                  VS/COBOL2:    0
        LE-conforming COBOL:    1
                      C/C++:    0
                    FORTRAN:    0
                    INVALID:    0
                  Assembler:    0
       LE Enabled Assembler:    0
                      OTHER:    0
                  EZTrieve+:    0
                       PL/I:    0
                    UNKNOWN:    0

      Total loaded Programs:    1
   (includes do not count)

        Could not be Loaded:    0
   Total Programs processed:    1


1                                                                        PAGE-13
   COBANAL V1.42 - SUMMARY Report.  Dataset=AD.CMDLIB
                   PARM=BADIDR

                       |Translate||--C o m p i l e r  R e l a t e d--|
   Program   Language  CICS COBOL  Compiler          LE  DATA RM  RENT
   --------- --------- ---- ------ ----------------- --- ---- --- ----
   BADIDR    COBOL     X530        COBOL/ENT V3.2.0  YES  31  ANY YES

   |--L K E D   O p t i o n s--|
   AM  LKED ATTRIBUTES           COMPDATE
   --- ------------------------- -----------
   31  RENT REUS                 27.May.2004

                   BMS Maps:    0
                   COBOL V4:    0
                OS/VS/COBOL:    0
                  VS/COBOL2:    0
        LE-conforming COBOL:    1
                      C/C++:    0
                    FORTRAN:    0
                    INVALID:    0
                  Assembler:    0
       LE Enabled Assembler:    0
                      OTHER:    0
                  EZTrieve+:    0
                       PL/I:    0
                    UNKNOWN:    0

      Total loaded Programs:    1
   (includes do not count)

        Could not be Loaded:    0
   Total Programs processed:    1
1                                                                        PAGE-14
  COMPRESS
+ ________
0 The COMPRESS subcommand invokes IEBCOPY (or a compatible program)
  to compress a partitioned data set.

  Note: a COMPRESS operation should not be interrupted with an attention
  since data sets are updated in-place.
- Example 1: compress a partitioned data set.
+ __________

  compress

   - DSN=TRIDJK.CLIST,VOL=SER=CBT001  MEM= -----------------------------
   >compress
   PDS480W COMPRESS IS IN PROGRESS
   IEB1135I IEBCOPY  FMID HDZ2250  SERVICE LEVEL UJ05520  DATED 20210505
   IEB1035I TRIDJK   QCBTPRFM QCBTPRFM 11:15:02 THU 17 FEB 2022 PARM=''
   QCBTPRFM COPY      INDD=SYS00062,OUTDD=SYS00062     GENERATED STATEMENT
   IEB1018I COMPRESSING  PDS  OUTDD=SYS00062 VOL=CBT001 DSN=TRIDJK.CLIST
   IEB1097I FOLLOWING MEMBER(S) MOVED IN DATA SET REFERENCED BY SYS00062
   IEB1098I 12 OF 12 MEMBERS MOVED IN DATA SET REFERENCED BY SYS00062
   IEB144I THERE ARE 14 UNUSED TRACKS IN OUTPUT DATA SET REFERENCED BY SYS00062
   IEB149I THERE ARE 2 UNUSED DIRECTORY BLOCKS IN OUTPUT DIRECTORY
   IEB147I END OF JOB - 0 WAS HIGHEST SEVERITY CODE

1                                                                        PAGE-15
  CONDEND
+ _______
0 The CONDEND subcommand terminates PDS if any subcommand has one or
  more warning or error level messages.  This command is normally
  used in TSO batch or CLIST execution.

- Example 1: PDS ends after PDS980E error message from COPY.
+ __________
  condend errors
  copy pdshelp 'ad.help2'
  change 'ad.help2'
  condend off  /* Turn off for delete */
  delete (pds86, pds, pdse)
  rename pdshelp pds86
  alias pds86 pds
  alias pds86 pdse
  end

   PDS484W COPY IS IN PROGRESS
   PDS980E IEBCOPY WAS INTERRUPTED
   IEB1135I IEBCOPY  FMID HDZ1D10  SERVICE LEVEL UA61306  DATED 20110713 D
    13.00 z/OS    01.13.00 HBB7780  CPU 2818
   IEB1035I TRIDJK   $LOGDED  $LOGDED  14:11:35 MON 02 DEC 2013 PARM=''
    COPY    O=SYS00097,I=SYS00092
    S M=PDSHELP
  IEB1013I COPYING FROM PDS   INDD=SYS00092 VOL=PERM80 DSN=AD.FILE182.PDS484
  IEB1014I           TO PDS  OUTDD=SYS00097 VOL=PERM60 DSN=AD.HELP2
  IEB1163E SYSTEM ABEND X'D3700000' OCCURRED, TERMINATING IEBCOPY
  IEB151I JOB HAS TERMINATED WITH ERROR(S)
  IEB147I END OF JOB - 8 WAS HIGHEST SEVERITY CODE

  PDS261I PROGRAM TERMINATED BY CONDEND FOR MESSAGE PDS980E
  READY
1                                                                        PAGE-16
  DISASM
+ ______
0 The DISASM subcommand disassembles a load module into assembler
  source code.
- Example 1: disassemble module IEFBR14.
+ __________
  disasm iefbr14

   DIRECTORY INFO FOR MODULE  IEFBR14
             TTR OF MODULE=016004
             CONCATENATION NBR=00
             ALIAS INDIC=2C
             TTR, 1ST TXT RECD=01600A
             TTR OF NOTE/SCATTER LIST=000000
             NBR NOTE ENTRIES=00
             ATTRIBUTES 1=C3F2   RENT REUS EXEC
             TOTAL LENGTH=000008
             LENGTH OF 1ST TXT RECD=0008
             E. P. ADDR=000000
             ATTRIBUTES 2=88
             AUTH CODE=00
                  *** EXTERNAL SYMBOL TABLE ***
        SYMBOL        TYPE   IND  ADDR    SEG  LRID   LENG  ESDID
     ** IEFBR14        SD                 01
        B_TEXT         ED        000000             000004
        IEFBR14        LD        000000
                  ***** RLD INFO *****
        RELPTR  POSPTR      TYPE     LEN    DIR   ADDR

   IEFBR14                               *** User Control Statements ***
   IEFBR14
   ***** Label Table *****
     ADDR TYPE  LEN   SYMBOL
                                                     ***** T E X T *****
   000000   1BFF07FE 00000000 00000000 00000000      ................

   IEFBR14  'Disassembly of CSECT IEFBR14  of Load Module IEFBR14 '
     Loc    Object Code  Source Statement
                        IEFBR14  CSECT
   00000000 1BFF                 SR    R15,R15
   00000002 07FE                 BR    R14         Exit
                                 SPACE
                                 ASMDREG
                                 END
1                                                                        PAGE-17
  DLINK
+ _____
0 The DLINK subcommand creates object text from a load module.
- Example 1: delink module IEFBR14.
+ __________
  dlink iefbr14

   .ESD      ..  ..IEFBR14 ........                                     IEFB0001
   .TXT ...  ..  .....|                                                 IEFB0002
   .END ...      ..                1566896201 0201 5339                 IEFB0003
    IDENTIFY IEFBR14('RSI53390780')
    SETOPT PARM(REUS(RENT),NOOL)
    MODE AMODE(24)
    NAME IEFBR14(R)
1                                                                        PAGE-18
  DSNAME
+ ______
0 The DSNAME subcommand displays statistics on the current data
  set allocation using message format PDS200I, PDS210I or PDS220I
  depending on the last DSNAME operand (MSG, TSO, or JCL) entered.

  Note: the DSNAME subcommand is automatically invoked for several
  situations (such as in the CHANGE or FIXPDS subcommands).
- Example 1: display statistics on the current allocation.
+ __________

  dsname msg

  - DSN=TRIDJK.CLIST,VOL=SER=CBT001  MEM= ------------------------------
  >dsname
  PDS200I DISP UNIT OPT RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
  PDS200I SHR  3390 C   FB       80   27920   3X    21      14     5 TRK

1                                                                        PAGE-19
  EDREC
+ _____
0 The EDREC subcommand explicitly invokes ISPF edit recovery.
- Example 1: invoke ISPF error recovery.
+ __________
  edrec
1                                                                        PAGE-20
  ISPXEQ
+ ______
0 The ISPXEQ subcommand is normally used to enter PDS in LISTA
  or LISTV dialog mode instead of the usual ISPMODE or MEMLIST mode.
- Example 1: invoke LISTA dialog.
+ __________
  pds 'user.parmlib' ispxeq lista
   ---screen clear---

      Memlist  Functions  Options  Special  Defaults  Help
    --------------------------------------------------------------------
                                    List Allocations
    Command ===>
   Enter an ISPF command or a special control code:
      ------------------------------------------------------------------
    CMD  DDNAME   DATA     TYPE OP VOLUME ------------- DATA SET NAME --
         STEPLIB           PO   1  MVSRES SYS1.W$$.LINKLIB
         SYSTSIN           TERM 0         NULLFILE
         SYSUDUMP          JES  0  CLS= Z TRIDJK.TRIDJK.TSU03078.D000010
         ISPEXEC                0  MVSRES ISP.SISPEXEC
         ISPLLIB           PO   1  MVSRES AD.CMDLIB
           #    2               1  MVSRES IBMUSER.FDM763.LOAD
           #    3               1  MVSRES IQI610.SIQILOAD
           #    4               1  MVSRES GIM.SGIMLMD0
           #    5               1  MVSRES SYS1.DGTLLIB
           #    6               1  MVSRES SYS1.DFQLLIB
1                                                                        PAGE-21
  LMA
+ ___
0 The LMA subcommand invokes the IBM Debug Tool load module analyzer.
- Example 1: analyze load module IEFBR14 with IBM Debug Tool.
+ __________
  lma iefbr14

  5655-Q10   Debug Tool Version 13 Release 1.2  Load Module Analyzer
 EQAIN:

 SELECT MEMBER=IEFBR14

  5655-Q10   Debug Tool Version 13 Release 1.2  Load Module Analyzer
           Load Module  SYS1.LINKLIB(IEFBR14)  AMODE(24),RMODE(24)

 CSECT     Sg  Offset Len/Ent  Program-ID  Trn-Date    Program-Description
 IEFBR14            0       4   566896201  2005/12/05  Assembler H Version 1
                                                       Release 2, 3, OR 4
1                                                                        PAGE-22
  LOAD
+ ____
0 The LOAD subcommand loads pds members from OFFLOAD or IEBUPDTE data.
  ISPF statistics are restored if present.
- Example 1: load 4 members in memberg to pds 'tridjk.gen2'.
+ __________
  load memberg 'tridjk.gen2'
   --- PDSLOAD --- PDS MEMBER RELOAD UTILITY --- V10.0

   ./ ADD NAME=$$$$NULL 0100-16217-16217-0617-00000-00000-00000-TRIDJK
                                  MEMBER $$$$NULL REPLACED (0 RECORDS)
   ./ ADD NAME=$$$DOC   0199-97328-16111-1200-00173-00070-00000-A
                                  MEMBER $$$DOC REPLACED (173 RECORDS)
   ./ ADD NAME=$$MBRGEN 0140-13079-16217-1501-00123-00007-00000-TRIDJK
                                  MEMBER $$MBRGEN REPLACED (123 RECORD
   ./ ADD NAME=$IBMMAIN 0102-12044-12044-1132-00072-00047-00000-TRIDJK
                                   MEMBER $IBMMAIN REPLACED (72 RECORDS)
1                                                                        PAGE-23
  MATCH
+ _____
0 The MATCH subcommand compares 2 pds files and displays the changes.
- Example 1: compare 2 pds files.
+ __________
  match 'tridjk.gen3' changed

  --- PDSMATCH --- PDS DIRECTORY COMPARE UTILITY ---

  CRITERIA FOR MATCHING IS MEMBER NAME AND THE ACTUAL MEMBER DATA
  (SPF STATISTICS ARE NOT COMPARED).

  LIBRARY1 - TRIDJK.GEN2 ON WORK02
  LIBRARY2 - TRIDJK.GEN3 ON WORK01

  $$$DOC                         MEMBER IN LIBRARY1 ONLY
  $$MBRGEN                       MEMBER IN LIBRARY1 ONLY
  $IBMMAIN                       MEMBER IN LIBRARY1 ONLY
  #MDSECT                        MEMBER IN LIBRARY1 ONLY
  ATTRCNTS                       MEMBER IN LIBRARY1 ONLY
  BATISPF                        MEMBER IN LIBRARY1 ONLY
  GENER                          MEMBER IN LIBRARY1 ONLY
  GRSISPF                        MEMBER IN LIBRARY1 ONLY
  IGW700I                        MEMBER IN LIBRARY1 ONLY
  ISPF                           MEMBER IN LIBRARY1 ONLY
  ISPFBAT                        MEMBER IN LIBRARY1 ONLY
  ISPFBAT2                       MEMBER IN LIBRARY1 ONLY
  ISPFEDIT                       MEMBER IN LIBRARY1 ONLY
                       LOAD      MEMBER IN LIBRARY2 ONLY
  LPAISPF                        MEMBER IN LIBRARY1 ONLY
  PDSIZEM                        MEMBER IN LIBRARY1 ONLY
  PFD2ISPF                       MEMBER IN LIBRARY1 ONLY
  SBG                            MEMBER IN LIBRARY1 ONLY
  TSOISPF                        MEMBER IN LIBRARY1 ONLY
1                                                                        PAGE-24
  MXIBAT
+ ______
0 The MXIBAT subcommand executes the MXI program to display information.
- Example 1: display the current MVS system exceptions.
+ __________
  mxibat exc

   System Wide Exceptions
   None

   Enqueue Conflicts and RESERVEs
   None

   DASD Volume Exceptions
   None

   Address Space Exceptions
   STC OMVS     FIXED storage frames in use : 314
   STC ZFS      FIXED storage frames in use : 531
   STC TRACE    FIXED storage frames in use : 572
   STC *MASTER* FIXED storage frames in use : 652
   STC XCFAS    FIXED storage frames in use : 769
   STC JES2     FIXED storage frames in use : 980
   STC JES2     ECSA storage in use (K) : 1121
   STC NET      ECSA storage in use (K) : 1758
1                                                                        PAGE-25
  OFFLOAD
+ _______
0 The OFFLOAD subcommand creates a sequential file of member data
  with an IEBUPDTE ./ ADD control statement at the beginning of each
  member.  It saves the ISPF statistics on the control statement.
  The offloaded data can be used to create members with the
  LOAD subcommand.
- Example 1: offload members to 'TRIDJK.GEN3(MEMBERG)'.
+ __________
  offload * gen3(memberg)
   ADS -- OFFLOAD - PDS OFFLOADING PROGRAM - V10.0
                                 O I=SYSUT1,O=SYSUT2,T=IEBUPDTE
                                 S M=$$$$NULL
                                 S M=$$$DOC
                                 S M=$$MBRGEN
                                 S M=$IBMMAIN
   OFFLOADING $$$$NULL TO SYSUT2 FROM SYSUT1
   OFFLOADING $$$DOC   TO SYSUT2 FROM SYSUT1
   OFFLOADING $$MBRGEN TO SYSUT2 FROM SYSUT1
   OFFLOADING $IBMMAIN TO SYSUT2 FROM SYSUT1

   END OF PROGRAM
1                                                                        PAGE-26
  OPTIONS
+ _______
0 The OPTIONS subcommand displays the subcommands (or options)
  supported by the PDS command. Note that this display varies
  when a non-partitioned data set is being processed.
- Example 1: display subcommands supported by PDS.
+ __________

  options

  - DSN=TRIDJK.CLIST,VOL=SER=CBT001  MEM= ------------------------------
  >options
  PDS071I THE FOLLOWING OPTIONS ARE AVAILABLE:
  ATTRIB   - LIST ATTRIBUTES OF A MEMBER
  ALIAS    - ASSIGN AN ALIAS TO A MEMBER
  AMBLIST  - LIST MODULE XREF AND IDR INFORMATION
  BROWSE   - BROWSE USING ISPF
  CHANGE   - SELECT A NEW DATA SET
  COMPARE  - COMPARE TWO MEMBERS FROM THE DATA SET
  COMPRESS - COMPRESS IN PLACE OF THE DATA SET
  CONTROL  - SET PROGRAM CONTROLS
  COPY     - COPY MEMBERS TO ANOTHER DATA SET
  COBANAL  - COBOL LOAD MODULE ANALYSIS INFO
  CONDEND  - END PDS IF WARNING OR ERROR MESSAGES
  DISPLAY  - DISPLAY DIRECTORY MEMBER NAMES
  . . . .
1                                                                        PAGE-27
  PTSEXP
+ ______
0 The PTSEXP subcommand invokes GIMCPTS to expand a PTF into a
  a sequential file.
- Example 1: expand a compressed PTF to a sequential file.
+ __________
  ptsexp $ptsexp bin

   GIM36100I  DATA SET AD.FILE182.PDS484($PTSEXP) WAS EXPANDED INTO
              DATA SET TRIDJK.BIN.
   GIM20501I  GIMCPTS PROCESSING IS COMPLETE. THE HIGHEST RETURN CODE
              WAS 0.

   ++USERMOD(MSPLS20).  /* CASPOOL - CREATE TWO SEPARATOR PAGES */
   ++VER(Z038) FMID(CIQB000)          /* BASE FUNCTION              */
        PRE(QO77969).                 /* PRE RMID AND UMIDS         */
   ++SRCUPD(ESFU010).                 /* USER VERSION OF SOURCE
                   FOLLOWING ARE INSERTIONS TO CASPOOL DATASET
                   ...CAISRC(ESFU010).  UPDATE THE USERMOD AND
                   RMID/UMID INFO.
                   AND CORRECT LINE NUMBERS FOR NEW SOURCE IF NECESSARY
                                                                   */
   ./ CHANGE NAME=ESFU010
             BNH   TSNOT           BRANCH IF AT END OF START
             TM    TSFL1,TSFL11TM  IS THIS THE SECOND END PAGE ?
             BO    TSNOTS          YES, NO 0C0D
   TSNOT     DS    0H
   *    WE ARE THE END OF A START SEP PAGE OR THE FIRST END SEP PAGE
             TM    TSFL1,TSFL11TM  FLAG FOR SECOND TIME THROUGH
             BO    TSDONET2        YES, TURN IT OFF AND RETURN
             OI    TSFL1,TSFL11TM  FLAG FOR SECOND TIME THROUGH
             B     TSNOCMA         AND SET UP FLGS TO REPEAT
   TSDONET2  DS    0H
             NI    TSFL1,255-TSFL11TM TURN OFF FIRST TIME FLAG
   TSFL11TM EQU   X'40'                  SEP PAGE FIRST TIME FLAG
   ./ ENDUP
1                                                                        PAGE-28
  SMPGEN
0 The SMPGEN subcommand assists in creating SMP/E sysmods.
+ ______
- Example 1: generate ++SRC statements for PDS source modules.
+ __________
  smpgen @: src distlib(apdpsrc) syslib(pdpsrc) txlib(pdpsorc)

  ++SRC(@ALIAS  ) DISTLIB(APDPSRC) SYSLIB(PDPSRC)
    TXLIB(PDPSORC) .
  ++SRC(@AMBLIST) DISTLIB(APDPSRC) SYSLIB(PDPSRC)
    TXLIB(PDPSORC) .
  ++SRC(@ATTRIB ) DISTLIB(APDPSRC) SYSLIB(PDPSRC)
    TXLIB(PDPSORC) .
  ++SRC(@BROWSE ) DISTLIB(APDPSRC) SYSLIB(PDPSRC)
    TXLIB(PDPSORC) .
  ++SRC(@CHANGE ) DISTLIB(APDPSRC) SYSLIB(PDPSRC)
    TXLIB(PDPSORC) .
  ++SRC(@CLEAR  ) DISTLIB(APDPSRC) SYSLIB(PDPSRC)
    TXLIB(PDPSORC) .
  ++SRC(@COBANAL) DISTLIB(APDPSRC) SYSLIB(PDPSRC)
    TXLIB(PDPSORC) .
  ++SRC(@COMPARE) DISTLIB(APDPSRC) SYSLIB(PDPSRC)
    TXLIB(PDPSORC) .
1                                                                        PAGE-29
  SRCHFOR
+ _______
0 The SRCHFOR subcommand uses ISPF SuperC SearchFor to search members
  for a character string.  SEARCH is an alias for this subcommand.
- Example 1: pros/ members are searched for the string 'programmer'.
+ __________
  srchfor pros/ 'programmer'

   ISRSUPC   -   MVS/PDF FILE/LINE/WORD/BYTE/SFOR COMPARE UTILITY- ISPF FOR z/OS
  LINE-#  SOURCE SECTION                    SRCH DSN: AD.FILE182.PDS484


  $$$PROSE                    --------- STRING(S) FOUND -------------------

      73  - This document is intended to provide systems programmers and

  $$$PROS2                    --------- STRING(S) FOUND -------------------

      48  - This document is intended to provide systems programmers and
      55       by programmers Tom Springer, William Finkelstein, and Steve Smith
      58       and Greg Price are now the programmers who maintain and enhance P

   ISRSUPC   -   MVS/PDF FILE/LINE/WORD/BYTE/SFOR COMPARE UTILITY- ISPF FOR z/OS
      SEARCH-FOR SUMMARY SECTION            SRCH DSN: AD.FILE182.PDS484

 LINES-FOUND  LINES-PROC  MEMBERS-W/LNS  MEMBERS-WO/LNS COMPARE-COLS LONGEST-LIN
         4         4746            2              0           1:80           80

 PROCESS OPTIONS USED: LONGLN ANYC

 THE FOLLOWING PROCESS STATEMENTS (USING COLUMNS 1:72) WERE PROCESSED:
    SRCHFOR 'programmer'
    SELECT $$$PROSE
    SELECT $$$PROS2

 PDS171I SRCHFOR HAS COMPLETED; RC=  1
1                                                                        PAGE-30
  SUBMIT
+ ______
0 The SUBMIT subcommand submits JCL members.  The TSO SUBMIT
  command is used; any desired SUBMIT operands may be specified
  after the member names.
- Example 1: submit one job.
+ __________

  submit job1

- Example 2: submit three jobs.
+ __________

  submit (job1 job2 job3)

  - DSN=TRIDJK.GEN.CNTL,VOL=SER=CBT003  MEM=(JOB1  ---------------------
  >submit (job1 job2 job3)
  PDS165I MEMBERS ARE: JOB1, JOB2, JOB3

  PDS395A SHOULD THESE MEMBERS BE SUBMITTED (Y/N) ?
  >y
1                                                                        PAGE-31
  TRKMAP
+ _____
0 The TRKMAP subcommand
- Example 1: display track map for volume VDMVSI.
+ __________
  trkmap vdmvsi
                           DISKMAP VERSION:20140401

   VDMVSI    ALLOCATION MAP FOR VOLUME "VDMVSI" ON DEVICE "1010"
     MOUNTED AS "PRIVATE /RSDNT"
   DEVICE DESCRIPTION:  TYPE=3390 DISK PACK  NOCYLS=20000   TRKS/CYL=15
     TRKSIZE=58786  MAX BLKSIZE=32760  DSCB/TRK=50   PDS/TRK=45
   VTOC DESCR: R/W=0/0 DSCBS=750    AVAIL=741
     VTOC EXT=0001.0000-0001.000E   FMT1 HWM=0001.000E.32  NUMALT=0
     NEXT ALT=0000.0000
   TOTAL FREE SPACE:  249955 TRACKS IN      1 EXTENTS, INCLUDING  16663
     FULL CYLINDERS.  LARGEST IS  16663 CYLINDERS PLUS  10 TRACKS.

    *** THIS PACK CONTAINS AN ACTIVE INDEXED VTOC
        THIS VOLUME IS  17% FULL

   VDMVSI        TRACK ALLOCATION MAP FOR VOLUME "VDMVSI"

    CYL-TRACK  CYL-TRACK FIRST TRK   LAST TRK   FIRST    LAST   #TRKS  EX
           TYPE  DSNAME OR USAGE

         0  0       0  0 0000.0000  0000.0000       0       0       1
           VLBL    **** VOLUME LABEL ****
         0  1       0 14 0000.0001  0000.000E       1      14      14   1
                 SYS1.VTOCIX.VDMVSI
         1  0       1 14 0001.0000  0001.000E      15      29      15   1
           VTOC    **** VOLUME TABLE OF CONTENTS ****
         2  0       2 14 0002.0000  0002.000E      30      44      15   1
           CYLB  SYS1.VVDS.VVDMVSI
         3  0     669  9 0003.0000  029D.0009      45   10044   10000   1
                 MVS.GLOBAL.SMPPTS1
       669 10    1336  4 029D.000A  0538.0004   10045   20044   10000   1
                 MVS.GLOBAL.SMPPTS2
      1336  5    2002 14 0538.0005  07D2.000E   20045   30044   10000   1
                 MVS.GLOBAL.SMPPTS3
      2003  0    2669  9 07D3.0000  0A6D.0009   30045   40044   10000   1
                    MVS.GLOBAL.SMPPTS4
      2669 10    3336  4 0A6D.000A  0D08.0004   40045   50044   10000   1
                 MVS.GLOBAL.SMPPTS5
      3336  5   19999 14 0D08.0005  4E1F.000E   50045  299999  249955
                   *** FREE EXTENT ***

                     300000  TRACKS ACCOUNTED FOR
                     <<<<< END OF TRACK MAP >>>>>
1                                                                        PAGE-32
  VIEW
+ ____
0 The VIEW subcommand enters ISPF view for a member.
- Example 1: view a member.

  view pdsjcl
   ---screen clear---

   VIEW --- HABL.LIB.PDS60(PDSJCL) - 60.00 -------------------- COLUMNS 001 072
   COMMAND ===> _                                               SCROLL ===> CUR
   ****** ***************************** TOP OF DATA ****************************
   000100 //ONE   EXEC  PGM=ASMBLR,REGION=2048K,
   000200 //             PARM=(NORLD,RENT,TERM,NOSTMT,'LINECOUNT(55)',
   000300 //             'XREF(SHORT),BUFSIZE(MAX),SYSPARM(ISPF)')

- Note 1: to verify that a member does exist before invoking ISPF, enter:
+ _______
  view membernn old
0 Note 2: to verify that a member does not exist before invoking ISPF, enter:
+ _______
  view membernn new
0 Note 3: to use an initial edit macro, use the MACRO keyword:
+ _______
  view membernn macro(macname)
0 Note 4: to use a specific edit profile, use the PROFILE keyword:
+ _______
  view membernn profile(profname)
0 Note 5: to set a default edit profile, use the SETPROF keyword:
+ _______
  view membernn setprof(profname)
0 Note 6: to subsequently remove the default edit profile, enter:
+ _______
  view membernn setprof(*)
0 Note 7: to obtain an ISPF member list from which you may select members
+ _______
          to view, enter:
  view :
1                                                                        PAGE-33
  VPDSE
+ _____
0 The VPDSE subcommand invokes IEBPDSE to validate a PDSE dataset.
- Example 1: validate a PDSE dataset.
+ __________
  vpdse

   IGW700I PDSE Directory Validation Successful
   DSN:TRIDJK.PDSE
   ADPages:3 IXRecords:123
   ADPagesInCore:2 ADPagesRead:1
   ADTreeLevels:2
   NDPages:1 IXRecords:43
   NDPagesInCore:1 NDPagesRead:0
   NDTreeLevels:1
   AD ND Tree Nodes:43
   ADPercentFree:70 NDPercentFree:81
   ADRootPercentFree:93 NDRootPercentFree:62
   ADMidLevelEmptyPages:0 NDMidLevelEmptyPages:0
   Version:1
   PendingDeletes:3
1                                                                        PAGE-34
  XMIT
+ ____
0 The XMIT subcommand
- Example 1: transfer pds members to an output dataset or JES2
  spool.
+ __________
  xmit * to.sbg outda(cbt.bin)

            IEBCOPY MESSAGES AND CONTROL STATEMENTS

     COPY OUTDD=SYS00113,INDD=((SYS00109,R))
     SELECT MEMBER=($$$$NULL,$$$DOC,$$MBRGEN,$IBMMAIN,#MDSECT)
    IEB1013I COPYING FROM PDS   INDD=SYS00109 VOL=WORK01 DSN=TRIDJK.GEN2
    IEB1014I           TO PDSU OUTDD=SYS00113 VOL=WORK01 DSN=SYS16230.T1
    IEB167I FOLLOWING MEMBER(S) UNLOADED FROM INPUT DATA SET REFERENCED
    IEB154I $$$$NULL HAS BEEN SUCCESSFULLY UNLOADED
    IEB154I $$$DOC   HAS BEEN SUCCESSFULLY UNLOADED
    IEB154I $$MBRGEN HAS BEEN SUCCESSFULLY UNLOADED
    IEB154I $IBMMAIN HAS BEEN SUCCESSFULLY UNLOADED
    IEB154I #MDSECT  HAS BEEN SUCCESSFULLY UNLOADED
    IEB1098I 5 OF 5 MEMBERS UNLOADED FROM INPUT DATA SET REFERENCED
    IEB147I END OF JOB - 0 WAS HIGHEST SEVERITY CODE
    INMX000I 0 message and 14 data records sent as 1437 records to TO.SBG
    INMX001I Transmission occurred on 08/17/2016 at 11:16:55.

- Note 1: Use the SYSOUT(class) parameter to suppress IEBCOPY messages.
+ _______
  xmit : to.cbt outda(bin) sysout(x)
1                                                                        PAGE-35
  XISPMODE
+ ________
0 The XISPMODE subcommand suspends ISPMODE operation.
- Example 1: suspend ISPMODE operation and switch to TSO line mode.
+ __________
  xispmode
   ---screen clear---

   PDS200I DISP UNIT OPT RECFM LRECL BLKSIZE   ALLOCTRK FREETRK SECONDARY
   PDS200I SHR  3390 C   FB       80   27920   2X   475      78   106 TRK

   PDS300A ENTER OPTION -- DSN=AD.FILE182.PDS484,VOL=SER=CBT001  MEM=:
   <pds subcommands>
   . . .
   </pds subcommands>

  ispmode
   ---screen clear---
1                            APPENDIX A: EXTERNAL PROGRAMS               PAGE-36
+                            _____________________________
- This appendix is provided to document external programs that
  are used by the PDS command.  CBT programs below are included
  in the TSO Transmit file called UTILXMIT.

  External programs are called via the TSO Service Routine, IKJEFTSR.
  These programs must reside in a task or link library.

  Subcommand     External PGM       Vendor         Function
  ----------     ------------       ------         --------
  AMBLIST     -  AMBLIST            IBM            Analyze load modules
  COBANAL     -  COBANAL            CBT            Analyze COBOL load mods
  COMPRESS    -  IEBCOPY            IBM            Compress a PDS
  COPY        -  IEBCOPY            IBM            Copy members of a PDS
  DISASM      -  ASMDASM, DISASM    IBM, CBT       Disassemble load
  DLINK       -  DELINKI            CBT            Create object from load
  LMA         -  EQALMA             IBM            Load module analyzer
  LOAD        -  PDSLOAD            CBT            IEBUPDTE ---> PDS
  MATCH       -  PDSMATCH           CBT            Compare 2 PDS files
  MXIBAT      -  MXI                CBT, ROCKET    MVS eXtended Info
  OFFLOAD     -  OFFLOAD            CBT            PDS ---> IEBUPDTE
  PTSEXP      -  GIMCPTS            IBM            Uncompress SMP PTS
  SRCHFOR     -  ISRSUPC            IBM            ISPF SuperC search
  TRKMAP      -  DISKMAP, CPKMAP    CBT, IDP       Map a disk volume
  VPDSE       -  IEBPDSE            IBM            Verify a PDSE
  XMIT        -  TRANSMIT           IBM            TSO Transmit
1                            APPENDIX B: USER COMMANDS                   PAGE-37
+                            ____________________________
- This appendix is provided to document user added dialog commands that are
  defined in the O.UT panel (P86OPUX/C).  See $$$CUSTM for more information.

  -- Session Control --
  CHGM    CHANGE dataset menu
  FN      PDS Function Selection
  GROUP   Member group prompt
  STATus  PDS Function Status

  -- Documentation --
  CHGS    Summary of changes for PDS command processor
  NEW     Most recent modifications to the PDS command processor
  QR      PDS Quick Reference
  TRANS   IBM product codes for compilers
  TUT     Summary of changes for PDS command processor

  -- Utilities --
  ADM     RACF security administration dialog
  ALC     Allocate dataset prompt
  CHEAT   PDS cheat sheet dialog for long subcommands
  COPMSG  Extract XMIT/IEBCOPY summary messages from SYSOUT
  CREATE  ISPF Data Set Utility (Option 3.2)
  DT      Michael Theys Date Calendar
  EDSL    Lionel Dyck Enhanced Data Set List dialog
  FAMS    Dan Dalby FAMS attribute extract
  FLIP    Switch between current and previous data sets
  FP      FInd ISPF packed members
  IRL     Last 30 Referenced DSNAMEs
  MBRGEN  Lionel Dyck PDSE V2 member generations dialog
  MODEL   Allocate a new data set based on the active data set
  PACK    Pack dataset with TRSMAIN
  PGLITE  A simpler version, or subset, of PDSEGEN
  PRDS    Bill Smith PRINTDS dialog
  REL     RELEXTENT option of FIXPDS
  UNPACK  Unpack dataset with TRSMAIN
  VB2FB   Lionel Dyck Copy Variable->Fixed and Fixed->Variable
  VERS    Display PDS version number in Starboard area
  XMIT    XMIT dataset prompt
  YALE    Compare two PDS files with Yale COMPARE command
  ZAP     ZAP command processor

  -- MEMLIST Table --
  ALL     Adds all members to MEMLIST table
  MINE    Adds source members updated by your ID to MEMLIST table
  TOday   Adds members updated today to MEMLIST table
  YES     Adds members updated yesterday to MEMLIST table
  WEek    Adds members updated in the last week to MEMLIST table
  BIweek  Adds members updated in the last 2 weeks to MEMLIST table
  MM      Adds members updated in the last month to MEMLIST table
  MON     Adds members updated in the last month to MEMLIST table
  QTR     Adds members updated in the last quarter to MEMLIST table
  QUARTER Adds members updated in the last quarter to MEMLIST table
  THIRD   Adds members updated in the last 120 days to MEMLIST table
  YR      Adds members updated in the last year to MEMLIST table
  ZM      Adds members zapped in the last 30 days to MEMLIST table
  ZQ      Adds members zapped in the last 90 days to MEMLIST table
1                            APPENDIX C: ACKNOWLEDGEMENTS                PAGE-38
+                            ____________________________
- This appendix is provided to acknowledge the assembler and system
  programmers who have contributed modifications to the PDS command
  since 1997.

  1.  Greg Price       - PDSE support; LIST, MEMLIST, MAP, HISTORY, REPRO mods
  2.  John Hamlet      - PDSE EAV support
  3.  Don Poitras      - FLAG(PAGE0) mod
  4.  Mike Mayne       - HELPLIST mod
  5.  Al Ferguson      - PDSMAIN (ISRDSLST) mod
  6.  Simonetti Pietro - DIALSTC mod
  7.  Gene Coley       - RESTORE mod
  8.  Lionel Dyck      - P86PN*PS panel mods; PDSQINST quick install
  9.  Bruce Leland     - COMPAREC command processor
 10.  Bill Godfrey     - PDSMATCH fixes
 11.  Dr Janko Kalinic - Y2K, Xstats, various mods; PDSE, new subcommand support
