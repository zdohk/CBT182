         TITLE 'P D S  --  PDSMATCH INTERFACE                 5/25/10'
***********************************************************************
***      MATCH SUBCOMMAND  ADDED BY JOHN KALINICH -- MAY., 2010     ***
***********************************************************************
*
MATCH    CSECT
         USING *,R8
         SPACE 1
*  FREE SYSLIB1, SYSLIB2, AND SYSPRINT DATASETS
         LA    R1,SYSLIB1A              SYSLIB1 DDNAME
         BAS   R2,MAT8580               FREE THIS DATA SET
         LA    R1,SYSLIB2A              SYSLIB2 DDNAME
         BAS   R2,MAT8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,MAT8580               FREE THIS DATA SET
*  ALLOCATE MATCH //SYSLIB2 DATA SET    INPUT PDS2 DSN
*  REMOVE QUOTES OR ADD PREFIX TO DSNAME
         SPACE 1
         MVC   MSGDS1(46),BLANK128               CLEAR DSNAME AREA
         LA    R2,MSGDS1-1
         LA    R1,MSGDS2                         INPUT PDS2 DSN
         LA    R0,46
         CLI   0(R1),C''''                       QUOTED?
         BE    MAT0010                           YES, BRANCH
         SR    R14,R14                           NO
         L     R15,ADDRUPT                       START OF THE UPT
* 8-CHAR PREFIX                                               DRK JUL17
         TM    FLAGSZZ,TSO#8                     8-CHAR ID/PREFIX?    "
         BNO   MAT7PRE                           NO                   "
MAT8PRE  DS    0H                                YES                  "
         ICM   R14,B'0001',UPTPRF8L-UPT(R15)     PREFIX LENGTH ZERO?  "
         BZ    MAT0010+4                         YES, BRANCH          "
         MVC   1(8,R2),UPTPREF8-UPT(R15)         DSNAME PREFIX        "
         B     MATCONT                                                "
MAT7PRE  DS    0H                                                     "
         ICM   R14,B'0001',UPTPREFL-UPT(R15)     PREFIX LENGTH ZERO?  "
         BZ    MAT0010+4                         YES, BRANCH          "
         MVC   1(7,R2),UPTPREFX-UPT(R15)         DSNAME PREFIX        "
MATCONT  DS    0H                                             DRK JUL17
         AR    R2,R14                            POSITION FOR PERIOD
         SR    R0,R14
         MVI   1(R2),C'.'
         BCTR  R0,0
         BCTR  R1,0
         LA    R2,1(,R2)
         SPACE 1
MAT0010  LA    R1,1(,R1)                         NEXT INPUT BYTE
         LA    R2,1(,R2)                         NEXT OUTPUT BYTE
         CLI   0(R1),C''''                       END OF DSNAME?
         BE    MAT0020                           YES, BRANCH
         CLI   0(R1),X'40'                       BLANK?
         BE    MAT0020                           YES, BRANCH
         MVC   0(1,R2),0(R1)                     MOVE IN ONE MORE BYTE
         BCT   R0,MAT0010
         B     MAT0020
         SPACE 1
MAT0020  DS    0H
*  LOCATE INPUT PDS2 DSN
         MVC   WORKTMP(44),MSGDS1       COPY DSNAME
         CLI   #MATVOL,0                ANY VOLUME SERIAL?    DRK DEC15
         BNE   MAT0025                  YES, SKIP LOCATE AND OBTAIN   "
         L     R14,LOCATE6
         LA    R15,WORKTMP              ACTUAL DSNAME
         SR    R0,R0                    NO CVOL VALUE
         LA    R1,MSGTEXT1              LOCATE WORK AREA
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         LOCATE PARMLIST
         LTR   15,15                    SUCCESSFUL LOCATE?
         BNZ   MATNODSN                 NO, ERROR
         SPACE 1
*  OBTAIN DSCB
         L     R14,OBTAIN6              OBTAIN FLAGS
         LA    R15,WORKTMP              ACTUAL DSNAME
         MVC   LOCVOL(6),MSGTEXT1+6     SAVE VOLUME SERIAL (LOCATE)
         LA    R0,MSGTEXT1+6            VOLUME SERIAL (FROM LOCATE)
         LA    R1,MSGTEXT2              OUTPUT START ADDRESS
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         OBTAIN PARMLIST                GET THE FORMAT 1 DSCB
         LTR   R15,R15                  SUCCESSFUL?
         BZ    MATDSCB                  YES, BRANCH
         M$MSG L830                     NO DSCB FOUND MESSAGE
         B     NEWCMD
MATNODSN MVI   MTLEN,44                 LENGTH OF INSERT
         MVC   INSERT#1(44),WORKTMP     DSNAME
         M$MSG L844$1
         B     NEWCMD
MATDSCB  DS    0H
*
*        USE DIFFERENT MESSAGE THAN THE LOAD PDS521W
*
         LA    R1,L534          ASSUME A NON-PARTITIONED DATA SET
         TM    MSGTEXT2+DS1DSORG-DS1FMTID,DS1DSGPO  DSORG=PO?
         BZ    MSGNEW                   NO, BRANCH
MAT0025  DS    0H
         SPACE 1
         MVC   MSGDS1(44),WORKTMP       RESTORE DSNAME
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'MATDDNL2+7,R3),MATDDNL2       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATDDNL2+7(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATDSNAM,R3),MATDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),MSGDS1                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATALLOC,R3),MATALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATNORM,R3),MATNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATANORM,R3),MATANORM         SPECIFY ABNORMAL TEXT
         SPACE 1
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATANORM(,R3)                START OF NEXT TEXT
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATUNIT+8,R3),MATUNIT         SPECIFY UNIT TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATUNIT+8(,R3)               START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATVOLSR,R3),MATVOLSR         SPECIFY VOLSER TEXT
         MVC   6(6,R3),LOCVOL                    LOCATE MACRO DEFAULT
         CLI   #MATVOL,0                         VOLUME SERIAL PARM?
         BE    MAT0030                           NO, BRANCH
         MVC   6(6,R3),#MATVOL                   YES, VOLUME SERIAL
MAT0030  DS    0H
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   MATERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE MATCH //SYSLIB1 DATA SET    INPUT PDS1 DSN
         SPACE 1
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'MATDDNL1+7,R3),MATDDNL1       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATDDNL1+7(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATDSNAM,R3),MATDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATALLOC,R3),MATALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATNORM,R3),MATNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATANORM,R3),MATANORM         SPECIFY ABNORMAL TEXT
* ADD UNIT AND VOLUME FOR DUPLICATE DSN'S
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATANORM(,R3)                START OF NEXT TEXT
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATUNIT+8,R3),MATUNIT         SPECIFY UNIT TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'MATUNIT+8(,R3)               START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'MATVOLSR,R3),MATVOLSR         SPECIFY VOLSER TEXT
         MVC   6(6,R3),VOLALLOC                  VOLUME SERIAL
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   MATERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE MATCH //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),MATDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),MATSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   MATERROR                   NO, BRANCH
         B     MAT2100
         SPACE 2
MATERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    MAT8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     MAT8550
         SPACE 3
MAT2100  DS    0H
         MVC   #MATPARM+2(8),BLANK128   CLEAR PARM AREA
         LA    R5,#MATPARM+2            PT AT PARM VALUE FIELD
         SPACE 1
         CLI   #MATCHG,1                CHANGED SPECIFIED?
         BE    MAT2100A                 YES
         CLI   #MATCHG,2                NOCHANGED SPECIFIED?
         BE    MAT2100B                 YES
         CLI   #MATCHG,3                DIRCHANGE SPECIFIED?
         BE    MAT2100C                 YES
         CLI   #MATCHG,4                NODIRCHANGE SPECIFIED?
         BE    MAT2100D                 YES
         B     MAT2110                  NO
MAT2100A DS    0H
         MVC   0(8,R5),MCHG             CHANGED = NEO,DATA
         LA    R5,8
         B     MAT2700
MAT2100B DS    0H
         MVC   0(8,R5),MNCHG            NOCHANGED = EQO,DATA
         LA    R5,8
         B     MAT2700
MAT2100C DS    0H
         MVC   0(8,R5),MDIRC            DIRCHANGE = NEO,USER
         LA    R5,8
         B     MAT2700
MAT2100D DS    0H
         MVC   0(8,R5),MNDIRC           NODIRCHANGE = EQO,USER
         LA    R5,8
         B     MAT2700
         SPACE 1
MAT2110  DS    0H
         CLI   #MATONLY,1               ONLY SPECIFIED?
         BNL   MAT2200                  YES
         MVC   0(3,R5),NEONLY           NO, DEFAULT TO NEO
         LA    R5,3(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
         B     MAT2400
MAT2200  DS    0H
         CLI   #MATONLY,1               NEONLY?
         BNE   MAT2300                  NO, BRANCH
         MVC   0(3,R5),NEONLY
         LA    R5,3(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
         B     MAT2400
MAT2300  DS    0H
         CLI   #MATONLY,2               EQONLY?
         BNE   MAT2400                  NO, BRANCH
         MVC   0(3,R5),EQONLY
         LA    R5,3(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
MAT2400  DS    0H
         CLI   #MATCOMP,1               DATA?
         BNE   MAT2500                  NO, BRANCH
         MVC   0(4,R5),MATDATA
         LA    R5,4(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
         B     MAT2600
MAT2500  DS    0H
         CLI   #MATCOMP,2               USERDATA?
         BNE   MAT2600                  NO, BRANCH
         MVC   0(4,R5),MATUSER
         LA    R5,4(,R5)
         MVI   0(R5),C','
         LA    R5,1(,R5)
MAT2600  DS    0H
         LA    R15,#MATPARM+2           START OF PARM
         SR    R5,R15                   PARM LENGTH
         BZ    MAT2700                  ZERO
         BCTR  R5,0                     NO, SHIFT OUT COMMA
MAT2700  DS    0H
         STCM  R5,B'0011',#MATPARM
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  MATANULL,USADDR=(R7),REPLACE=NO,IBUF=0,                 X
               OBUF=(MAT484W,MAT484WL),MF=(E,STAXPARM)
*        LA    R1,MATPARM                 PARM='XXX,YYYY'
         LA    R1,#MATPARM                PARM=VALUE
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,MATPGM               2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,MAT7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),MATEFTSR       INVOKE IKJEFTSR?
         BNE   MATNLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
MATNLNK  BAS   R2,ATTACH                  PDSLOAD
         SPACE 3
MAT7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE
         C     R2,=F'40'                  PROGRAM NOT FOUND?
         BNE   MAT8000                    NO
         MVC   INSERT#1(8),MATPGM         YES, ERROR
         M$MSG L859$1                     NOT FOUND MESSAGE
         B     MAT8550
         SPACE 1
MAT8000  DS    0H
         SPACE 1
         MVC   BAMDCB(MATDL),MATDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSPRINT'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    MAT8010                      YES, BRANCH
         LA    R1,MAT865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     MAT8550                      EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
MAT8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(120),1(R1)      ADD THE PDSLOAD MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     MAT8010
         SPACE 3
MAT8500  DS    0H
         CLI   #MATSAML,1               SAMLIST/SUBLIST?      DRK NOV15
         BNE   MAT8510                  NO, CLOSE DOWN        DRK NOV15
         COPY  @SAMLIST                 BUILD SUBLIST FROM    DRK NOV15
         SPACE 1                        <UNEQUAL>/LIBRARY1 ONLY       "
MAT8510  DS    0H
         CLC   ##SUBCAL(8),MATEFTSR       INVOKE IKJEFTSR?
         BNE   MAT8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1
         BL    MAT8540                    YES, VALID PDSMATCH
         MVI   MTLEN+4,11
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   MAT8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE
         SRDL  R0,12                    SHIFT USER ABEND TO R1
         ST    R0,FULLWORD              SYSTEM ABEND CODE
         MVC   INSERT#2+4(7),=C' ABEND='
         UNPK  INSERT#2+11(5),FULLWORD+2(3)
         TR    INSERT#2+11(4),TRTABLE
         MVI   INSERT#2+11,C'S'         S000
         MVI   INSERT#2+11+4,X'40'
         SPACE 1
         SRL   R1,20                    USER ABEND
         CVD   R1,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE
         MVI   INSERT#2+11+5,C'U'       U0000
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND
         SPACE 1
MAT8530  DS    0H
         M$MSG L171$2
MAT8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SYSPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
MAT8550  M$ERRST MSGBLANK
         LA    R1,=CL8'SYSPRINT'          SYSPRINT DNAME
         BAS   R2,MAT8580                 FREE THIS DATA SET
         LA    R1,SYSLIB1A                SYSLIB1 DDNAME
         BAS   R2,MAT8580                 FREE THIS DATA SET
         LA    R1,SYSLIB2A                SYSLIB2 DDNAME
         BAS   R2,MAT8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
MAT8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),MATFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,MATUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
MATANULL BR    R14
         SPACE 2
*  MATCH CONSTANTS
         PRINT NOGEN
MATDCB   DCB   DSORG=PS,DDNAME=MAT,MACRF=(GL,PM),EODAD=MAT8500
MATDL    EQU   *-MATDCB
MATDCB2  DCB   DSORG=PS,DDNAME=MAT,MACRF=(GL,PM),EODAD=MAS900
MATDL2   EQU   *-MATDCB2
         PRINT NOGEN
MAT484W  DC    C'PDS484W MATCH SHOULD NOT BE INTERRUPTED'
MAT484WL EQU   *-MAT484W
MAT865E  M$TX  'PDS865E THE MATCH OUTPUT CAN NOT BE OPENED'
         PRINT GEN
MATEFTSR DC    CL8'IKJEFTSR'
MATPGM   DC    CL8'PDSMATCH'                     PDSMATCH
MATPARM  DC    AL2(MATPARML-2)                   PARM LENGTH
         DC    C'NEO,DATA'                       CBT STANDARD PARM
MATPARML EQU   *-MATPARM
NEONLY   DC    CL3'NEO'
EQONLY   DC    CL3'EQO'
MATDATA  DC    CL4'DATA'
MATUSER  DC    CL4'USER'
MCHG     DC    CL8'NEO,DATA'     CHANGED
MNCHG    DC    CL8'EQO,DATA'     NOCHANGED
MDIRC    DC    CL8'NEO,USER'     DIRCHANGE
MNDIRC   DC    CL8'EQO,USER'     NODIRCHANGE
MATDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
MATDDNL1 DC    X'000100010007',C'SYSLIB1'        SYSLIB1  DDNAME
MATDDNL2 DC    X'000100010007',C'SYSLIB2'        SYSLIB2  DDNAME
MATDSNAM DC    X'00020001002C'                   DSNAME
MATALLOC DC    X'00040001000108'                 DISP=SHR
MATNORM  DC    X'00050001000108'                 DISP=(,KEEP)
MATANORM DC    X'00060001000108'                 DISP=(,,KEEP)
MATUNIT  DC    X'001500010008',CL8'&PUNIT'       UNIT=SYSALLDA
MATVOLSR DC    X'001000010006404040404040'       VOL=SER=
MATDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
MATFDDNA DC    X'000100010008'                   FOR FREE DDNAME
MATNEW   DC    X'00040001000104'                 DISP=(NEW)
MATDEL   DC    X'00050001000104'                 DISP=(,DELETE)
MATCAT   DC    X'00050001000102'                 DISP=(,CATLG)
MATCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
MATPERM  DC    X'00520000'                       PERMANENT ALLOCATION
MATUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
MATPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
MATPRTSE DC    X'000B00010003',AL3(050)          SPACE=(,(,NNN))
MATPRTIN DC    X'000900010003',AL3(27951)        SPACE=(27951)
         SPACE 1
MATPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
MATPRTLR DC    X'004200010002',AL2(121)          DCB=LRECL=121
MATPRTBL DC    X'003000010002',AL2(27951)        DCB=BLKSIZE=27951
         SPACE 2
MATSYSPR DC    A(MATPRTFI,MATPRTSE,MATPRTIN)
         DC    A(MATPRTRE,MATPRTLR,MATPRTBL)
         DC    A(MATNEW,MATDEL,MATCDEL),X'80',AL3(MATPERM)
SYSLIB1A DC    CL8'SYSLIB1'
SYSLIB2A DC    CL8'SYSLIB2'
         SPACE 3
OBTAIN6  CAMLST SEARCH,0,0,0
         ORG   OBTAIN6+4
         SPACE 3
LOCATE6  CAMLST NAME,0,,0
         ORG   LOCATE6+4
         SPACE 3
