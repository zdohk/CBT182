         TITLE 'P D S  --  COBOL ANALYSIS INTERFACE          11/20/07'
***********************************************************************
***      COBANAL SUBCOMMAND   ADDED BY JOHN KALINICH -- NOV., 2007  ***
***********************************************************************
*
COBANAL  CSECT
         USING *,R8
         LA    R1,L530          ASSUME A NON-PARTITIONED DATA SET
         TM    DSORG,DS1DSGPO   CORRECT?
         BZ    MSGNEW           YES, BRANCH
         LA    R1,L701          ASSUME NOT A LOAD LIBRARY
         TM    FLAGSCC,RECFMU   CORRECT?
         BZ    MSGNEW           YES, BRANCH
         SPACE 1
*  FREE SYSIN, SYSPRINT, COBANAL, AND SUMMARY DATASETS
         LA    R1,SYSIN                 SYSIN DDNAME
         BAS   R2,COB8580               FREE THIS DATA SET
         LA    R1,SYSPRINT              SYSPRINT DDNAME
         BAS   R2,COB8580               FREE THIS DATA SET
         LA    R1,COBANDD               COBANAL DDNAME
         BAS   R2,COB8580               FREE THIS DATA SET
         LA    R1,SUMMARY               SUMMARY DDNAME
         BAS   R2,COB8580               FREE THIS DATA SET
*  ALLOCATE //COBANAL DATA SET
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'COBDDNAN+7,R3),COBDDNAN       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'COBDDNAN+7(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'COBDSNAM,R3),COBDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'COBDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'COBALLOC,R3),COBALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'COBALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'COBNORM,R3),COBNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'COBNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'COBANORM,R3),COBANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   COBERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),COBDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),COBSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDPR(8),=CL8'SYSPRINT' MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   COBERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE //SYSIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),COBDDNIN      SYSIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),COBSYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   COBERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE //SUMMARY DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(13),COBDDNSU      SUMMARY DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),COBSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   COBERROR                   NO, BRANCH
         SPACE 3
         B     COB2000
         SPACE 3
COBERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    COB8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     COB8550
         SPACE 3
COB2000  DS    0H
         SPACE 2
COB2100  MVC   MEMNAME(12),DIRNAME   ENSURE MEMBER NAME IS PRESENT
         MVC   #DELSAVE(1),FLAGSAA   SAVE FLAGSAA
         TM    FLAGSAA,FMEM#MEM      MEMBER GROUP?
         BO    COB2200               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    COB2110               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    COB2200               YES, BRANCH
COB2110  TM    #COBALI,#COBASS2      ASSOCIATES TOO?
         BO    COB2200               YES, BRANCH
         SPACE 1
COB2120  DS    0H
         TM    #COBALI,#COBASS2+2    ALIAS/NOALIAS SPECIFIED?
         BM    COB2130               YES
*        OI    #COBALI,&COBALI       USE THE DEFAULT
         OI    #COBALI,2             USE THE DEFAULT
         TM    #COBALI,#COBASS2      ASSOCIATES TOO?
         BO    COB2200               YES
         SPACE 3
COB2130  DS    0H
         OI    #COBALI,#COBONE       ONLY A SINGLE MEMBER/DATA SET
         LA    R4,DDNAMEH            HOLD FOR THIS SUBCOMMAND
         MVC   0(8,R4),DIRNAME
         ST    R4,#MEMPTR
         LA    R4,16(,R4)            POSITION FOR ONE ENTRY
         B     COB2900
COB2200  OI    FLAGSII,FDIRGRP       SIMULATE MEMBER GROUP INPUT
         TM    #COBALI,#COBASS2+2    ALIAS/NOALIAS SPECIFIED?
         BM    *+8                   YES
*        OI    #COBALI,&COBALI       NO, USE THE DEFAULT
         OI    #COBALI,2             NO, USE THE DEFAULT
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUPS NOW
         MVI   SUBPOOLT,21           SUBPOOL 21 DATA
         LA    R5,256/2              256 MEMBERS INITIALLY
         SPACE 1
COB2210  SLL   R5,1                  MEMBERS*2 FOR EACH LOOP
         LR    R3,R5
         LR    R0,R5
         SLL   R0,4                  TABLE SIZE=MEMBERS*16
         ICM   R0,B'1000',SUBPOOLT
         GETMAIN R,LV=(0)
         LR    R4,R1                 NEW TABLE ADDRESS
         ICM   R0,B'1111',#MEMPTR    ANY PREVIOUS MEMBERS?
         BNZ   COB2220               YES, BRANCH
         ST    R4,#MEMPTR            INITIALIZE MEMBER BASE
         B     COB2500
         SPACE 1
COB2220  SRL   R3,1                  SECOND HALF OF TABLE (# MEMBERS)
         LR    R14,R4                NEW TABLE START ADDRESS
         LR    R15,R5
         SLL   R15,3                 OLD TABLE SIZE=MEMBERS*8
         LR    R2,R15                START OF NEW PART
         LR    R1,R15
         MVCL  R14,R0                PRESERVE THE OLD TABLE
         L     R1,#MEMPTR
         LR    R0,R2                 LENGTH TO FREE
         ICM   R0,B'1000',SUBPOOLT   SUBPOOL TO FREE
         FREEMAIN R,LV=(0),A=(1)
         ST    R4,#MEMPTR            START OF NEW TABLE
         AR    R4,R2                 WHERE TO ADD MEMBERS
         SPACE 3
COB2300  TM    #COBALI,#COBASSP      ASSOCIATES PHASE?
         BO    COB2320               YES, BRANCH
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    COB2320               YES, BRANCH
         TM    #DELSAVE,FF-FMEM#MEM  MEMBER ALREADY ADDED?
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         BNO   COB2500               NO, BRANCH
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    COB2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BNO   COB2605               NO, BRANCH
         L     R1,PMEMCURR           CURRENT LIST ELEMENT
         TM    0(R1),X'80'           ANOTHER ELEMENT?
         BNO   COB2605               NO, END OF LIST
         MVC   FLAGSAA(1),4(R1)      NEXT DESCRIPTOR FLAGS
         MVC   LMEMBER1+1(19),5(R1)  LEN1, MEMBER1, LEN2, MEMBER2
         L     R1,0(,R1)             NEXT ELEMENT POINTER
         ST    R1,PMEMCURR
         MVC   #DELSAVE(1),FLAGSAA   SAVE THE MEMBER DESCRIPTOR
         MVC   MEMNAME(8),MEMBER1    FIRST MEMBER NAME
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUP
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    COB2319               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         MVC   DIRNAME,MEMBER1       MOVE TO BLDLLIST
         SPACE 2
         BLDL  INDCB,BLDLLIST          LOCATE DIRECTORY ENTRY
         B     *+4(R15)                PROCESS RETURN CODE
         B     COB2315                   00 - SUCCESSFUL
         B     COB2310                   04 - MEMBER NOT FOUND
         B     IOERROR                   08 - I/O ERROR
         SPACE 1
COB2310  MVC   INSERT#1(8),DIRNAME
         M$MSG L853$1                MSG - (MEMBER) NOT FOUND
         B     COB2300
         SPACE 1
COB2315  MVC   MEMNAME(12),DIRNAME   FIRST MEMBER NAME
         B     COB2500
         SPACE 1
COB2319  MVI   STARTTR+2,X'01'       REREAD THE DIRECTORY
         SPACE 1
COB2320  BAS   R14,READDIR           GET NEXT DIRECTORY BLOCK
         B     COB2600               END OF MEMBERS -- BRANCH
         SPACE 1
         TM    #COBALI,#COBASSP      ASSOCIATES PHASE?
         BO    COB2400               YES, BRANCH
         SPACE 1
         BAS   R2,MFILTER            CHECK MEMBER NAMES
         B     COB2600                 00 - SIMULATE DIRECTORY END
         B     COB2300                 04 - MEMBER FAILED FILTERING
         B     COB2500                 08 - MEMBER PASSED FILTERING
         SPACE 3
COB2400  L     R1,#MEMPTR            START OF MEMBER LIST
         B     COB2410+4             SKIP FIRST ADD
COB2410  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   COB2300               YES, IGNORE THIS ENTRY
         CLC   8(3,R1),MEMTTR        MATCHING TTR?
         BNE   COB2410               NO, BRANCH
         SPACE 3
COB2500  L     R1,#MEMPTR            START OF MEMBER LIST
         B     COB2510+4             SKIP FIRST ADD
COB2510  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   COB2580               YES, ADD THIS ENTRY
         CLC   0(8,R1),MEMNAME       FIND MYSELF?
         BE    COB2300               YES, IGNORE THIS ENTRY
         B     COB2510               NO, CONTINUE SEARCHING
         SPACE 2
COB2580  MVC   0(16,R4),MEMNAME      ADD TO THE TABLE
         LA    R4,16(,R4)            NEXT MEMBER POSITION
         S     R3,=F'1'              ANY MORE FIT?
         BNP   COB2210               NO, BRANCH
         B     COB2300               YES, GET NEXT MEMBER
         SPACE 3
COB2600  TM    #COBALI,#COBASSP      ASSOCIATED MEMBERS?
         BO    COB2605               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  ELEMENT HAS NOW BEEN ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    COB2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    COB2300               YES, BRANCH
         SPACE 1
COB2605  TM    #COBALI,#COBASSP      ASSOCIATES PHASE STARTED?
         BO    COB2700               YES, BRANCH
         TM    #COBALI,#COBASS2      ASSOCIATE MEMBERS TOO?
         BNO   COB2700               NO, BRANCH
         OI    #COBALI,#COBASSP      YES, ASSOCIATES PHASE STARTED
         NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
         MVI   STARTTR+2,X'01'       TTR=000001 (START OF DIRECTORY)
         B     COB2300               DO ANY ASSOCIATED MEMBERS
         SPACE 3
COB2700  NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
         SPACE 3
COB2900  DS    0H
         ST    R4,#MEMLAST           SAVE LAST MEMBER POINTER
*  OPEN SYSIN DATA SET
         MVC   BAMDCB(COBDL),COBDCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),SYSIN
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SYSIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    COB2910                         YES, BRANCH
         LA    R1,COB865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     COB8550                         EXIT
         SPACE 3
COB2910  DS    0H
         TM    FLAGSHH,FMEMALLM         ALL MEMBERS?
         BNO   COB4010                  NO
         B     COB4540                  YES
COB4010  DS    0H
         L     R3,#MEMPTR                 FIRST MEMBER POINTER
         L     R4,#MEMLAST                LAST MEMBER POINTER
         MVC   MSGTEXT1(136),MSGBL132     CLEAR THE MESSAGE AREA
         SPACE 1
COB4530  CR    R3,R4                      END OF MEMBER TABLE?
         BNL   COB4550                    YES
         LA    R5,MSGTEXT1+4
         MVC   0(8,R5),0(R3)              MEMBER NAME
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT MEMBER STATEMENT
         LA    R3,16(,R3)                 NEXT MEMBER POSITION
         B     COB4530
         SPACE 1
COB4540  DS    0H
         MVC   #COBPARM+2(8),BLANK128   CLEAR PARM AREA
         LA    R5,#COBPARM+2            PT AT PARM VALUE FIELD
         MVC   0(3,R5),=C'ALL'          ALL MEMBERS
         LA    R5,3(,R5)
         B     COB4620
         SPACE 2
COB4550  DS    0H
         MVC   #COBPARM+2(8),BLANK128   CLEAR PARM AREA
         LA    R5,#COBPARM+2            PT AT PARM VALUE FIELD
         TM    SPFLAG2,SPFLNCD          LINE COMMAND?
         BNO   COB4555                  NO, BRANCH
         MVC   0(8,R5),MSGTEXT1+4       MOVE MEMBER NAME
         LA    R5,8(,R5)
         B     COB4620
COB4555  DS    0H
         MVC   0(5,R5),=C'SYSIN'        MEMBER NAMES FROM SYSIN
         LA    R5,5(,R5)
         B     COB4620
         SPACE 2
COB4620  DS    0H
         LA    R15,#COBPARM+2           START OF PARM
         SR    R5,R15                   PARM LENGTH
         STCM  R5,B'0011',#COBPARM
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SYSIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  COBNULL,USADDR=(R7),REPLACE=NO,IBUF=0,                  X
               OBUF=(COB484W,COB484WL),MF=(E,STAXPARM)
         LA    R1,#COBPARM                PARM=VALUE
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,COBPROG              2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,COB7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),COBEFTSR       INVOKE IKJEFTSR?
         BNE   COBNLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
COBNLNK  BAS   R2,ATTACH                  COBANAL
         SPACE 3
COB7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE    DRK JAN07
         C     R2,=F'40'                  PROGRAM NOT FOUND?  DRK JAN07
         BNE   COB8000                    NO                  DRK JAN07
         MVC   INSERT#1(8),COBPROG        YES, ERROR          DRK JAN07
         M$MSG L859$1                     NOT FOUND MESSAGE   DRK JAN07
         B     COB8550                                        DRK JAN07
         SPACE 1
COB8000  DS    0H
         CLI   #COBLIST,2                   DO NOT LIST DETAILS?
         BE    COB8025                      YES, THEN SUMMARY
         TM    SPFLAG2,SPFLNCD              LINE COMMAND?
         BO    COB8005                      YES, DEFAULT TO LIST
         CLI   #COBLIST,1                   LIST DETAILS?
         BNE   COB8025                      NO, THEN SUMMARY
COB8005  DS    0H
         MVC   BAMDCB(COBDL),COBDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),SYSPRINT
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    COB8010                      YES, BRANCH
         LA    R1,COB865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     COB8550                      EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
COB8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(121),0(R1)      ADD THE COBANAL MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     COB8010
         SPACE 3
COB8020  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)     CLOSE THE SYSPRINT FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
COB8025  DS    0H
         CLI   #COBSUMM,2                   DO NOT LIST SUMMARY?
         BE    COB8510                      YES, SKIP
         MVC   BAMDCB(COBDL2),COBDCB2       GET MODEL DCB 2
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),SUMMARY
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SUMMARY
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    COB8030                      YES, BRANCH
         LA    R1,COB865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     COB8550                      EXIT
         SPACE 3
*  PROCESS SUMMARY RECORDS
COB8030  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(121),0(R1)      ADD THE COBANAL MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     COB8030
         SPACE 3
COB8500  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SUMMARY FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
COB8510  DS    0H
         CLC   ##SUBCAL(8),COBEFTSR       INVOKE IKJEFTSR?
         BNE   COB8550                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1                DRK JAN07
         BL    COB8550                    YES, VALID COB
         MVI   MTLEN+4,21                                     DRK NOV07
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11                     DRK JAN07
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   COB8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE            DRK NOV07
         SRDL  R0,12                    SHIFT USER ABEND TO R1DRK NOV07
         ST    R0,FULLWORD              SYSTEM ABEND CODE     DRK NOV07
         MVC   INSERT#2+4(7),=C' ABEND='                      DRK NOV07
         UNPK  INSERT#2+11(5),FULLWORD+2(3)                   DRK NOV07
         TR    INSERT#2+11(4),TRTABLE                         DRK NOV07
         MVI   INSERT#2+11,C'S'         S000                  DRK NOV07
         MVI   INSERT#2+11+4,X'40'                            DRK NOV07
         SPACE 1                                              DRK NOV07
         SRL   R1,20                    USER ABEND            DRK NOV07
         CVD   R1,DOUBLE                                      DRK NOV07
         UNPK  DOUBLE(5),DOUBLE+5(3)                          DRK NOV07
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE        DRK NOV07
         MVI   INSERT#2+11+5,C'U'       U0000                 DRK NOV07
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND       DRK NOV07
         SPACE 1
COB8530  DS    0H
         M$MSG L171$2
COB8550  M$ERRST MSGBLANK
         LA    R1,SYSIN                 SYSIN DDNAME
         BAS   R2,COB8580               FREE THIS DATA SET
         LA    R1,SYSPRINT              SYSPRINT DDNAME
         BAS   R2,COB8580               FREE THIS DATA SET
         LA    R1,COBANDD               COBANAL DDNAME
         BAS   R2,COB8580               FREE THIS DATA SET
         LA    R1,SUMMARY               SUMMARY DDNAME
         BAS   R2,COB8580               FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
COB8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),COBFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,COBUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
COBNULL BR    R14
         SPACE 2
*  COBANAL CONSTANTS
         PRINT NOGEN
COBDCB   DCB   DSORG=PS,DDNAME=COB,MACRF=(GL,PM),EODAD=COB8020
COBDL    EQU   *-COBDCB
COBDCB2  DCB   DSORG=PS,DDNAME=COB,MACRF=(GL,PM),EODAD=COB8500
COBDL2   EQU   *-COBDCB2
         PRINT NOGEN
COB484W  DC    C'PDS484W COBANAL SHOULD NOT BE INTERRUPTED'
COB484WL EQU   *-COB484W
COB865E  M$TX  'PDS865E THE COBANAL OUTPUT CAN NOT BE OPENED'
         PRINT GEN
COBEFTSR DC    CL8'IKJEFTSR'
COBPROG  DC    CL8'COBANAL'                      COBOL ANALYSIS
SYSIN    DC    CL8'SYSIN'
SYSPRINT DC    CL8'SYSPRINT'
COBANDD  DC    CL8'COBANAL'
SUMMARY  DC    CL8'SUMMARY'
COBDDNIN DC    X'000100010005',C'SYSIN'          SYSIN    DDNAME
COBDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
COBDDNAN DC    X'000100010007',C'COBANAL'        COBANAL  DDNAME
COBDDNSU DC    X'000100010007',C'SUMMARY'        SUMMARY DDNAME
COBDSNAM DC    X'00020001002C'                   DSNAME
COBALLOC DC    X'00040001000108'                 DISP=SHR
COBNORM  DC    X'00050001000108'                 DISP=(,KEEP)
COBANORM DC    X'00060001000108'                 DISP=(,,KEEP)
COBDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
COBFDDNA DC    X'000100010008'                   FOR FREE DDNAME
COBNEW   DC    X'00040001000104'                 DISP=(NEW)
COBDEL   DC    X'00050001000104'                 DISP=(,DELETE)
COBCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
COBPERM  DC    X'00520000'                       PERMANENT ALLOCATION
COBUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
COBPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
COBPRTSE DC    X'000B00010003',AL3(050)          SPACE=(,(,NNN))
COBPRTIN DC    X'000900010003',AL3(27951)        SPACE=(27951)
COBSINSP DC    X'000900010003',AL3(6480)         SPACE=(6480)
         SPACE 1
COBPRTRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
COBPRTLR DC    X'004200010002',AL2(121)          DCB=LRECL=121
COBPRTBL DC    X'003000010002',AL2(27951)        DCB=BLKSIZE=27951
         SPACE 2
COBSINRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
COBSINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
COBSINBL DC    X'003000010002',AL2(6480)         DCB=BLKSIZE=6480
         SPACE 2
COBSYSIN DC    A(COBPRTFI,COBPRTSE,COBSINSP)
         DC    A(COBSINRE,COBSINLR,COBSINBL)
         DC    A(COBNEW,COBDEL,COBCDEL),X'80',AL3(COBPERM)
COBSYSPR DC    A(COBPRTFI,COBPRTSE,COBPRTIN)
         DC    A(COBPRTRE,COBPRTLR,COBPRTBL)
         DC    A(COBNEW,COBDEL,COBCDEL),X'80',AL3(COBPERM)
         SPACE 2
#COBASSP EQU   X'80'            COB: ASSOCIATES PHASE
#COBONE  EQU   X'10'            COB: A SINGLE MEMBER
#COBASS2 EQU   X'01'            COB: ANALYZE ASSOCIATES TOO
         SPACE 2
