)ATTR DEFAULT(%+_)
    % TYPE(TEXT) INTENS(HIGH) COLOR(WHITE) SKIP(ON)
    ¢ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
    + TYPE(TEXT) INTENS(LOW)  COLOR(TURQ) SKIP(ON)
    ~ TYPE(TEXT) INTENS(LOW)  COLOR(BLUE) SKIP(ON)
    _ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)
    ¬ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED) PAD(_)
    ¦ TYPE(INPUT) INTENS(HIGH) CAPS(OFF)
)BODY EXPAND(\\)
+-\-\-¢O.COPY    COPY Subcommand+-\-\-
%OPTION  ===>¦ZCMD                                                             +
%
+Enter the member group name, dsname and any operands below for%COPY:
%===>¦LOPER
                                                                               +
+Operands: %memgroup            -+(e.g., *; start:end; first*pat; range*; part/)
%           dsname/FILE(ddn)/*  -+identifies the output data set
%           NUMBER(num)         -+for use with FILE(name), concatenation number
%           ALIAS/NOALIAS       -+to include associated members
%           AS(pname)/TO(pname) -+to rename members
%           CALL/NOCALL         -+to invoke the copy program
%           EXIST/NOEXIST       -+copy based on member existence in output
%           EXCLUDE             -+invert "select" statements to "exclude"
%           NOBLDL              -+do not perform BLDL checking in the target dsn
%           MAXBLK(num)         -+for load members, maximum COPYMOD blocksize
%           OLD/SHR/NEW         -+if NEW,~TRK/CYL, SPACE(prim,sec), DIR(num),
%                                ~DSNTYPE(LIBRARY/PDS), MAXGENS(num)+
%           SUMMARY/LIST/NOLIST -+listing detail control
%           REPLACE/NOREPLACE   -+to replace existing output members
%           VOLUME(volser)      -+the output volume to use if DSN is uncataloged
%           GENS                -+to copy PDSE V2 member generations
+
+Defaults:  NOALIAS, CALL, SHR, SUMMARY, NOREPLACE, LIST
)INIT
  &LOPER  = '&OPERS'
  .CURSOR = LOPER
  .HELP   = P86OPHH
  IF(&LOPER  = &Z) &LOPER=&P86#CP1
)PROC
 *Rexx(* PDS2DSN)
  parse var loper grp pds2dsn .
  if left(pds2dsn,1) = "'" & right(pds2dsn,1) <> "'"  then
    pds2dsn = pds2dsn"'"
 *EndRexx
 VPUT (PDS2DSN)
 &P86#CP1=&LOPER
 &PDSZSEL='Copy  &LOPER'
)END
