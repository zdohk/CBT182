         TITLE 'P D S  --  PDS CONTROL                       09/28/88'
***********************************************************************
***      CONTROL SUBCOMMAND    ADDED BY BRUCE LELAND -- OCT., 1983  ***
***********************************************************************
*
         SPACE 1
CONTROL  CSECT
         USING *,R8
         AIF ('&CISP' EQ 'NO SPF').NSPF200
         TM    FLAGSEE,FBKGRND               BACKGROUND MODE?
         BO    CONT004                       YES, BRANCH
         TM    FLAGSFF,FSPFOPT6+FSPFERR+FSPFCALL+FSPFDIAL  CHANGE SPF?
         BNZ   CONT004                                     NO, BRANCH
         TM    #OUT+10,X'01'                 SYSOUT/DSNAME?
         BNO   CONT004                       NO, BRANCH
         TM    FLAGSEE,FNOTTERM              FROM A CLIST SOURCE?
         BO    CONT004                       YES, BRANCH
         TM    FLAGSBB,FONESHOT              ON INITIAL LINE?
         BO    CONT004                       YES, BRANCH
         BAS   R2,SPFRECUR                   INVOKE PDS AS A DIALOG
         SPACE 1
.NSPF200 ANOP
         SPACE 2
CONT004  DS    0H
         AIF   ('&MVSLEV' LT 'MVS6XX').MVSOLD1                DRK MAR05
         CLC   ##SUBCOM(8),=CL8'CPU'      CPU SUBCOMMAND?     DRK JUN06
         BE    CONTCPU                    YES, ALLOW IT       DRK JUN06
.MVSOLD1 ANOP                                                 DRK MAR05
         CLC   ##SUBCOM(8),=CL8'MODS'     MODS SUBCOMMAND?    DRK JUN06
         BE    CONT831                    YES, ALLOW IT       DRK JUN06
         CLI   #OUT+10,0                     SYSOUT/NOSYSOUT/DSN/NODSN?
         BE    CONT010                       NO, BRANCH
         TM    DCBOFLGS-IHADCB+LOGDCB,X'10'  OPEN?
         BZ    CONT010                       NO, BRANCH
*** CLOSE THE SYSOUT/DSNAME DATA SET
         NI    FLAGSFF,FF-FLOGWRT         TURN OFF RECORD FLAG
         MVI   OPENLIST,X'80'
         CLOSE (LOGDCB),MF=(E,OPENLIST)
         OI    CONTOPTN,X'80'             RESET OPEN DSNAME FLAG
         M$MSG L081
         SPACE 2
         CLI   CONTOPTN,X'83'             DISK LOG OPEN?
         BNE   CONT010                    NO, BRANCH
         LH    R1,DSNLEN                  DSNAME LENGTH
         BCTR  R1,0                       MACHINE LENGTH
         LA    R15,FIRST4K
         CLC   DSNAME(*-*),CONTDSN-FIRST4K(R15)
         EX    R1,*-6                     THIS DATA SET?
         BNE   CONT010                    NO, BRANCH
         SPACE 1
         MVI   ##ADRCM#,CONTINUE          FLAG TO CONTINUE
         MVI   VOLALLOC,X'40'             READ THE DSCB AGAIN
         BAS   R2,CLOSEIT                 CLOSE THE DCB
         B     RESTART2                   OPEN THE DATA SET AGAIN
         SPACE 2
CONT010  CLI   #OUT+10,03          ANY DSNAME RECORDING?
         BNE   CONT011             NO, BRANCH
         TM    FLAGSBB,FONESHOT    SUBCOMMAND ON INITIAL LINE?
         BNO   CONT011             NO, BRANCH
         MVI   CONTOPTN,03         YES, SET INITIAL OPTION
         B     CONT116
**
CONT011  M$ERRST MSGBLANK          ONE BLANK LINE
         MVC   INSERT#1(8),PDSNAME
         M$MSG L100$1              YYYY/MM/DD ADDED HERE      DRK SEP05
*        M$MSG L105                LAST UPDATED: YYYY/MM/DD   DRK SEP05
         M$MSG L106                DATE FORMAT: USA OR ISO    DRK NOV01
         L     R2,=V(PDSMAIN)      DATE/TIME STAMP            DRK AUG17
         MVI   MTLEN,64            LENGTH OF INSERT           DRK AUG17
         MVC   INSERT#1(64),5(R2)  NAME/VERS/DATE/TIME        DRK AUG17
         M$MSG L107$1                                         DRK AUG17
         M$ERRST MSGBLANK          ONE BLANK LINE
         SPACE 1
         CLI   #OUT+0,1            ANY CONTROL OPERAND?
         BL    CONT020             NO, BRANCH
         BH    CONT012             YES, THE NO FORM
         NI    FLAGSGG,FF-FALINCON YES FORM
         B     CONT020
CONT012  OI    FLAGSGG,FALINCON    NO FORM
         SPACE 1
CONT020  CLI   #OUT+1,1            ANY CONTROL OPERAND?
         BL    CONT030             NO, BRANCH
         BH    CONT022             YES, THE NO FORM
         NI    FLAGSGG,FF-FTRANCON YES FORM
         B     CONT030
CONT022  OI    FLAGSGG,FTRANCON    NO FORM
         SPACE 1
CONT030  CLI   #OUT+2,1            ANY CONTROL OPERAND?
         BL    CONT040             NO, BRANCH
         BH    CONT032             YES, THE NO FORM
         NI    FLAGSGG,FF-FLKEDCON YES FORM
         B     CONT040
CONT032  OI    FLAGSGG,FLKEDCON    NO FORM
         SPACE 1
CONT040  CLI   #OUT+3,1            ANY CONTROL OPERAND?
         BL    CONT050             NO, BRANCH
         BH    CONT042             YES, THE NO FORM
         NI    FLAGSGG,FF-FPROMCON YES FORM
         B     CONT050
CONT042  OI    FLAGSGG,FPROMCON    NO FORM
         SPACE 1
CONT050  CLI   #OUT+4,1            ANY CONTROL OPERAND?
         BL    CONT060             NO, BRANCH
         BH    CONT052             YES, THE NO FORM
         NI    FLAGSGG,FF-FRECVCON YES FORM
         B     CONT060
CONT052  OI    FLAGSGG,FRECVCON    NO FORM
         SPACE 1
CONT060  CLI   #OUT+5,1            ANY CONTROL OPERAND?
         BL    CONT100             NO, BRANCH
         MVI   DEVRPS,X'04'        ASSUME NO RETAIN EXCP
         CLI   #OUT+5,2            CONTROL SINGLE?
         BE    CONT062             YES, BRANCH
         NI    FLAGSEE,FF-FDOUBCON-FFULLTRK  CONTROL DOUBLE
         XI    FLAGSEE,FDOUBCON    DOUBLE BUFFER FORM
         CLI   #OUT+5,1            CONTROL DOUBLE?
         BE    CONT100             YES, BRANCH
         XI    FLAGSEE,FDOUBCON    NO, FULLTRACK REQUEST
         CLI   #OUT+5,3            READ MULTIPLE?
         BE    CONT100             YES, BRANCH
         MVI   DEVRPS,X'05'        USE RETAIN EXCP METHOD
         B     CONT100
CONT062  OI    FLAGSEE,FDOUBCON+FFULLTRK     CONTROL "SINGLE":
         SPACE 2
CONT100  MVI   MTLEN,100
         MVC   INSERT#1(128),BLANK128
         LA    R1,INSERT#1-2       START OF GLOBAL TEXT
         SPACE 1
         TM    FLAGSGG,FALINCON    CONTROL NO FORM?
         BNO   *+14                NO, BRANCH
         MVC   2(L'CALINCON,R1),CALINCON
         LA    R1,L'CALINCON(R1)
         SPACE 1
         TM    FLAGSGG,FLKEDCON    CONTROL NO FORM?
         BNO   *+14                NO, BRANCH
         MVC   2(L'CLKEDCON,R1),CLKEDCON
         LA    R1,L'CLKEDCON(R1)
         SPACE 1
         TM    FLAGSGG,FPROMCON    CONTROL NO FORM?
         BNO   *+14                NO, BRANCH
         MVC   2(L'CPROMCON,R1),CPROMCON
         LA    R1,L'CPROMCON(R1)
         SPACE 1
         TM    FLAGSGG,FRECVCON    CONTROL NO FORM?
         BNO   *+14                NO, BRANCH
         MVC   2(L'CRECVCON,R1),CRECVCON
         LA    R1,L'CRECVCON(R1)
         SPACE 1
         TM    FLAGSGG,FTRANCON    CONTROL NO FORM?
         BNO   *+14                NO, BRANCH
         MVC   2(L'CTRANCON,R1),CTRANCON
         LA    R1,L'CTRANCON(R1)
         SPACE 2
         TM    FLAGSGG,FALINCON    CONTROL YES FORM?
         BNZ   *+14                NO, BRANCH
         MVC   2(L'CALINCON-2,R1),CALINCON+2
         LA    R1,L'CALINCON-2(R1)
         SPACE 1
         TM    FLAGSGG,FLKEDCON    CONTROL YES FORM?
         BNZ   *+14                NO, BRANCH
         MVC   2(L'CLKEDCON-2,R1),CLKEDCON+2
         LA    R1,L'CLKEDCON-2(R1)
         SPACE 1
         TM    FLAGSGG,FPROMCON    CONTROL YES FORM?
         BNZ   *+14                NO, BRANCH
         MVC   2(L'CPROMCON-2,R1),CPROMCON+2
         LA    R1,L'CPROMCON-2(R1)
         SPACE 1
         TM    FLAGSGG,FRECVCON    CONTROL YES FORM?
         BNZ   *+14                NO, BRANCH
         MVC   2(L'CRECVCON-2,R1),CRECVCON+2
         LA    R1,L'CRECVCON-2(R1)
         SPACE 1
         TM    FLAGSGG,FTRANCON    CONTROL YES FORM?
         BNZ   *+14                NO, BRANCH
         MVC   2(L'CTRANCON-2,R1),CTRANCON+2
         LA    R1,L'CTRANCON-2(R1)
         SPACE 1
         MVC   0(8,R1),BLANKS      DELETE THE LAST COMMA
         M$MSG L030$1
         SPACE 2
         MVC   INSERT#1(120),BLANK128
         CLI   #OUT+13,X'02'              NODEST?
         BE    *+12                       YES, BRANCH
         CLI   #OUT+15,0                  ANY DEST?
         BE    CONT112                    NO, BRANCH
         MVC   CONTDEST(2),#OUT+14        DEST LENGTH
         MVC   CONTDEST+2(8),#OUT+30      DEST
         SPACE 1
CONT112  CLI   #OUT+12,X'02'              NOFORM?
         BE    *+12                       YES, BRANCH
         CLI   #OUT+17,0                  ANY FORM?
         BE    CONT114                    NO, BRANCH
         MVC   CONTFORM(2),#OUT+16        DEST LENGTH
         MVC   CONTFORM+2(4),#OUT+38      DEST
         SPACE 1
CONT114  CLI   #OUT+10,0                  ANY SWITCHED LOG?
         BE    CONT116                    NO, BRANCH
         MVC   CONTOPTN(1),#OUT+10        CURRENT OPTION
         CLI   CONTOPTN,X'02'             NOSYSOUT?
         BNE   *+8                        NO, BRANCH
         MVI   CONTOPTN,0                 YES, CONVERT TO NULL
         CLI   CONTOPTN,X'04'             NODSNAME?
         BNE   *+8                        NO, BRANCH
         MVI   CONTOPTN,0                 YES, CONVERT TO NULL
         SPACE 2
CONT116  CLI   CONTOPTN,X'03'             DSNAME?
         BNE   CONT124                    NO, BRANCH
         LA    R14,FIRST4K                BASE REGISTER
         LA    R14,CONTDSN-FIRST4K(,R14)  POINT TO THE CONTDSN
         CLI   #OUT+19,0                  ANY DSNAME?
         BE    CONT120                    NO, USE PREVIOUS
         MVC   0(60,R14),BLANK128         BLANK CONTDSN
         MVC   0(44,R14),#OUT+44          DSNAME
         LH    R1,#OUT+18                 DSNAME LENGTH
         LA    R15,0(R1,R14)              POINT TO START OF MEMBER
         CLI   #OUT+21,0                  ANY MEMBER?
         BE    CONT118                    NO, BRANCH
         MVI   0(R15),C'('                BEGINNING (
         MVC   1(8,R15),#OUT+88           MEMBER NAME
         AH    R15,#OUT+20                MEMBER LENGTH
         MVI   1(R15),C')'                ENDING )
         LA    R15,2(,R15)                CURRENT LENGTH OF NAME
         SPACE 1
CONT118  MVI   0(R15),C')'                TO MATCH DSN( ...
         MVC   2(3,R15),CLOGSHR           SHR
         CLI   #OUT+11,X'02'              CORRECT?
         BE    CONT120                    YES, BRANCH
         MVC   2(3,R15),CLOGMOD           MOD
         CLI   #OUT+11,X'03'              CORRECT?
         BE    CONT120                    YES, BRANCH
         MVC   2(3,R15),CLOGNEW           NEW
         CLI   #OUT+11,X'04'              CORRECT?
         BE    CONT120                    YES, BRANCH
         MVC   2(3,R15),CLOGOLD           OLD
         SPACE 1
CONT120  MVC   INSERT#1(7),CLOGDSN        DSNAME KEYWORD
         MVC   INSERT#1+7(60),0(R14)
         TM    FLAGSBB,FONESHOT           SUBCOMMAND ON INITIAL LINE?
         BO    CONT134                    YES, BRANCH
         B     CONT129
         SPACE 2
CONT124  LA    R15,INSERT#1
         CLI   CONTOPTN,0                 ANY CURRENT OPTIONS?
         BH    CONT126                    YES, BRANCH
         MVC   0(9,R15),CLOGNDSN          ADD NODSNAME,
         LA    R15,10(,R15)
         MVC   0(9,R15),CLOGNSYS          ADD NOSYSOUT,
         LA    R15,10(,R15)
         B     CONT127
         SPACE 1
CONT126  MVC   0(7,R15),CLOGSYS           ADD SYSOUT(
         MVC   7(1,R15),CONTSYS           ADD SYSOUT CLASS
         MVC   8(2,R15),CLOGCOMM          ADD ),
         LA    R15,11(,R15)
         SPACE 1
CONT127  MVC   0(7,R15),CLOGNFOR          ADD NOFORM,
         CLI   CONTFORM+1,0               ANY FORM?
         BNE   *+12                       YES, BRANCH
         LA    R15,8(,R15)
         B     CONT128
         MVC   0(5,R15),CLOGFOR           ADD FORM(
         MVC   5(4,R15),CONTFORM+2        ADD FORM NAME
         LH    R1,CONTFORM                LENGTH
         LA    R15,5(R1,R15)
         MVC   0(2,R15),CLOGCOMM          ADD ),
         LA    R15,3(R15)
         SPACE 1
CONT128  MVC   0(6,R15),CLOGNDES          ADD NODEST,
         CLI   CONTDEST+1,0               ANY DEST?
         BE    CONT129                    NO, BRANCH
         MVC   0(5,R15),CLOGDES           ADD DEST(
         MVC   5(8,R15),CONTDEST+2        ADD DEST NAME
         LH    R1,CONTDEST                LENGTH
         LA    R15,5(R1,R15)
         MVI   0(R15),C')'                ADD )
         SPACE 2
CONT129  DS    0H
         M$MSG L030$1
         MVC   INSERT#1(120),BLANK128
         TM    DS1SMSFG,DS1PDSE         PDSE DATASET?         DRK AUG05
         BNO   CONT129C                 NO, CONTINUE          DRK AUG05
         MVC   INSERT#1(8),CBPAMCON     YES, MARK AS BPAM     DRK AUG05
         B     CONT130                                        DRK AUG05
CONT129C DS    0H                                             DRK AUG05
         MVC   INSERT#1(8),CSINGCON       ASSUME SINGLE BUFFERING
         TM    FLAGSEE,FDOUBCON+FFULLTRK  CONTROL SINGLE?
         BO    CONT130                    YES, BRANCH
         MVC   INSERT#1(8),CDOUBCON       ASSUME DOUBLE BUFFERING
         TM    FLAGSEE,FDOUBCON+FFULLTRK  CONTROL DOUBLE?
         BM    CONT130                    YES, BRANCH
         MVC   INSERT#1(8),CMULTCON       READ MULTIPLE
         CLI   DEVRPS,X'05'               SAVE EXCPS?
         BNE   CONT130                    NO, BRANCH
         MVC   INSERT#1(8),CMULTSAV       RETAIN EXCP DATA
         CLI   INUMSAV+1,2                ONE BUFFER?
         BL    CONT130                    YES, BRANCH
         LH    R15,INUMSAV                NUMBER OF BUFFERS
         CVD   R15,DOUBLE                 CONVERT TO DECIMAL
         MVC   INSERT#1+4(8),BLANKS
         MVC   INSERT#2(6),=X'402021205D40'
         ED    INSERT#2(4),DOUBLE+6
         LA    R1,INSERT#2+2              FIRST DIGIT OF TWO
         CLI   0(R1),C' '                 BLANK?
         BNE   *+8                        NO, BRANCH
         LA    R1,INSERT#2+3              YES, SECOND DIGIT OF TWO
         MVI   INSERT#1+3,C'('
         MVC   INSERT#1+4(3),0(R1)
         SPACE 2
CONT130  MVI   MTLEN,8
         M$MSG L031$1
         SPACE 1
         XC    DOUBLE,DOUBLE              ZERO  MINIMUM
         MVC   DOUBLE+4(4),=X'00FFFFFF'   STORE MAXIMUM
         LA    R2,DOUBLE                  REQUESTED LENGTHS
         LA    R3,PARMLIST+16             ACTUAL ADDRESS & LENGTH
         MVC   PARMLIST(GETLISTL),GETLIST
         GETMAIN VU,LA=(R2),A=(R3),MF=(E,PARMLIST)
         SPACE 1
         MVC   PARMLIST(FRELISTL),FRELIST
         FREEMAIN VU,A=(R3),MF=(E,PARMLIST)
         SPACE 1
         L     R15,PARMLIST+16+4          LOAD LENGTH
         SRL   R15,10                     DIVIDE BY 1024
         CVD   R15,DOUBLE                 CONVERT TO DECIMAL
         MVC   INSERT#2+8(8),BLANKS
         MVC   INSERT#2(8),=X'4020202020202120'
         ED    INSERT#2(8),DOUBLE+4
         LA    R1,INSERT#2
         LA    R1,1(,R1)                  FIND
         CLI   0(R1),X'40'                    FIRST
         BE    *-8                                 NON-BLANK
         MVC   INSERT#1(8),0(R1)
         M$MSG L036$1
         SPACE 1                                              DRK NOV06
         AIF   ('&MVSLEV' LT 'MVS220').MVS22K                 DRK NOV06
         GETMAIN VRU,LV=(X'7FFFFFFF',0),LOC=31                DRK NOV06
         SPACE 1                                              DRK NOV06
         LR    R2,R0                      LENGTH              DRK NOV06
         LR    R3,R1                      ADDRESS             DRK NOV06
         FREEMAIN RU,LV=(R2),A=(R3)                           DRK NOV06
         SPACE 1                                              DRK NOV06
         LR    R15,R2                     LENGTH              DRK NOV06
         SRL   R15,20                     DIVIDE BY 1024*1024 DRK NOV06
         CVD   R15,DOUBLE                 CONVERT TO DECIMAL  DRK NOV06
         MVC   INSERT#2+8(8),BLANKS                           DRK NOV06
         MVC   INSERT#2(8),=X'4020202020202120'               DRK NOV06
         ED    INSERT#2(8),DOUBLE+4                           DRK NOV06
         LA    R1,INSERT#2                                    DRK NOV06
         LA    R1,1(,R1)                  FIND                DRK NOV06
         CLI   0(R1),X'40'                    FIRST           DRK NOV06
         BE    *-8                                 NON-BLANK  DRK NOV06
         MVC   INSERT#1(8),0(R1)                              DRK NOV06
         M$MSG L046$1                                         DRK NOV06
.MVS22K  ANOP                                                 DRK NOV06
         M$ERRST MSGBLANK                 ONE BLANK LINE
         SPACE 2
CONT134  TM    CONTOPTN,1                    ANY LOG RECORDING?
         BNO   CONT200                       NO, BRANCH
         TM    DCBOFLGS-IHADCB+LOGDCB,X'10'  OPEN ALREADY
         BO    CONT200                       YES, BRANCH
         NI    FLAGSBB,FF-FONESHOT           ALLOW OTHER SUBCOMMANDS
*** ALLOCATE THE SYSOUT/DATA SET
         NI    FLAGSFF,FF-FLOGWRT            TURN OFF RECORD FLAG
         SPACE 1
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'CONDDNAM,R3),CONDDNAM         SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONDDNAM(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONDSORG,R3),CONDSORG         SPECIFY DSORG TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONDSORG(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONFREE,R3),CONFREE           SPECIFY FREE TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONFREE(,R3)                 START OF NEXT TEXT
         SPACE 1
CONT140  CLI   CONTOPTN,X'03'                    DSNAME ALLOCATION?
         BNE   CONT150                           NO, BRANCH
         OI    S99FLG11,S99NOCNV                 DO NOT CONVERT ALLOC
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONDSNAM,R3),CONDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),#OUT+44                  SPECIFY DSNAME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         CLI   #OUT+88,X'41'                     ANY MEMBER?
         BL    CONT141                           NO, BRANCH
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONMEMBR,R3),CONMEMBR         SPECIFY MEMBER TEXT
         MVC   6(8,R3),#OUT+88                   SPECIFY MEMBER
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONMEMBR(,R3)                START OF NEXT TEXT
         SPACE 1
CONT141  CLI   #OUT+96,X'41'                     ANY PASSWORD?
         BL    CONT142                           NO, BRANCH
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONPASSW,R3),CONPASSW         SPECIFY PASSWORD TEXT
         MVC   6(8,R3),#OUT+96                   SPECIFY PASSWORD
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONPASSW(,R3)                START OF NEXT TEXT
         SPACE 1
CONT142  LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONALLOC,R3),CONALLOC         SPECIFY DISP TEXT
         CLI   #OUT+11,2                         SHR?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),CONOSHR                     SPECIFY DISPOSITION
         CLI   #OUT+11,3                         MOD?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),CONOMOD                     SPECIFY DISPOSITION
         CLI   #OUT+11,4                         NEW?
         BNE   *+8                               NO, BRANCH
         MVI   6(R3),CONONEW                     SPECIFY DISPOSITION
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         CLI   #OUT+11,3                         MOD OR NEW?
         BL    CONT149                           NO, BRANCH
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONFIRST,R3),CONFIRST         SPECIFY PRIMARY
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONFIRST(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONSECON,R3),CONSECON         SPECIFY SECONDARY
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONSECON(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONTRK,R3),CONTRK             SPECIFY TRACK ALLOC
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONTRK(,R3)                  START OF NEXT TEXT
         SPACE 1
         CLI   #OUT+88,X'41'                     ANY MEMBER NAME?
         BL    CONT149                           NO, BRANCH
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONDIR,R3),CONDIR             SPECIFY DIRECTORY BLKS
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONDIR(,R3)                  START OF NEXT TEXT
         SPACE 1
CONT149  LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONNORM,R3),CONNORM           SPECIFY DISP=(,CATLG)
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONANORM,R3),CONANORM         SPECIFY DISP=(,,KEEP)
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         B     CONT159
         SPACE 1
CONT150  CLI   CONTFORM+1,0                      ANY FORM?
         BZ    CONT152                           NO, BRANCH
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONFORMS,R3),CONFORMS         SPECIFY FORMS TEXT
         MVC   6(4,R3),CONTFORM+2                SPECIFY FORM NAME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONFORMS(,R3)                START OF NEXT TEXT
         SPACE 1
CONT152  CLI   CONTDEST+1,0                      ANY DEST?
         BZ    CONT154                           NO, BRANCH
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONDESTS,R3),CONDESTS         SPECIFY DEST TEXT
         MVC   6(8,R3),CONTDEST+2                SPECIFY DESTINATION
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CONDESTS(,R3)                START OF NEXT TEXT
         SPACE 1
CONT154  LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CONSYSOU,R3),CONSYSOU         SPECIFY SYSOUT TEXT
         MVC   6(1,R3),CONTSYS                   SPECIFY SYSOUT CLASS
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         SPACE 1
CONT159  OI    S99TUPTR,X'80'                    MARK END OF LIST
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         MVC   DDNAMEH,WORKTBL+6        SAVE DDNAME
         LTR   R15,R15                  SUCCESSFUL?
         BZ    CONT164                  YES, BRANCH
         SPACE 2
         LA    R14,M99RB                POINTER TO SVC 99 BLOCK
         ST    R15,DAIRRC               RETURN CODE
         LA    R15,DAIRRC               POINTER TO RETURN CODE
         LA    R0,ADDRFF02              POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)         POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL              POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP           INITIALIZE DFDAPLP, DFDRCP,
*                                         DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                  PROBLEM WITH IKJEFF18?
         BZ    CONT162                  NO, BRANCH
         SPACE 2
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         SPACE 1
CONT162  MVI   CONTOPTN,0               TURN OFF LOGGING
         NI    FLAGSFF,FF-FLOGWRT       TURN OFF LOGGING
         B     CONT200
         SPACE 2
CONT164  CLI   CONTOPTN,X'03'           DSNAME ALLOCATION?
         BNE   CONT180                  NO, BRANCH
         LA    R1,L781$1                ASSUME A LOGICAL ERROR
         CLI   WORKTBL+14+6,DS1DSGPO    PARTITIONED?
         BNE   CONT166                  NO, BRANCH
         CLI   #OUT+88,X'41'            ANY MEMBER NAME?
         BL    CONT190                  NO, ERROR
         B     CONT180
         SPACE 1
CONT166  CLI   WORKTBL+14+6,DS1DSGPS    SEQUENTIAL?
         BNE   CONT190                  NO, ERROR
         CLI   #OUT+88,X'40'            ANY MEMBER NAME?
         BH    CONT190                  YES, ERROR
         SPACE 2
*** OPEN THE SYSOUT/DATA SET
CONT180  MVC   LOGDCB(LLOGDCB),LOGSDCB       CONSTRUCT A DCB
         MVC   DCBDDNAM-IHADCB+LOGDCB(8),DDNAMEH
         MVI   OPENLIST,X'80'
         OPEN  (LOGDCB,(OUTPUT)),MF=(E,OPENLIST)
         LA    R1,L780$1
         TM    DCBOFLGS-IHADCB+LOGDCB,X'10'  OPEN ALREADY
         BNO   CONT190                       NO, ERROR
         TM    FLAGSFF,FLOGWRT               OPEN WITH GOOD VALUES?
         BO    CONT200                       YES, BRANCH
         MVI   OPENLIST,X'80'
         CLOSE (LOGDCB),MF=(E,OPENLIST)
         LA    R1,L781$1                     ERROR MESSAGE
CONT190  MVI   CONTOPTN,0                    TURN OFF ANY LOGGING
         MVC   INSERT#1(8),CTEXTLOG          LOGCOPY
         B     MSGNEW
         SPACE 2
CONT200  CLI   #OUT+7,1            CPULOOP?
         BNE   CONT300             NO, BRANCH
         M$MSG L032                YES, LOOP MESSAGE
         B     *                   LOOP
         SPACE 1
CONT300  CLI   #OUT+7,2            ABEND?
         BNE   CONT400             NO, BRANCH
         SR    R1,R1
         IC    R1,TESTABEC         ABEND CODE
         LA    R1,1(,R1)
         STC   R1,TESTABEC         ABEND CODE
         CLI   TESTABEC,8
         BNH   *+8
         MVI   TESTABEC,1
         SPACE 1
CONT310  CLI   TESTABEC,1          FIRST ABEND CONDITION?
         BNE   CONT320             NO, BRANCH
         M$MSG L033                YES, ABEND MESSAGE
         B     ABEND0C1            ABEND 0C1 AT +4C IN PDSMAIN
         SPACE 1
CONT320  CLI   TESTABEC,2          SECOND ABEND CONDITION?
         BNE   CONT330             NO, BRANCH
         EX    R0,*                S0C3 HERE
         SPACE 1
CONT330  CLI   TESTABEC,3          THIRD ABEND CONDITION?
         BNE   CONT340             NO, BRANCH
         L     R15,CONT$TBL        START OF $TBL
         BASR  R14,R15             INVALID -- IN PARSE
CONT$TBL DC    V($TBL)             START OF $TBL
         SPACE 1
CONT340  CLI   TESTABEC,4          FOURTH ABEND CONDITION?
         BNE   CONT350             NO, BRANCH
         L     R15,CONTDSPY        START OF $TBL
         LA    R15,31(,R15)        ODD ADDRESS
         BASR  R14,R15             INVALID -- IN ISPDSPY
CONTDSPY DC    V(ISPDSPY)          START OF ISPDSPY
         SPACE 1
CONT350  CLI   TESTABEC,5          FIFTH ABEND CONDITION?
         BNE   CONT360             NO, BRANCH
         LINK  EP=IEFABEND         EXTERNAL ABEND
         SPACE 1
CONT360  CLI   TESTABEC,6          SIXTH ABEND CONDITION?
         BNE   CONT370             NO, BRANCH
         L     R15,=XL4'FF000BAD'
         BASR  R14,R15             INVALID ADDRESS
         SPACE 1
CONT370  CLI   TESTABEC,7          SEVENTH ABEND CONDITION?
         BNE   CONT380             NO, BRANCH
         LOAD  EP=IEBGENER
         LR    R13,R0              SET SAVE AREA TO ENTRY POINT
         LINK  EP=IEBGENER         EXTERNAL ABEND
         SPACE 1
CONT380  CLI   TESTABEC,8          EIGHTH ABEND CONDITION?
         BNE   CONT399             NO, BRANCH
         ABEND 4095                U4095 ABEND
         SPACE 1
CONT399  DS    0H
         SPACE 1
CONT400  CLI   #OUT+7,3            OUTLOOP?
         BNE   CONT500             NO, BRANCH
         M$MSG L034                YES, LOOP MESSAGE
         B     CONT400             LOOP
         SPACE 1
CONT500  CLI   #OUT+7,4            MESSAGES?
         BNE   CONT600             NO, BRANCH
         SPACE 1
         MVI   MTLEN,8             LENGTH OF INSERT           DRK APR08
         MVI   MTLEN+4,8           LENGTH OF INSERT           DRK APR08
         MVC   INSERT#1(8),CTEXTP1                            DRK APR08
         MVC   INSERT#2(8),CTEXTP2                            DRK APR08
         L     R4,=V(MSGCSECT)     FIRST INFORMATIONAL MESSAGEDRK APR08
CONT510  LR    R1,R4               POINT TO IT                DRK APR08
         LA    R1,1(,R1)           MESSAGE NUMBER NNN         DRK APR08
         M$MSG (R1)                OUTPUT IT                  DRK APR08
         SR    R0,R0               CLEAR R0                   DRK APR08
         ICM   R0,B'0011',8(R4)    TOTAL LENGTH OF MESSAGE    DRK APR08
         AR    R4,R0               NEXT MESSAGE               DRK APR08
         CLI   1(R4),C'3'          DONE?                      DRK APR08
         BNH   CONT510             NO, BRANCH                 DRK APR08
         LA    R5,CONLIST          FIRST ACTION MESSAGE       DRK APR08
CONT520  L     R1,0(,R5)           POINT TO IT                DRK APR08
         M$ERRST (R1)              OUTPUT IT                  DRK APR08
         LA    R5,4(,R5)           NEXT MESSAGE               DRK APR08
         CLI   0(R5),X'FF'         DONE?                      DRK APR08
         BNE   CONT520             NO, BRANCH                 DRK APR08
CONT530  LR    R1,R4               NEXT WARNING/ERROR MESSAGE DRK APR08
         LA    R1,1(,R1)           MESSAGE NUMBER NNN         DRK APR08
         M$MSG (R1)                OUTPUT IT                  DRK APR08
         SR    R0,R0               CLEAR R0                   DRK APR08
         ICM   R0,B'0011',8(R4)    TOTAL LENGTH OF MESSAGE    DRK APR08
         AR    R4,R0               NEXT MESSAGE               DRK APR08
         CLC   0(4,R4),=CL4' '     DONE?                      DRK APR08
         BE    CONT540             YES                        DRK APR08
         CLI   1(R4),C'9'          DONE?                      DRK APR08
         BNH   CONT530             NO, BRANCH                 DRK APR08
CONT540  DS    0H                                             DRK APR08
         AGO   .XTESTM             SKIP OLD TESTMSG CODE
         MVC   INSERT#1(8),CTEXTP1
         MVC   INSERT#2(8),CTEXTP2
         LA    R4,L000             FIRST INFORMATIONAL MESSAGE
CONT510  LR    R1,R4               POINT TO IT
         M$MSG (R1)                OUTPUT IT
         LA    R4,3(,R4)           NEXT MESSAGE
         CLI   0(R4),C'3'          DONE?
         BNH   CONT510             NO, BRANCH
         LA    R5,CONLIST          FIRST ACTION MESSAGE
CONT520  L     R1,0(,R5)           POINT TO IT
         M$ERRST (R1)              OUTPUT IT
         LA    R5,4(,R5)           NEXT MESSAGE
         CLI   0(R5),X'FF'         DONE?
         BNE   CONT520             NO, BRANCH
CONT530  LR    R1,R4               NEXT WARNING/ERROR MESSAGE
         M$MSG (R1)                OUTPUT IT
         LA    R4,3(,R4)           NEXT MESSAGE
         CLI   0(R4),C'9'          DONE?
         BNH   CONT530             NO, BRANCH
.XTESTM  ANOP
         SPACE 1
CONT600  CLI   #OUT+7,5            IOSTATS DESIRED?
         BNE   CONT700             NO, BRANCH
         LH    R1,IODONE           ** INPUT ROUTINE ENTRIES
         LA    R14,MSGCOA1
         BAS   R2,CONT900
         LH    R1,IODONEW          ** NUMBER OF TTR CHANGES
         LA    R14,MSGCOA2
         BAS   R2,CONT900
         LH    R1,IOLOGUSE         ** LOGICAL INPUTS PERFORMED
         LA    R14,MSGCOA3
         BAS   R2,CONT900
         LH    R1,IOPHYTRK         ** PHYSICAL TRACKS READ
         LA    R14,MSGCOA4
         BAS   R2,CONT900
         LH    R1,IOEDIR           ** PDSE DIRECTORY BLKS READDRK SEP05
         LA    R14,MSGCOA5                                    DRK SEP05
         BAS   R2,CONT900                                     DRK SEP05
         XC    IODONE(10),IODONE                              DRK SEP05
         SPACE 1
CONT700  CLI   #OUT+7,6            TESTREAD?
         BNE   CONT800             NO, BRANCH
         TM    DS1SMSFG,DS1PDSE         PDSE DATASET?         DRK AUG05
         BO    CONT800                  YES, NO TESTREAD      DRK AUG05
         MVC   #OUT+20(1),FLAGSEE         SAVE THE INPUT FLAGS
         M$ERRST MSGBLANK                 ONE BLANK LINE
         MVC   INSERT#1(8),CSINGCON       SINGLE BUFFERING
         M$MSG L031$1
         OI    FLAGSEE,FDOUBCON+FFULLTRK  CONTROL SINGLE
         BAS   R2,CONT710                 READ THE FIRST RECORD
         SPACE 1
         MVC   INSERT#1(8),CDOUBCON       DOUBLE BUFFERING
         M$MSG L031$1
         XI    FLAGSEE,FDOUBCON           CONTROL DOUBLE
         BAS   R2,CONT710                 READ THE FIRST RECORD
         SPACE 1
         MVC   INSERT#1(8),CMULTCON       DOUBLE BUFFERING
         M$MSG L031$1
         NI    FLAGSEE,FF-FFULLTRK-FDOUBCON
         BAS   R2,CONT710                 READ THE FIRST RECORD
         MVC   FLAGSEE(1),#OUT+20         RESET THE INPUT FLAGS
         B     NEWCMD
         SPACE 2
CONT710  MVI   STARTTR+2,1                SET TTR TO 1
         L     R15,=V(EXCP)               INPUT IT
         BASR  R14,R15
         CVD   R15,DOUBLE                 CONVERT RETURN CODE
         MVC   INSERT#1(8),BLANKS
         MVC   INSERT#1-2(4),=X'40212020' EDIT CHARACTERS
         ED    INSERT#1-2(4),DOUBLE+6     CONVERT TO DISPLAY
         STM   R2,R12,28(R13)             CONVERT CCHHR TO TTR
         LA    R2,IOBSEEK                 NEXT MBBCCHHR
         L     R1,INDCB+(DCBDEBAD-IHADCB)
         L     R15,ADDRRLTV
         LR    R3,R13
         BASR  R14,R15
         LR    R13,R3
         LM    R2,R12,28(R13)
         ST    R0,FULLWORD                TTR OF CURRENT DIRECTORY EOF
         UNPK  INSERT#2(7),FULLWORD(4)
         TR    INSERT#2(6),TRTABLE
         MVC   INSERT#2+6(2),BLANKS
         M$MSG L035$2
         M$ERRST MSGBLANK                 ONE BLANK LINE
         BR    R2
***
CONT800  CLI   #OUT+7,7            ALLGLOBALS?
         BNE   CONT810             NO, BRANCH
         MVI   MTLEN,8             LENGTH OF INSERT           DRK MAR11
         MVC   INSERT#1(8),BLANKS                             DRK MAR11
         M$MSG L069$1              HEADER MESSAGE             DRK NOV03
         MVC   MSGTEXT1(136),MSGBL132  CLEAR THE STATUS MESSAGE
         L     R2,=V(GLOBAL)       GLOBAL VARIABLES           DRK DEC02
CONT802  MVC   MSGTEXT1+04(08),00(R2)  VARIABLE
         MVC   MSGTEXT1+14(08),56(R2)  SETTING
         MVC   MSGTEXT1+24(08),08(R2)  SETTING
         MVC   MSGTEXT1+34(40),16(R2)  DESCRIPTION
         LA    R2,64(,R2)           NEXT ENTRY
         M$ERRST MSGTEXT1           OUTPUT THIS STATUS
         CLI   0(R2),X'FF'          END OF TABLE?
         BNE   CONT802              NO, BRANCH
         B     NEWCMD               ALL DONE
***
CONT810  CLI   #OUT+7,8            GLOBALMODS?
         BNE   CONT820             NO, BRANCH                 DRK SEP02
         MVI   MTLEN,8             LENGTH OF INSERT           DRK MAR11
         MVC   INSERT#1(8),=CL8'MODIFIED'                     DRK MAR11
         M$MSG L069$1              HEADER MESSAGE             DRK NOV03
         MVC   MSGTEXT1(136),MSGBL132  CLEAR THE STATUS MESSAGE
         L     R2,=V(GLOBAL)       GLOBAL VARIABLES           DRK DEC02
CONT812  MVC   MSGTEXT1+04(08),00(R2)  VARIABLE
         MVC   MSGTEXT1+14(08),56(R2)  SETTING
         MVC   MSGTEXT1+24(08),08(R2)  DEFAULT
         MVC   MSGTEXT1+34(40),16(R2)  DESCRIPTION
         CLC   8(8,R2),56(R2)          DEFAULT AND SETTING THE SAME?
         BE    CONT814                 YES, BRANCH
         M$ERRST MSGTEXT1           OUTPUT THIS STATUS
CONT814  LA    R2,64(,R2)           NEXT ENTRY
         CLI   0(R2),X'FF'          END OF TABLE?
         BNE   CONT812              NO, BRANCH
         B     NEWCMD               ALL DONE
CONT820  CLI   #OUT+7,9            PDSMAIN?                   DRK SEP02
         B     CONT830             NO, BRANCH                 DRK AUG17
         L     R2,=V(PDSMAIN)      DATE/TIME STAMP            DRK SEP02
         MVI   MTLEN,64            LENGTH OF INSERT           DRK SEP02
         MVC   INSERT#1(64),5(R2)  NAME/VERS/DATE/TIME        DRK FEB11
         M$MSG L107$1                                         DRK SEP02
         M$ERRST MSGBLANK          ONE BLANK LINE             DRK JUN05
         B     NEWCMD              ALL DONE                   DRK SEP02
CONT830  CLI   #OUT+7,10           MODS?                      DRK DEC02
         BNE   CONT834             NO, BRANCH                 DRK DEC02
CONT831  DS    0H                  MODS ENTRY POINT           DRK JUN06
         M$MSG L070                HEADER MESSAGE             DRK NOV03
         MVC   MSGTEXT1(136),MSGBL132  CLEAR THE STATUS MSG   DRK DEC02
         L     R2,=V(PDSMODS)      PDS MODS CSECT             DRK DEC02
CONT832  MVC   MSGTEXT1+04(64),00(R2)  DESCRIPTION            DRK DEC02
         LA    R2,64(,R2)          NEXT ENTRY                 DRK DEC02
         M$ERRST MSGTEXT1          OUTPUT THIS STATUS         DRK DEC02
         CLI   0(R2),X'FF'         END OF TABLE?              DRK DEC02
         BNE   CONT832             NO, BRANCH                 DRK DEC02
         M$ERRST MSGBLANK          ONE BLANK LINE             DRK JUN05
         B     NEWCMD              ALL DONE                   DRK DEC02
CONT834  CLI   #OUT+7,11           DASD?                      DRK DEC04
         BNE   CONT838             NO, BRANCH                 DRK MAR05
         M$MSG L096                HEADER MESSAGE             DRK DEC04
         MVC   MSGTEXT1(136),MSGBL132  CLEAR THE STATUS MSG   DRK DEC04
         L     R2,=V(GEO)          DASD GEO CSECT             DRK DEC04
CONT836  MVC   MSGTEXT1+04(64),00(R2)  DESCRIPTION            DRK DEC04
         LA    R2,64(,R2)          NEXT ENTRY                 DRK DEC04
         M$ERRST MSGTEXT1          OUTPUT THIS STATUS         DRK DEC04
         CLI   0(R2),X'FF'         END OF TABLE?              DRK DEC04
         BNE   CONT836             NO, BRANCH                 DRK DEC04
         M$ERRST MSGBLANK          ONE BLANK LINE             DRK JUN05
         B     NEWCMD              ALL DONE                   DRK DEC04
CONT838  DS    0H                                             DRK APR09
         CLI   #OUT+7,13           COMPILERS?                 DRK APR09
         BNE   CONT840             NO, BRANCH                 DRK APR09
         MVC   MSGTEXT1(136),MSGBL132  CLEAR THE STATUS MSG   DRK APR09
         L     R2,=V(TRANS)        COMPILER TRANSLATOR CSECT  DRK APR09
CONT838T MVC   MSGTEXT1+04(64),00(R2)  DESCRIPTION            DRK APR09
         LA    R2,64(,R2)          NEXT ENTRY                 DRK APR09
         M$ERRST MSGTEXT1          OUTPUT THIS STATUS         DRK APR09
         CLI   0(R2),X'FF'         END OF TABLE?              DRK APR09
         BNE   CONT838T            NO, BRANCH                 DRK APR09
         M$ERRST MSGBLANK          ONE BLANK LINE             DRK APR09
         B     NEWCMD              ALL DONE                   DRK APR09
CONT840  DS    0H                                             DRK APR09
         AIF   ('&MVSLEV' LT 'MVS6XX').MVSOLD2                DRK MAR05
         CLI   #OUT+7,12           LISTENV?                   DRK MAR05
         BNE   CONT850             NO, BRANCH                 DRK MAR05
CONTCPU  DS    0H                                             DRK MAR05
         L     R4,=A(LISTENV)                                 DRK MAY05
         BASR  R3,R4                                          DRK MAY05
         B     NEWCMD              ALL DONE                   DRK FEB10
CONT850  DS    0H                                             DRK FEB10
         CLI   #OUT+7,14           TSU?                       DRK FEB10
         BNE   NEWCMD              NO, BRANCH                 DRK FEB10
         L     R4,=A(TSUSERS)                                 DRK FEB10
         BASR  R3,R4                                          DRK FEB10
.MVSOLD2 ANOP                                                 DRK MAR05
         B     NEWCMD              ALL DONE                   DRK MAR05
***
CONT900  MVC   MSGTEXT1,0(R14)
         MVC   MSGTEXT1+4(7),MSGCOAM
         LTR   R1,R1
         BZR   R2
         CVD   R1,DOUBLE
         ED    MSGTEXT1+4(7),DOUBLE+5
         M$ERRST MSGTEXT1
         BR    R2
         SPACE 4
         USING IHADCB,R1
*** DCB OPEN EXIT
CONT980  CLC   DCBDSORG(2),ZERO              ANY DSORG?
         BNE   *+8                           YES, BRANCH
         OI    DCBDSORG,DS1DSGPS             NO, USE DSORG=PS
         TM    DCBDSORG,DS1DSGPS             DSORG=PS?
         BNOR  R14                           NO, ERROR
         CLI   DCBRECFM,0                    ANY RECFM?
         BNE   *+8                           YES, BRANCH
         MVI   DCBRECFM,DCBRECF+DCBRECBR     NO, USE RECFM=FB
         SPACE 1
* AVOID S013-34 ABENDS WHEN ALLOCATING NEW USERID.LOAD- FILES IN TSO
         TM    DCBRECFM,DCBRECU              RECFM=U?         DRK MAY11
         BNO   CONT982                       NO               DRK MAY11
         CLC   DCBBLKSI,=H'0'                ANY BLKSIZE?     DRK MAY11
         BNE   *+8                           YES, BRANCH      DRK MAY11
         MVC   DCBBLKSI,=H'32760'            NO, AVOID S013-34        "
CONT982  DS    0H                                             DRK MAY11
         SPACE 1
         TM    DCBRECFM,DCBRECF+DCBRECV      RECFM=F. OR RECFM=V.?
         BNMR  R14                           NO, ERROR
         LA    R0,80                         DEFAULT LRECL
         TM    DCBRECFM,DCBRECV              RECFM=V.?
         BNO   *+8                           NO, BRANCH
         LA    R0,255                        DEFAULT LRECL FOR VARIABLE
         CLC   DCBLRECL(2),ZERO              ANY LRECL?
         BNE   *+8                           YES, BRANCH
         STH   R0,DCBLRECL                   NO, USE LRECL=80 | 255
         TM    DCBRECFM,DCBRECV              RECFM=V.?
         BO    CONT988                       YES, BRANCH
         CH    R0,DCBLRECL                   LRECL=80?
         BNER  R14                           NO, ERROR
CONT988  LA    R0,3120                       DEFAULT BLKSIZE
         CLC   DCBBLKSI(2),ZERO              ANY BLKSIZE?
         BNE   *+8                           YES, BRANCH
         STH   R0,DCBBLKSI                   NO, USE BLKSIZE=3120
         OI    FLAGSFF,FLOGWRT               ALL ATTRIBUTES ARE CORRECT
         BR    R14
         DROP  R1
         SPACE 2
         PRINT NOGEN
LOGSDCB  DCB   DSORG=PS,DDNAME=PDSLOG,MACRF=(PM),EXLST=CONT990
LLOGDCB  EQU   *-LOGSDCB
         PRINT GEN
         SPACE 2
CONT990  DC    0F'0',X'85',AL3(CONT980)      OPEN EXIT ONLY
         PRINT NOGEN
MSGCOA1  M$TX  ' 12,345 INPUT ROUTINE ENTRIES'
         ORG   MSGCOA1+4
MSGCOAM  DC    X'4020206B202120'
         ORG   ,
MSGCOA2  M$TX  ' 12,345 TTR CHANGES'
MSGCOA3  M$TX  ' 12,345 LOGICAL INPUTS PERFORMED'
MSGCOA4  M$TX  ' 12,345 PHYSICAL TRACKS READ'
MSGCOA5  M$TX  ' 12,345 PDSE DIRECTORY BLOCKS READ'           DRK SEP05
         PRINT GEN
CCPC     DC    C'      .   .   .  .            '
CALINCON DC    C'NOALIASINFO, '
CLKEDCON DC    C'NOLKEDDATE, '
CPROMCON DC    C'NOPROMPT, '
CRECVCON DC    C'NORECOVER, '
CTRANCON DC    C'NOTRANSLATOR, '
CBPAMCON DC    CL8'BPAM'
CSINGCON DC    CL8'SINGLE'
CDOUBCON DC    CL8'DOUBLE'
CMULTCON DC    CL8'MULTIPLE'
CMULTSAV DC    CL8'RETAIN'
CTEXTP1  DC    CL8'<PARM#1>'
CTEXTP2  DC    CL8'<PARM#2>'
CTEXTLOG DC    CL8'LOGCOPY'
CLOGOLD  DC    CL3'OLD'
CLOGMOD  DC    CL3'MOD'
CLOGSHR  DC    CL3'SHR'
CLOGNEW  DC    CL3'NEW'
CLOGDSN  DC    CL7'DSNAME('
CLOGNDSN DC    CL9'NODSNAME,'
CLOGSYS  DC    CL7'SYSOUT('
CLOGNSYS DC    CL9'NOSYSOUT,'
CLOGFOR  DC    CL5'FORM('
CLOGNFOR DC    CL7'NOFORM,'
CLOGDES  DC    CL5'DEST('
CLOGNDES DC    CL6'NODEST'
CLOGCOMM DC    CL2'),'
         SPACE 2
CONDDNAM DC    X'0055000100084040404040404040'     RETURN DDNAME
CONDSORG DC    X'0057000100024040'                 RETURN DSORG
CONFREE  DC    X'001C0000'                         FREE=CLOSE
CONMEMBR DC    X'0003000100084040404040404040'     MEMBER NAME
CONPASSW DC    X'0050000100084040404040404040'     PASSWORD
CONDSNAM DC    X'00020001002C'                     DSNAME
CONALLOC DC    X'00040001000101'                   DISP=(_)
CONNORM  DC    X'00050001000102'                   DISP=(,CATLG)
CONANORM DC    X'00060001000108'                   DISP=(,,KEEP)
CONTRK   DC    X'00070000'                         SPACE=(TRK,
CONFIRST DC    X'000A00010003000001'               SPACE=(,1
CONSECON DC    X'000B00010003000004'               SPACE=(,,4
CONDIR   DC    X'000C00010003000005'               SPACE=(,,,5)
CONOOLD  EQU   X'01'
CONOMOD  EQU   X'02'
CONONEW  EQU   X'04'
CONOSHR  EQU   X'08'
CONSYSOU DC    X'001800010001C1'                   SYSOUT=A
CONFORMS DC    X'001A00010004C4F1F0F1'             SYSOUT=(,,D101)
CONDESTS DC    X'005800010008D5F1F3F040404040'     DEST=R130
*
GETLIST  GETMAIN VU,LA=0,A=0,MF=L
GETLISTL EQU     *-GETLIST
*
FRELIST  FREEMAIN VU,A=0,MF=L
FRELISTL EQU     *-FRELIST
         SPACE 1
*** ACTION MESSAGES NOT IN MSGCSECT
CONLIST  DC    A(PDS300A)
         DC    A(PDS380A,PDS381A,PDS382A,PDS383A,PDS384A,PDS385A)
         DC    A(PDS386A,PDS390A,PDS391A,PDS392A,PDS393A,PDS394A)
         DC    A(PDS395A,PDS396A,PDS397A),X'FF'               DRK AUG16
         SPACE 1
         AIF   ('&MVSLEV' LT 'MVS6XX').MVSOLD3                DRK MAY05
*** DISPLAY SOFTWARE AND HARDWARE ENVIRONMENT INFO            DRK MAY05
LISTENV  DS    0H                                             DRK MAY05
         USING *,R4                                           DRK MAY05
         LA    R14,CONTA31A                                   DRK APR05
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK APR05
         BSM   0,R14               31-BIT MODE                DRK APR05
CONTA31A DS    0H                                             DRK APR05
         MVI   MTLEN,15            LENGTH OF INSERT           DRK APR05
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK APR05
         L     R15,CVTECVT-CVTMAP(,R14)  ECVT                 DRK NOV09
         MVC   INSERT#1(7),ECVTPNAM-ECVT(R15)    OS NAME      DRK NOV09
         MVC   INSERT#1+7(2),ECVTPVER-ECVT(R15)  OS VERSION   DRK NOV09
         MVI   INSERT#1+09,C'.'       .                       DRK APR05
         MVC   INSERT#1+10(2),ECVTPREL-ECVT(R15) OS RELEASE   DRK NOV09
         MVI   INSERT#1+12,C'.'       .                       DRK APR05
         MVC   INSERT#1+13(2),ECVTPMOD-ECVT(R15) OS MOD LEVEL DRK NOV09
         MVI   MTLEN+4,4           LENGTH OF INSERT           DRK APR05
         L     R15,CVTSMCA-CVTMAP(,R14)  SMCA                 DRK NOV09
         MVC   INSERT#2(4),SMCASID-SMCABASE(R15)  SMF ID      DRK NOV09
         LA    R14,CONTA24A                                   DRK APR05
         BSM   0,R14               24-BIT MODE                DRK APR05
CONTA24A DS    0H                                             DRK APR05
         M$MSG L280$2                                         DRK APR05
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK MAR05
         S     R14,=F'40'          CVTPROD                    DRK MAR05
         MVI   MTLEN,32            LENGTH OF INSERT           DRK MAR05
         MVC   INSERT#1(32),0(R14)                            DRK MAR05
         M$MSG L281$1                                         DRK MAR05
         SPACE 1                                              DRK MAR05
         LA    R14,CONTA31B                                   DRK MAR05
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK MAR05
         BSM   0,R14               31-BIT MODE                DRK MAR05
CONTA31B DS    0H                                             DRK MAR05
         MVI   MTLEN,30            LENGTH OF INSERT           DRK MAR05
         MVC   INSERT#1(30),CCPC   CPC OVERLAY                DRK MAR05
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK MAR05
         L     R15,CVTHID-CVTMAP(,R14)  CPC ADDRESS           DRK NOV09
         CLI   CPCND_FLAGS-SHID(R15),X'40'  INVALID FLAG?     DRK NOV09
         BE    CONT838X            YES, DONE                  DRK MAR05
         MVC   INSERT#1(6),CPCND_TYPE-SHID(R15)      TYPE     DRK NOV09
         MVC   INSERT#1+7(3),CPCND_MODEL-SHID(R15)   MODEL    DRK NOV09
         MVC   INSERT#1+11(3),CPCND_MAN-SHID(R15)    MANUFAC  DRK NOV09
         MVC   INSERT#1+15(2),CPCND_PLANT-SHID(R15)  PLANT    DRK NOV09
         MVC   INSERT#1+18(12),CPCND_SEQNO-SHID(R15) SEQ NO   DRK NOV09
CONT838X DS    0H                                             DRK MAR05
         LA    R14,CONTA24B                                   DRK MAR05
         BSM   0,R14               24-BIT MODE                DRK MAR05
CONTA24B DS    0H                                             DRK MAR05
         M$MSG L282$1                                         DRK MAR05
         LA    R14,CONTA31C                                   DRK APR05
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK APR05
         BSM   0,R14               31-BIT MODE                DRK APR05
CONTA31C DS    0H                                             DRK APR05
         L     R14,CVTPTR(,R0)        CVT                     DRK APR05
         L     R15,CVTOPCTP-CVTMAP(,R14)  RMCT                DRK NOV09
         L     R15,RMCTADJC-RMCT(,R15)  CPU RATE ADJUSTMENT   DRK NOV09
         LTR   R15,R15                ZERO?                   DRK APR05
         BNZ   *+4+4                  NO                      DRK APR05
         LA    R15,1(R15)             YES, AVOID S0C9         DRK APR05
         CVD   R15,GENERIC                                    DRK APR05
         ZAP   DOUBLE(8),=PL8'1600000000'                     DRK APR05
         DP    DOUBLE(8),GENERIC+5(3) 16000000/SU             DRK APR05
         MVI   MTLEN,11               LENGTH OF INSERT        DRK APR05
         MVC   INSERT#1(11),SUMASK                            DRK APR05
         ED    INSERT#1(11),DOUBLE    SU'S/SEC                DRK APR05
         ZAP   DOUBLE(8),DOUBLE(5)                            DRK APR05
         MP    DOUBLE(8),=PL2'100'    2 DECIMAL PLACES        DRK APR05
         DP    DOUBLE(8),=PL3'48.50'  THIERRY FALISSARD COEFF DRK APR05
         L     R15,CVTCSD-CVTMAP(,R14)  CSD                   DRK NOV09
         S     R14,=F'40'             CVTPROD                 DRK JUN05
         CLC   11(4,R14),=C'7708'     Z/OS 1.6 AND ABOVE?     DRK JUN05
         BNH   NUMCPUH                NO                      DRK JUN05
* ALIVE CPUS. CPS, ZCBP/ZAAP AND ZIIPS.                       DRK NOV09
         L     R15,CSD_NUMBER_ONLINE_CPUS-CSD(,R15)  #CPU'S ALIVE     "
* STANDARD CPS.                                               DRK OCT21
*        L     R15,CSD_NUMBER_ONLINE_STANDARD_CPS(,R15)       DRK OCT21
         B     *+4+4                                          DRK JUN05
NUMCPUH  DS    0H                                             DRK JUN05
         LH    R15,CSDCPUOL-CSD(,R15)  #CPU'S ALIVE           DRK NOV09
         CVD   R15,GENERIC                                    DRK APR05
         ZAP   DOUBLE(8),DOUBLE(5)    NEED ZEROS FOR BIG IRON DRK DEC10
         MP    DOUBLE(8),GENERIC+6(2) UNI-MIPS * CPU'S        DRK APR05
*        LA    R1,997         USER 997                        ... DEC10
*        SVC   13             ** DEBUG **                     ... DEC10
         MVI   MTLEN+4,11             LENGTH OF INSERT        DRK APR05
         MVC   INSERT#2(11),SUMASK                            DRK APR05
         ED    INSERT#2(11),DOUBLE+3  TOTAL MIPS              DRK APR05
         LA    R14,CONTA24C                                   DRK APR05
         BSM   0,R14               24-BIT MODE                DRK APR05
CONTA24C DS    0H                                             DRK APR05
         M$MSG L283$2                                         DRK APR05
         L     R14,CVTPTR(,R0)        CVT                     DRK APR05
         S     R14,=F'6'              CVT - 6                 DRK APR05
         XC    DOUBLE(8),DOUBLE                               DRK APR05
         MVC   DOUBLE+1(2),0(R14)     CVTMDL                  DRK APR05
         MVO   DOUBLE(3),DOUBLE(3)                            DRK APR05
         OI    DOUBLE+2,X'0C'         SIGN                    DRK APR05
         MVI   MTLEN,6                LENGTH OF INSERT        DRK APR05
         MVC   INSERT#1(6),SUMASK                             DRK APR05
         ED    INSERT#1(6),DOUBLE     CPU MODEL               DRK APR05
         MVI   MTLEN+4,4              LENGTH OF INSERT        DRK APR05
         MVC   INSERT#2(4),SUMASK                             DRK APR05
         ED    INSERT#2(4),GENERIC+6  ONLINE CPU'S            DRK APR05
         M$MSG L284$2                                         DRK APR05
         LA    R14,CONTA31D                                   DRK MAY05
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK MAY05
         BSM   0,R14               31-BIT MODE                DRK MAY05
CONTA31D DS    0H                                             DRK MAY05
         MVI   MTLEN,8             LENGTH OF INSERT           DRK MAY05
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK MAY05
         L     R15,CVTRLSTG-CVTMAP(,R14)  CVTRLSTG            DRK NOV09
         CVD   R15,DOUBLE                                     DRK MAY05
         DP    DOUBLE(8),=PL3'1024'   MB                      DRK MAY05
         MVC   INSERT#1(8),SUMASK                             DRK MAY05
         ED    INSERT#1(8),DOUBLE+1   REAL STORAGE            DRK MAY05
         MVI   MTLEN+4,6           LENGTH OF INSERT           DRK MAY05
         L     R15,CVTRCEP-CVTMAP(,R14)  RCE                  DRK NOV09
         L     R15,RCEESPL-RCE(,R15)  RCEESPL                 DRK NOV09
         CVD   R15,DOUBLE                                     DRK MAY05
         MP    DOUBLE(8),=PL1'4'      * 4                     DRK MAY05
         DP    DOUBLE(8),=PL3'1024'   MB                      DRK MAY05
         MVC   INSERT#2(6),SUMASK                             DRK MAY05
         MVI   INSERT#2+4,X'21'       IF ZERO                 DRK MAY05
         ED    INSERT#2(6),DOUBLE+2   EXPANDED STORAGE        DRK MAY05
         LA    R14,CONTA24D                                   DRK MAY05
         BSM   0,R14               24-BIT MODE                DRK MAY05
CONTA24D DS    0H                                             DRK MAY05
         M$MSG L285$2                                         DRK MAY05
         SPACE 1                                              DRK MAY05
         LA    R14,CONTA31E                                   DRK MAY05
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK MAY05
         BSM   0,R14               31-BIT MODE                DRK MAY05
CONTA31E DS    0H                                             DRK MAY05
         MVI   MTLEN,8             LENGTH OF INSERT           DRK MAY05
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK MAY05
         L     R15,CVTECVT-CVTMAP(,R14)  ECVT                 DRK NOV09
         MVC   INSERT#1(8),ECVTHDNM-ECVT(R15)  HARDWARE NAME  DRK NOV09
         MVI   MTLEN+4,8           LENGTH OF INSERT           DRK MAY05
         MVC   INSERT#2(8),ECVTLPNM-ECVT(R15)  LPAR NAME      DRK NOV09
         LA    R14,CONTA24E                                   DRK MAY05
         BSM   0,R14               24-BIT MODE                DRK MAY05
CONTA24E DS    0H                                             DRK MAY05
*        ST    R4,FULLWORD
         M$MSG L286$2                                         DRK MAY05
         LA    R14,CONTA31F                                   DRK MAY05
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK MAY05
         BSM   0,R14               31-BIT MODE                DRK MAY05
CONTA31F DS    0H                                             DRK MAY05
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK MAY05
         L     R15,CVTECVT-CVTMAP(,R14)  ECVT                 DRK NOV09
         L     R15,ECVTIPA-ECVT(,R15)  IPA                    DRK NOV09
         MVC   DOUBLE(1),IPAARCHL-IPA(R15)  ARCHLVL           DRK NOV09
         S     R14,=F'40'          CVTPROD                    DRK MAY05
         CLC   11(4,R14),=C'6609'  OS/390 2.10 AND ABOVE?     DRK MAY05
         BNH   EXIT28X             NO                         DRK MAY05
         MVI   MTLEN,1             LENGTH OF INSERT           DRK MAY05
         MVC   INSERT#1(1),DOUBLE  ARCHLVL                    DRK MAY05
         MVI   MTLEN+4,7           LENGTH OF INSERT           DRK MAY05
         CLI   DOUBLE,C'2'         Z/ARCH?                    DRK MAY05
         BL    *+4+6+4             NO                         DRK MAY10
         MVC   INSERT#2(7),=CL7'Z/ARCH'                       DRK MAY05
         B     *+4+6                                          DRK MAY05
         MVC   INSERT#2(7),=CL7'ESA/390'                      DRK MAY05
EXIT28X  DS    0H                                             DRK MAY05
         LA    R14,CONTA24F                                   DRK MAY05
         BSM   0,R14               24-BIT MODE                DRK MAY05
CONTA24F DS    0H                                             DRK MAY05
         M$MSG L287$2                                         DRK MAY05
         LA    R14,CONTA31G                                   DRK MAY05
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK MAY05
         BSM   0,R14               31-BIT MODE                DRK MAY05
CONTA31G DS    0H                                             DRK MAY05
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK MAY05
         L     R14,CVTPCCAT-CVTMAP(,R14)  CVTPCCAT            DRK NOV09
*        LA    R1,32               MAX LOOP (Z/OS R6)         DRK MAR06
*        LA    R1,64               MAX LOOP (Z/OS R9)         DRK JUL08
* FROM SHOWZOS                                                DRK OCT21
         LH    R1,CVTMAXMP-CVTMAP(,R14) MAX NUMBER OF CPU'S-1 "  RS0709
         AHI   R1,1                     +1                    "  RS0709
PCCA     DS    0H                                             DRK AUG05
         L     R15,0(,R14)         PCCA                       DRK AUG05
         CLC   0(4,R15),=C'PCCA'   EYECATCHER?                DRK AUG05
         BE    PCCAX               YES, DONE                  DRK AUG05
         LA    R14,4(R14)          NEXT IN VECTOR TABLE       DRK AUG05
         BCT   R1,PCCA             LOOP                       DRK AUG05
PCCAX    DS    0H                                             DRK AUG05
         MVI   MTLEN,6             LENGTH OF INSERT           DRK MAY05
         MVC   INSERT#1(6),6(R15)  CPU SERIAL                 DRK MAY05
         MVI   MTLEN+4,2           LENGTH OF INSERT           DRK MAY05
         MVC   INSERT#2(2),4(R15)  CPU TYPE                   DRK MAY05
         LA    R14,CONTA24G                                   DRK MAY05
         BSM   0,R14               24-BIT MODE                DRK MAY05
CONTA24G DS    0H                                             DRK MAY05
         M$MSG L288$2                                         DRK MAY05
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK JUL06
         ICM   R14,B'1111',CVTRAC-CVTMAP(R14) RAC             DRK JUL06
         BZ    RACNONE             NO SECURITY IF ZERO        DRK JUL06
         MVI   MTLEN,4             LENGTH OF INSERT           DRK JUL06
         MVC   INSERT#1(4),RCVTID-RCVT(R14)  SECURITY SERVER  DRK NOV09
         CLC   RCVTID-RCVT(4,R14),=C'RCVT'   RACF?            DRK NOV09
         BE    RACF                YES                        DRK JUL06
         CLC   RCVTID-RCVT(4,R14),=C'RTSS'   TOP-SECRET?      DRK NOV09
         BE    TSS                 YES                        DRK JUL06
         CLC   RCVTID-RCVT(4,R14),=C'DBLT'   DEADBOLT?        DRK NOV09
         BE    DBLT                YES                        DRK AUG06
         CLC   RCVTID-RCVT(4,R14),=C'PIES'   PIES?            DRK JAN10
         BE    PIES                YES                        DRK JAN10
         B     RACMSG              NO, THEN ACF2              DRK JUL06
RACNONE  DS    0H                                             DRK JUL06
         MVC   INSERT#1(4),=C'NONE'                           DRK JUL06
         B     RACMSG                                         DRK JUL06
RACF     DS    0H                                             DRK JUL06
         MVC   INSERT#1(4),=C'RACF'                           DRK JUL06
         B     RACMSG                                         DRK JUL06
TSS      DS    0H                                             DRK JUL06
         MVC   INSERT#1(4),=C'TSS '                           DRK JUL06
         B     RACMSG                                         DRK JUL06
DBLT     DS    0H                                             DRK AUG06
         MVC   INSERT#1(4),=C'DBLT'                           DRK AUG06
         B     RACMSG                                         DRK AUG06
PIES     DS    0H                                             DRK JAN10
         MVC   INSERT#1(4),=C'PIES'                           DRK JAN10
         B     RACMSG                                         DRK JAN10
RACMSG   DS    0H                                             DRK JUL06
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK OCT06
         L     R14,CVTJESCT-CVTMAP(,R14)  CVTJESCT            DRK NOV09
         MVI   MTLEN+4,4           LENGTH OF INSERT           DRK OCT06
         MVC   INSERT#2(4),28(R14) JES TYPE                   DRK OCT06
         M$MSG L289$2                                         DRK MAY05
         L     R14,CVTPTR(,R0)         POINT TO THE CVT       DRK NOV06
         USING CVT,R14                                        DRK NOV06
         L     R15,CVTSMCA             SMF SMCA               DRK NOV06
         USING SMCABASE,R15                                   DRK NOV06
         L     R1,SMCAITME             IPL TIME (BINARY)      DRK NOV06
         XC    HHMMSS(4),HHMMSS        CLEAR TIME FULLWORD    DRK NOV06
         SLR   R0,R0                   FROM SHOWZOS ------.   DRK NOV06
         D     R0,=F'360000'           GET HOURS IN R1    "   DRK NOV06
         CVD   R1,DOUBLE                                      DRK NOV06
         MVO   DOUBLE+6(2),DOUBLE+6(2)                        DRK NOV06
         MVC   HHMMSS(1),DOUBLE+6                             DRK NOV06
         LR    R1,R0                   REMAINDER          "   DRK NOV06
         SLR   R0,R0                                      "   DRK NOV06
         D     R0,=F'6000'             GET MINUTES IN R1  "   DRK NOV06
         CVD   R1,DOUBLE                                      DRK NOV06
         MVO   DOUBLE+6(2),DOUBLE+6(2)                        DRK NOV06
         MVC   HHMMSS+1(1),DOUBLE+6                           DRK NOV06
         LR    R1,R0                   REMAINDER          "   DRK NOV06
         SLR   R0,R0                                      "   DRK NOV06
         D     R0,=F'100'              GET SECONDS IN R1  "   DRK NOV06
         CVD   R1,DOUBLE                                      DRK NOV06
         MVO   DOUBLE+6(2),DOUBLE+6(2)                        DRK NOV06
         MVC   HHMMSS+2(1),DOUBLE+6                           DRK NOV06
         SPACE 1                                              DRK NOV06
         STM   R14,R8,MSGTEXT1         SAVE ENTRY REGS        DRK NOV06
         L     R8,=V(TIME)             TIME ROUTINE           DRK NOV06
         L     R0,HHMMSS               IPL TIME               DRK NOV06
         L     R1,SMCAIDTE             IPL DATE               DRK NOV06
         MVC   ##SUBCOM(3),=CL3'IPL'   IPL TIME CONVERSION    DRK NOV06
         BASR  R2,R8                   CALL TIME ROUTINE      DRK NOV06
         LM    R14,R8,MSGTEXT1         RESET ENTRY REGS       DRK NOV06
         MVI   MTLEN,42                LENGTH OF INSERT       DRK NOV06
         MVC   INSERT#1(42),MSGTEXT2+4 MOVE IN TIME/DATE      DRK NOV06
         M$MSG L290$1                                         DRK NOV06
         LA    R14,CONTA31H                                   DRK JAN09
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK JAN09
         BSM   0,R14               31-BIT MODE                DRK JAN09
CONTA31H DS    0H                                             DRK JAN09
         MVI   MTLEN,8             LENGTH OF INSERT           DRK JAN09
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK JAN09
         L     R15,CVTECVT-CVTMAP(,R14)  ECVT                 DRK NOV09
         MVC   INSERT#1(8),ECVTSPLX-ECVT(R15)  SYSPLEX NAME   DRK NOV09
         MVI   MTLEN+4,2           LENGTH OF INSERT           DRK JAN09
         MVC   INSERT#2(2),ECVTCLON-ECVT(R15)  SYSPLEX ID     DRK NOV09
         LA    R14,CONTA24H                                   DRK JAN09
         BSM   0,R14               24-BIT MODE                DRK JAN09
CONTA24H DS    0H                                             DRK JAN09
         M$MSG L291$2                                         DRK JAN09
         MVI   MTLEN,8             LENGTH OF INSERT           DRK APR10
         L     R14,CVTPTR(,R0)     CVT ADDRESS                DRK APR10
         MVC   INSERT#1(8),CVTSNAME-CVTMAP(R14)  SYSTEM NAME  DRK SEP10
         M$MSG L292$1                                         DRK APR10
         M$ERRST MSGBLANK          ONE BLANK LINE             DRK APR10
         SPACE 1
         BR    R3                  RETURN                     DRK MAY05
TSUSERS  DS    0H                                             DRK FEB10
         USING *,R4                                           DRK FEB10
         L     R0,=A(NUMTSU*8)      LENGTH OF WORK AREA       DRK FEB10
         ICM   R0,B'1000',=AL1(27)  SUBPOOL 27                DRK FEB10
         GETMAIN R,LV=(0)           GETMAIN TSU WORK AREA     DRK FEB10
         ST    R1,TSUADDR           TSU WORK AREA             DRK FEB10
         LR    R2,R1                PT @ USERID TABLE         DRK FEB10
         MVC   TSUWIDTH(4),=F'8'    TABLE WIDTH               DRK FEB10
         LA    R14,CONTA31I                                   DRK FEB10
         O     R14,=X'80000000'    HIGH-ORDER X'80'           DRK FEB10
         BSM   0,R14               31-BIT MODE                DRK FEB10
CONTA31I DS    0H                                             DRK FEB10
         L     R14,CVTPTR(,R0)      CVT ADDR                  DRK FEB10
         L     R14,CVTASVT-CVTMAP(R14) ASVT PREFIX ADDR       DRK FEB10
         L     R5,ASVTMAXU-ASVT(R14) SET MAX ADDRESS SPACES   DRK FEB10
         LA    R14,ASVTFRST-ASVT(R14) ASVT START              DRK FEB10
TSULOOP  LA    R14,4(R14)           FIRST ASSIGNED ENTRY      DRK FEB10
         TM    0(R14),X'80'         IS THIS ASCB AVAILABLE?   DRK FEB10
         BO    TSUNEXT              YES, CHECK NEXT ENTRY     DRK FEB10
         L     R15,0(R14,0)         THIS ASCB IS ASSIGNED.    DRK FEB10
         CLC   ASCBJBNS-ASCB(4,R15),=XL4'0' JOBNAME PTR ZERO? DRK FEB10
         BE    TSUNEXT              YES, SKIP                 DRK FEB10
         L     R1,ASCBOUCB-ASCB(R15) OUCB ADDRESS             DRK FEB10
         TM    OUCBYFL-OUCB(R1),OUCBLOG  TSO USER LOGGED ON?  DRK FEB10
         BO    TSUMOVE              YES                       DRK FEB10
TSUNEXT  BCT   R5,TSULOOP           NO                        DRK FEB10
         B     TSUDONE                                        DRK FEB10
         SPACE 1                                              DRK FEB10
TSUMOVE  DS    0H                                             DRK FEB10
         CLI   OUCBUSRD-OUCB(R1),X'40'  USERID IN OUCB?       DRK FEB10
         BE    TSUNEXT              NO, SKIP STARTING ADDR SP DRK FEB10
         MVC   0(8,R2),OUCBUSRD-OUCB(R1) YES, MOVE IN TABLE   DRK FEB10
         LA    R2,8(R2)             STEP TO NEXT TABLE ENTRY  DRK FEB10
         B     TSUNEXT                                        DRK FEB10
         SPACE 1                                              DRK FEB10
TSUDONE  DS    0H                                             DRK FEB10
         LA    R14,CONTA24I                                   DRK FEB10
         BSM   0,R14               24-BIT MODE                DRK FEB10
CONTA24I DS    0H                                             DRK FEB10
         MVC   0(8,R2),=CL8'9999..' LAST ENTRY                DRK FEB10
         ST    R2,TSUEND            SAVE END OF TABLE ADDRESS DRK FEB10
         SPACE 1                                              DRK FEB10
* SORT MACRO FROM PETER HAVERCAN (VTOCLIST)                   DRK FEB10
         M$SORT FIELDS=(1,8,CH,A),A=TSUADDR,LENGTH=8          DRK FEB10
         SPACE 1                                              DRK FEB10
         L     R1,TSUADDR           PT @ START OF TABLE       DRK JUN10
         L     R2,TSUEND            PT @ END OF TABLE         DRK JUN10
         SR    R2,R1                TABLE LENGTH              DRK JUN10
         CVD   R2,DOUBLE            PACKED                    DRK JUN10
         DP    DOUBLE(8),=PL3'8'    NUMBER OF USERIDS         DRK JUN10
         MVI   MTLEN,6              LENGTH OF INSERT          DRK JUN10
         MVC   INSERT#1(6),TSUMASK  EDIT MASK                 DRK JUN10
         ED    INSERT#1(6),DOUBLE+2 ZONED                     DRK JUN10
         M$MSG L097$1               HEADER MESSAGE            DRK JUN10
         SPACE 1                                              DRK JUN10
         L     R2,TSUADDR           PT @ USERID TABLE         DRK FEB10
TSULINE  DS    0H                                             DRK FEB10
         LA    R14,8                8 USERIDS PER LINE        DRK FEB10
         MVC   MSGTEXT1(136),MSGBL132  CLEAR THE STATUS MSG   DRK FEB10
         LA    R15,MSGTEXT1+4       OUTPUT LINE (8-WIDE)      DRK FEB10
TSURUN   DS    0H                                             DRK FEB10
         CLC   0(8,R2),=CL8'9999..' END OF USERIDS?           DRK FEB10
         BE    TSUEOT               YES                       DRK FEB10
         MVC   0(8,R15),0(R2)       MOVE USERID TO OUTPUT LINEDRK FEB10
         LA    R15,9(R15)           NEXT OUTPUT SLOT          DRK FEB10
         LA    R2,8(R2)             NEXT USERID               DRK FEB10
         BCT   R14,TSURUN                                     DRK FEB10
         M$ERRST MSGTEXT1           OUTPUT THIS STATUS        DRK FEB10
         B     TSULINE              NEW LINE                  DRK FEB10
TSUEOT   DS    0H                                             DRK FEB10
         CLC   MSGTEXT1+4(8),=CL8' ' DONE                     DRK FEB10
         BE    TSURET               YES                       DRK FEB10
         M$ERRST MSGTEXT1           NO, PUT LAST LINE         DRK FEB10
TSURET   DS    0H                                             DRK FEB10
         M$ERRST MSGBLANK           ONE BLANK LINE            DRK JUL10
         L     R1,TSUADDR           TSU WORK AREA             DRK FEB10
         L     R0,=A(NUMTSU*8)      LENGTH OF WORK AREA       DRK FEB10
         ICM   R0,B'1000',=AL1(27)  SUBPOOL 27                DRK FEB10
         FREEMAIN R,LV=(0),A=(1)    FREEMAIN TSU WORK AREA    DRK FEB10
         BR    R3                   RETURN                    DRK FEB10
*                     1 2 3 4 5 6 7 . 8 9                     DRK APR05
SUMASK   DC    XL11'40202020202021204B2020'                   DRK APR05
TSUMASK  DC    XL6'402020202120'                              DRK JUN10
         DROP  R4,R14,R15                                     DRK MAR07
.MVSOLD3 ANOP                                                 DRK MAY05
         PRINT NOGEN
PDS380A  M$TX  'PDS380A REENTER THE SEARCH STRING WITH DELIMITERS:'
PDS382A  M$TX  'PDS382A REENTER THE FIRST TTR:'
PDS383A  M$TX  'PDS383A REENTER THE SECOND TTR:'
PDS384A  M$TX  'PDS384A REENTER THE HEX OFFSET:'
PDS385A  M$TX  'PDS385A REENTER THE SSI DATA:'
PDS386A  M$TX 'PDS386A REENTER THE REPLACEMENT STRING WITH DELIMITERS:'
         PRINT GEN
