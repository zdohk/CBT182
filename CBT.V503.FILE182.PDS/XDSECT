/* --------------------- Rexx Procedure ---------------------- */
Trace
dat.0 = 7
dat.1 = "         " || "PRINT NOGEN"
dat.2 = "         " || "COPY  #PDSGEN"
dat.3 = "         " || "PRINT GEN"
dat.4 = "C_DCBEL  " || "EQU   56"
dat.5 = "&PDSPRT  SETC  'ON'"
dat.6 = "         " || "COPY  #MDSECT"
dat.7 = "         " || "END"

Address TSO
"ALLOC DD(SYSIN) DA(ASM(XDSECT)) SHR REUSE"
"EXECIO * DISKW SYSIN (FINIS STEM dat."

"ALLOC DD(SYSLIB) DA('SYS1.MACLIB' 'SYS1.MODGEN'" ||,
" 'AD.FILE182.PDS484') SHR REUSE"
"ALLOC DD(SYSPRINT) DA('AD.DSECT.LIST(WORKAREA)') SHR REUSE"

"ALLOC DD(SYSLIN) NEW DEL SP(5 1) CYL UNIT(VIO) REUSE"
"ALLOC DD(SYSPUNCH) DUMMY REUSE"
"ALLOC DD(SYSUT1) NEW DEL SP(5 1) CYL UNIT(VIO) REUSE"
"CALL 'HLA.SASMMOD1(ASMA90)' 'ALIGN,NOOBJECT,DECK,XREF(SHORT)'"

/* Read assembler output and generate DSECT EQUATE statements */
/* for use with TSO TEST                                      */

Say "/* TSO TEST EQUATES generated on "date()" at "time()" */"
Say "/* BY XDSECT */"

"EXECIO * DISKR SYSPRINT (STEM DSECT. FINIS"
Do line = 1 to dsect.0
  If Substr(dsect.line,41,1) = "=" |,
     Substr(dsect.line,41,1) = "+"      Then Nop
  Else
     Iterate
  If Substr(dsect.line,42,1) =  " "     Then Iterate
  If Substr(dsect.line,51,5) =  "DSECT" Then
    Do
      name = Substr(dsect.line,42,8)
      Say "EQUATE "name" 7R%"
      Iterate
    End
  If Substr(dsect.line,2,1) <> " " Then
    Do
     displ = Strip(Substr(dsect.line,2,6),'L','0')
     If displ = " " Then
       displ = "0"
     symbol = Substr(dsect.line,42,8)
     Say "EQUATE "symbol name"+"displ
    End
  If Substr(dsect.line,51,3) = "EQU" &,
     Substr(dsect.line,30,5) <> " "  Then
    Do
     displ = Strip(Substr(dsect.line,24,5),'L','0')
     symbol = Substr(dsect.line,42,8)
     Say "EQUATE "symbol name"+"displ
    End
End
"ALLOC DD(SYSIN)    DA(*) REUSE"
"ALLOC DD(SYSPRINT) DA(*) REUSE"
Exit
/* Generate TSO TEST EQUATES for WORKAREA DSECT */
/* Use %TSOTRAP exec to trap output and save as CLIST member PDSEQU */
