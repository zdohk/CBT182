/* --------------------  rexx procedure  --------------------------- */
/* Name:      PDSPARSE                                               |
 |                                                                   |
 | Function:  Find PARSE workarea #vars in PDS source code.          |
 |                                                                   |
 |            ##ANSWER DS    XL132     PARSE CSECT WORKAREA          |
 |            . . .                                                  |
 |            ##THEEND EQU   ##ANSWER  END OF PARSE WORKAREA EQUATES |
 |                                                                   |
 |            Useful for PDS developers so that the same workarea    |
 |            is not used for two different variables in @source.    |
 |                                                                   |
 | Use:       Scenario below to build a PARSE PDS that contains the  |
 |            ##ANSWER parse work variables used by each @source     |
 |            member.                                                |
 |                                                                   |
 | change 'ad.file182.pds484'   <--- switch to PDS install lib       |
 | offload @: seq               <--- offload PDS @source to seq dsn  |
 | %tsotrap -e pdsparse         <--- find #vars (##answer) in seq    |
 | create $load 'ad.parse.pds'  <--- create $load from trap data     |
 | change 'ad.parse.pds'        <--- switch to parse.pds             |
 | load $load 'ad.parse.pds'    <--- load into parse.pds             |
 | delete $load                 <--- delete $load                    |
 | %doall 'ad.parse.pds' unique <--- delete duplicate lines          |
 |                                                                   |
 | Syntax:    %tsotrap -E pdsparse                                   |
 |                                                                   |
 | Author:    Janko Kalinic                                          |
 |                                                                   |
 | History:                                                          |
 |            06/01/18 - Creation                                    |
 | ----------------------------------------------------------------- |
 | Copyleft (c) All Wrongs Reserved                                  |
 * ----------------------------------------------------------------- */

label. = ''
call Parse_work_vars

Address TSO
"alloc f(offload) da(seq) shr reuse"
"execio * diskr offload (stem offl. finis"

do line = 1 to offl.0
  if left(offl.line,12) = './ ADD NAME=' then
    say left(offl.line,79)
  parse var offl.line label +9 op +6 operands +40
  if pos('#',operands) > 0 then do
    parse var operands first with ',' second with ',' third,
      with ' ' rest
    if left(first,1)  = '#' then do
      if pos('+',first) > 0 then
        parse var first first with '+' rest
      if pos('-',first) > 0 then
        parse var first first with '+' rest
      if pos('(',first) > 0 then
        parse var first first with '(' rest
      if left(first,2) = '##' then
        nop
      else
        do
          x = left(first,8)
          if label.x = '' then
            nop
          else
            say x label.x
          end
      end
    if left(second,1) = '#' then do
      if pos('+',second) > 0 then
        parse var second second with '+' rest
      if pos('-',second) > 0 then
        parse var second second with '+' rest
      if pos('(',second) > 0 then
        parse var second second with '(' rest
      if left(second,2) = '##' then
        nop
      else
        do
          x = left(second,8)
          if label.x = '' then
            nop
          else
            say x label.x
          end
      end
    if left(third,1)  = '#' then do
      if pos('+',third) > 0 then
        parse var third third with '+' rest
      if pos('-',third) > 0 then
        parse var third third with '+' rest
      if pos('(',third) > 0 then
        parse var third third with '(' rest
      if left(third,2) = '##' then
        nop
      else
        do
          x = left(third,8)
          if label.x = '' then
            nop
          else
            say x label.x
          end
      end
    end
  end

Address TSO
"free file(#mdsect offload)"
exit

Parse_work_vars:
Address TSO
"alloc f(#mdsect) da('ad.file182.pds484(#mdsect)') shr reuse"
"execio * diskr #mdsect (stem vars. finis"

do line = 1 to vars.0
  if left(vars.line,8) = "##ANSWER" then
    do until left(vars.line,8) = "##THEEND"
       if left(vars.line,1) = "*" then
         do
           line = line +1
           iterate
           end
       if substr(vars.line,10,5) = "EJECT" then
         do
           line = line +1
           iterate
           end
       if substr(vars.line,1,8) = "##ANSWER" then
         do
           line = line +1
           iterate
           end
       x = left(vars.line,8)
       label.x = substr(vars.line,10,62)
       line = line + 1
       end
  else
    iterate
  end
return
