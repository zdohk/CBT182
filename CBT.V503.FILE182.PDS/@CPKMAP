         TITLE 'P D S  --  COMPAKTOR/DISKMAP INTERFACE       07/18/07'
***********************************************************************
***      CPKMAP  SUBCOMMAND   ADDED BY JOHN KALINICH -- JUL., 2007  ***
***********************************************************************
*
CPKMAP   CSECT
         USING *,R8
         SPACE 1
*  FREE VOLUME01, SYSIN, SYSPRINT, AND SYSMAP DATASETS
         LA    R1,=CL8'VOLUME01'        VOLUME01 DDNAME
         BAS   R2,CPK8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSIN'           SYSIN DDNAME
         BAS   R2,CPK8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,CPK8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSMAP'          SYSMAP DDNAME
         BAS   R2,CPK8580               FREE THIS DATA SET
*  ALLOCATE //VOLUME01 FILE                                   DRK FEB14
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'CPKDDNDI+8,R3),CPKDDNDI       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CPKDDNDI+8(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CPKSHR,R3),CPKSHR             SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CPKSHR(,R3)                  START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CPKNORM,R3),CPKNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CPKNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CPKANORM,R3),CPKANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CPKANORM(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CPKUNIT+8,R3),CPKUNIT         SPECIFY UNIT TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'CPKUNIT+8(,R3)               START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'CPKVOLSR,R3),CPKVOLSR         SPECIFY VOLSER TEXT
         MVC   6(6,R3),#CPKVOL                   VOLUME SERIAL
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   CPKERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE //SYSIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),CPKDDNIN       SYSIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),CPKSYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   CPKERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),CPKDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),CPKSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   CPKERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE //SYSMAP DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(12),CPKDDNMP      SYSMAP DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),CPKSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   CPKERROR                   NO, BRANCH
         B     CPK6000
         SPACE 2
CPKERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    CPK8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     CPK8550
         SPACE 3
CPK6000  DS    0H
* OPEN SYSIN DATA SET
         MVC   BAMDCB(CPKDL),CPKDCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSIN'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SYSIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    CPK6010                         YES, BRANCH
         LA    R1,CPK865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     CPK8550                         EXIT
         SPACE 3
*  OUTPUT SYSIN RECORDS
CPK6010  DS    0H
         MVC   MSGTEXT1(136),MSGBL132      CLEAR THE MESSAGE AREA
         MVC   MSGTEXT1+4(L'CPKCARD),CPKCARD  CPK STATEMENT
         PUT   BAMDCB,MSGTEXT1+4           OUTPUT CPK STATEMENT
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SYSIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  CPKNULL,USADDR=(R7),REPLACE=NO,IBUF=0,                  X
               OBUF=(CPK484W,CPK484WL),MF=(E,STAXPARM)
         LA    R1,CPKPARM                 PARM=BATCH
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,CPKPGM               2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,CPK7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),CPKEFTSR       INVOKE IKJEFTSR?
         BNE   CPKNLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
CPKNLNK  BAS   R2,ATTACH                  FDRCPK/DISKMAP
         SPACE 3
CPK7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE    DRK JAN07
         C     R2,=F'40'                  PROGRAM NOT FOUND?  DRK JAN07
         BNE   CPK8000                    NO                  DRK JAN07
         MVC   INSERT#1(8),CPKPGM         YES, ERROR          DRK JAN07
         M$MSG L859$1                     NOT FOUND MESSAGE   DRK JAN07
         B     CPK8550                                        DRK JAN07
         SPACE 1
CPK8000  MVC   BAMDCB(CPKDL),CPKDCB         GET MODEL DCB
         AIF   ('&MAPPGM' EQ 'DISKMAP').DSKMAP1               DRK FEB14
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSMAP'   CPK
         AGO   .SKIPDM1                                       DRK FEB14
.DSKMAP1 ANOP
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSPRINT' DISKMAP
.SKIPDM1 ANOP
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSMAP/SYSPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    CPK8010                      YES, BRANCH
         LA    R1,CPK865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     CPK8550                      EXIT
         SPACE 3
*  PROCESS SYSMAP/SYSPRINT RECORDS
CPK8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         AIF   ('&MAPPGM' EQ 'DISKMAP').DSKMAP2               DRK FEB14
         MVC   MSGTEXT1+4(120),1(R1)      ADD THE CPK MESSAGE
         AGO   .SKIPDM2                                       DRK FEB14
.DSKMAP2 ANOP
         CLI   1(R1),X'19'                CC CHAR IN COL 2?   DRK MAR14
         BE    *+4+6                      YES, SKIP RECORD    DRK MAR14
         MVC   MSGTEXT1+4(132),1(R1)      ADD THE DISKMAP MESSAGE
.SKIPDM2 ANOP
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     CPK8010
         SPACE 3
CPK8500  DS    0H
         CLC   ##SUBCAL(8),CPKEFTSR       INVOKE IKJEFTSR?
         BNE   CPK8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1                DRK JUL11
         BL    CPK8540                    YES, VALID CPK
         MVI   MTLEN+4,11
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA          DRK JAN06
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11                     DRK JAN07
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   CPK8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE            DRK NOV07
         SRDL  R0,12                    SHIFT USER ABEND TO R1DRK NOV07
         ST    R0,FULLWORD              SYSTEM ABEND CODE     DRK NOV07
         MVC   INSERT#2+4(7),=C' ABEND='                      DRK NOV07
         UNPK  INSERT#2+11(5),FULLWORD+2(3)                   DRK NOV07
         TR    INSERT#2+11(4),TRTABLE                         DRK NOV07
         MVI   INSERT#2+11,C'S'         S000                  DRK NOV07
         MVI   INSERT#2+11+4,X'40'                            DRK NOV07
         SPACE 1                                              DRK NOV07
         SRL   R1,20                    USER ABEND            DRK NOV07
         CVD   R1,DOUBLE                                      DRK NOV07
         UNPK  DOUBLE(5),DOUBLE+5(3)                          DRK NOV07
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE        DRK NOV07
         MVI   INSERT#2+11+5,C'U'       U0000                 DRK NOV07
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND       DRK NOV07
         SPACE 1
CPK8530  DS    0H
         M$MSG L171$2
CPK8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SYSPRINT FILE.
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
CPK8550  M$ERRST MSGBLANK
         LA    R1,=CL8'SYSPRINT'          SYSPRINT DDNAME
         BAS   R2,CPK8580                 FREE THIS DATA SET
         LA    R1,=CL8'SYSIN'             SYSIN DDNAME
         BAS   R2,CPK8580                 FREE THIS DATA SET
         LA    R1,=CL8'SYSMAP'            SYSMAP DDNAME
         BAS   R2,CPK8580                 FREE THIS DATA SET
         LA    R1,=CL8'VOLUME01'          VOLUME01 DDNAME
         BAS   R2,CPK8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
CPK8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),CPKFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,CPKUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
CPKNULL  BR    R14
         SPACE 2
*  CPK CONSTANTS
         PRINT NOGEN
CPKDCB   DCB   DSORG=PS,DDNAME=CPK,MACRF=(GL,PM),EODAD=CPK8500
CPKDL    EQU   *-CPKDCB
         PRINT NOGEN
CPK484W  DC    C'PDS484W DISKMAP SHOULD NOT BE INTERRUPTED'
CPK484WL EQU   *-CPK484W
CPK865E  M$TX  'PDS865E THE DISKMAP OUTPUT CAN NOT BE OPENED'
         PRINT GEN
CPKEFTSR DC    CL8'IKJEFTSR'
         AIF   ('&MAPPGM' EQ 'DISKMAP').DSKMAP3               DRK FEB14
CPKPGM   DC    CL8'FDRCPK'                       PGM=FDRCPK
CPKPARM  DC    H'00',CL100' '                    PARM=
         AGO   .SKIPDM3                                       DRK FEB14
.DSKMAP3 ANOP
CPKPGM   DC    CL8'DISKMAP'                      PGM=DISKMAP  CBT 792
CPKPARM  DC    AL2(CPKPARML-2)                   PARM LENGTH
         DC    C'MAPONLY,VOLS=1'                 PARM VALUE
CPKPARML EQU   *-CPKPARM
.SKIPDM3 ANOP
         SPACE 1
CPKCARD  DC    C'MAP HILIGHT=NO,FROMDD=VOLUME01' FDRCPK INPUT
CPKDDNDI DC    X'000100010008',C'VOLUME01'       VOLUME01 DDNAME
CPKDDNIN DC    X'000100010005',C'SYSIN'          SYSIN    DDNAME
CPKDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
CPKDDNMP DC    X'000100010006',C'SYSMAP'         SYSMAP   DDNAME
CPKFDDNA DC    X'000100010008'                   FOR FREE DDNAME
CPKSHR   DC    X'00040001000108'                 DISP=(SHR)
CPKNEW   DC    X'00040001000104'                 DISP=(NEW)
CPKDEL   DC    X'00050001000104'                 DISP=(,DELETE)
CPKCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
CPKNORM  DC    X'00050001000108'                 DISP=(,KEEP)
CPKANORM DC    X'00060001000108'                 DISP=(,,KEEP)
         SPACE 1
CPKUNIT  DC    X'001500010008',CL8'&PUNIT'       UNIT=SYSALLDA
CPKVOLSR DC    X'001000010006404040404040'       VOL=SER=
         SPACE 1
CPKPERM  DC    X'00520000'                       PERMANENT ALLOCATION
CPKUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
CPKPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
CPKPRTSE DC    X'000B00010003',AL3(050)          SPACE=(,(,NNN))
CPKPRTIN DC    X'000900010003',AL3(13300)        SPACE=(13300)
CPKSINSP DC    X'000900010003',AL3(3120)         SPACE=(3120)
         SPACE 1
CPKPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
CPKPRTLR DC    X'004200010002',AL2(133)          DCB=LRECL=133
CPKPRTBL DC    X'003000010002',AL2(13300)        DCB=BLKSIZE=13300
         SPACE 2
CPKPRTR2 DC    X'004900010001',XL1'92'           DCB=RECFM=FBM
CPKPRTL2 DC    X'004200010002',AL2(133)          DCB=LRECL=133
CPKPRTB2 DC    X'003000010002',AL2(133)          DCB=BLKSIZE=133
         SPACE 2
CPKSINRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
CPKSINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
CPKSINBL DC    X'003000010002',AL2(3120)         DCB=BLKSIZE=3120
         SPACE 2
CPKSYSIN DC    A(CPKPRTFI,CPKPRTSE,CPKSINSP)
         DC    A(CPKSINRE,CPKSINLR,CPKSINBL)
         DC    A(CPKNEW,CPKDEL,CPKCDEL),X'80',AL3(CPKPERM)
CPKSYSPR DC    A(CPKPRTFI,CPKPRTSE,CPKPRTIN)
         DC    A(CPKPRTR2,CPKPRTL2,CPKPRTB2)
         DC    A(CPKNEW,CPKDEL,CPKCDEL),X'80',AL3(CPKPERM)
         SPACE 2
