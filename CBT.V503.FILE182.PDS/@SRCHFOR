         TITLE 'P D S  --  ISRSUPC SEARCH-FOR INTERFACE       4/18/06'
***********************************************************************
***      SRCHFOR SUBCOMMAND   ADDED BY JOHN KALINICH -- APR., 2006  ***
***********************************************************************
*
SRCHFOR  CSECT
         USING *,R8
         SPACE 1
*  FREE SYSIN, NEWDD, AND OUTDD DATASETS
         LA    R1,=CL8'SYSIN'           SYSIN DDNAME
         BAS   R2,SRC8580               FREE THIS DATA SET
         LA    R1,NEWDD                 NEWDD DDNAME
         BAS   R2,SRC8580               FREE THIS DATA SET
         LA    R1,OUTDD                 OUTDD DDNAME
         BAS   R2,SRC8580               FREE THIS DATA SET
*  ALLOCATE SRCHFOR //NEWDD DATA SET    INPUT PDS
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'SRCDDNNW+5,R3),SRCDDNNW       SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SRCDDNNW+5(,R3)              START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SRCDSNAM,R3),SRCDSNAM         SPECIFY DSNAME TEXT
         MVC   6(44,R3),DSNAME                   MOVE IN DSNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SRCDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SRCALLOC,R3),SRCALLOC         SPECIFY DISP TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SRCALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SRCNORM,R3),SRCNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'SRCNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'SRCANORM,R3),SRCANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   SRCERROR                      NO, BRANCH
         SPACE 2
*  ALLOCATE SRCHFOR //SYSIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),SRCDDNIN      SYSIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),SRCSYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   SRCERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE SRCHFOR //OUTDD DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),SRCDDNPR      OUTDD DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),SRCSYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   SRCERROR                   NO, BRANCH
         B     SRC2100
         SPACE 2
SRCERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    SRC8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     SRC8550
         SPACE 3
SRC2100  MVC   MEMNAME(12),DIRNAME   ENSURE MEMBER NAME IS PRESENT
         MVC   #DELSAVE(1),FLAGSAA   SAVE FLAGSAA
         TM    FLAGSAA,FMEM#MEM      MEMBER GROUP?
         BO    SRC2200               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    SRC2110               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    SRC2200               YES, BRANCH
SRC2110  TM    #SRCALI,#SRCASS2      ASSOCIATES TOO?
         BO    SRC2200               YES, BRANCH
         SPACE 1
SRC2120  DS    0H
         TM    #SRCALI,#SRCASS2+2    ALIAS/NOALIAS SPECIFIED?
         BM    SRC2130               YES
*        OI    #SRCALI,&SRCALI       USE THE DEFAULT
         OI    #SRCALI,1             USE THE DEFAULT          DRK APR06
         TM    #SRCALI,#SRCASS2      ASSOCIATES TOO?
         BO    SRC2200               YES
         SPACE 3
SRC2130  DS    0H
         OI    #SRCALI,#SRCONE       ONLY A SINGLE MEMBER/DATA SET
         LA    R4,DDNAMEH            HOLD FOR THIS SUBCOMMAND
         MVC   0(8,R4),DIRNAME
         ST    R4,#MEMPTR
         LA    R4,16(,R4)            POSITION FOR ONE ENTRY
         B     SRC2900
SRC2200  OI    FLAGSII,FDIRGRP       SIMULATE MEMBER GROUP INPUT
         TM    #SRCALI,#SRCASS2+2    ALIAS/NOALIAS SPECIFIED?
         BM    *+8                   YES
*        OI    #SRCALI,&SRCALI       NO, USE THE DEFAULT
         OI    #SRCALI,1             NO, USE THE DEFAULT      DRK APR06
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUPS NOW
         MVI   SUBPOOLT,21           SUBPOOL 21 DATA
         LA    R5,256/2              256 MEMBERS INITIALLY
         SPACE 1
SRC2210  SLL   R5,1                  MEMBERS*2 FOR EACH LOOP
         LR    R3,R5
         LR    R0,R5
         SLL   R0,4                  TABLE SIZE=MEMBERS*16
         ICM   R0,B'1000',SUBPOOLT
         GETMAIN R,LV=(0)
         LR    R4,R1                 NEW TABLE ADDRESS
         ICM   R0,B'1111',#MEMPTR    ANY PREVIOUS MEMBERS?
         BNZ   SRC2220               YES, BRANCH
         ST    R4,#MEMPTR            INITIALIZE MEMBER BASE
         B     SRC2500
         SPACE 1
SRC2220  SRL   R3,1                  SECOND HALF OF TABLE (# MEMBERS)
         LR    R14,R4                NEW TABLE START ADDRESS
         LR    R15,R5
         SLL   R15,3                 OLD TABLE SIZE=MEMBERS*8
         LR    R2,R15                START OF NEW PART
         LR    R1,R15
         MVCL  R14,R0                PRESERVE THE OLD TABLE
         L     R1,#MEMPTR
         LR    R0,R2                 LENGTH TO FREE
         ICM   R0,B'1000',SUBPOOLT   SUBPOOL TO FREE
         FREEMAIN R,LV=(0),A=(1)
         ST    R4,#MEMPTR            START OF NEW TABLE
         AR    R4,R2                 WHERE TO ADD MEMBERS
         SPACE 3
SRC2300  TM    #SRCALI,#SRCASSP      ASSOCIATES PHASE?
         BO    SRC2320               YES, BRANCH
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    SRC2320               YES, BRANCH
         TM    #DELSAVE,FF-FMEM#MEM  MEMBER ALREADY ADDED?
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         BNO   SRC2500               NO, BRANCH
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    SRC2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BNO   SRC2605               NO, BRANCH
         L     R1,PMEMCURR           CURRENT LIST ELEMENT
         TM    0(R1),X'80'           ANOTHER ELEMENT?
         BNO   SRC2605               NO, END OF LIST
         MVC   FLAGSAA(1),4(R1)      NEXT DESCRIPTOR FLAGS
         MVC   LMEMBER1+1(19),5(R1)  LEN1, MEMBER1, LEN2, MEMBER2
         L     R1,0(,R1)             NEXT ELEMENT POINTER
         ST    R1,PMEMCURR
         MVC   #DELSAVE(1),FLAGSAA   SAVE THE MEMBER DESCRIPTOR
         MVC   MEMNAME(8),MEMBER1    FIRST MEMBER NAME
         NI    FLAGSAA,FF-FMEM#MEM   TURN OFF MEMBER GROUP
         TM    #DELSAVE,FMEM#MEM     MEMBER GROUP?
         BO    SRC2319               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  MARK MEMBER AS ADDED
         MVC   DIRNAME,MEMBER1       MOVE TO BLDLLIST
         SPACE 2
         BLDL  INDCB,BLDLLIST          LOCATE DIRECTORY ENTRY
         B     *+4(R15)                PROCESS RETURN CODE
         B     SRC2315                   00 - SUCCESSFUL
         B     SRC2310                   04 - MEMBER NOT FOUND
         B     IOERROR                   08 - I/O ERROR
         SPACE 1
SRC2310  MVC   INSERT#1(8),DIRNAME
         M$MSG L853$1                MSG - (MEMBER) NOT FOUND
         B     SRC2300
         SPACE 1
SRC2315  MVC   MEMNAME(12),DIRNAME   FIRST MEMBER NAME
         B     SRC2500
         SPACE 1
SRC2319  MVI   STARTTR+2,X'01'       REREAD THE DIRECTORY
         SPACE 1
SRC2320  BAS   R14,READDIR           GET NEXT DIRECTORY BLOCK
         B     SRC2600               END OF MEMBERS -- BRANCH
         SPACE 1
         TM    #SRCALI,#SRCASSP      ASSOCIATES PHASE?
         BO    SRC2400               YES, BRANCH
         SPACE 1
         BAS   R2,MFILTER            CHECK MEMBER NAMES
         B     SRC2600                 00 - SIMULATE DIRECTORY END
         B     SRC2300                 04 - MEMBER FAILED FILTERING
         B     SRC2500                 08 - MEMBER PASSED FILTERING
         SPACE 3
SRC2400  L     R1,#MEMPTR            START OF MEMBER LIST
         B     SRC2410+4             SKIP FIRST ADD
SRC2410  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   SRC2300               YES, IGNORE THIS ENTRY
         CLC   8(3,R1),MEMTTR        MATCHING TTR?
         BNE   SRC2410               NO, BRANCH
         SPACE 3
SRC2500  L     R1,#MEMPTR            START OF MEMBER LIST
         B     SRC2510+4             SKIP FIRST ADD
SRC2510  LA    R1,16(,R1)            NEXT TABLE ENTRY
         CR    R1,R4                 END OF TABLE?
         BNL   SRC2580               YES, ADD THIS ENTRY
         CLC   0(8,R1),MEMNAME       FIND MYSELF?
         BE    SRC2300               YES, IGNORE THIS ENTRY
         B     SRC2510               NO, CONTINUE SEARCHING
         SPACE 2
SRC2580  MVC   0(16,R4),MEMNAME      ADD TO THE TABLE
         LA    R4,16(,R4)            NEXT MEMBER POSITION
         S     R3,=F'1'              ANY MORE FIT?
         BNP   SRC2210               NO, BRANCH
         B     SRC2300               YES, GET NEXT MEMBER
         SPACE 3
SRC2600  TM    #SRCALI,#SRCASSP      ASSOCIATED MEMBERS?
         BO    SRC2605               YES, BRANCH
         MVI   #DELSAVE,FF-FMEM#MEM  ELEMENT HAS NOW BEEN ADDED
         TM    SPFLAG2,SPFLNCD       LINE COMMAND?
         BO    SRC2605               YES, BRANCH
         TM    PMEMMIN,X'80'         MEMBER LIST?
         BO    SRC2300               YES, BRANCH
         SPACE 1
SRC2605  TM    #SRCALI,#SRCASSP      ASSOCIATES PHASE STARTED?
         BO    SRC2700               YES, BRANCH
         TM    #SRCALI,#SRCASS2      ASSOCIATE MEMBERS TOO?
         BNO   SRC2700               NO, BRANCH
         OI    #SRCALI,#SRCASSP      YES, ASSOCIATES PHASE STARTED
         NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
         MVI   STARTTR+2,X'01'       TTR=000001 (START OF DIRECTORY)
         B     SRC2300               DO ANY ASSOCIATED MEMBERS
         SPACE 3
SRC2700  NI    FLAGSII,FF-FDIRGRP    NORMAL INPUT NOW
         SPACE 3
SRC2900  DS    0H
         ST    R4,#MEMLAST           SAVE LAST MEMBER POINTER
*  OPEN SYSIN DATA SET
         MVC   BAMDCB(SRCDL),SRCDCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),=CL8'SYSIN'
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SYSIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    SRC2910                         YES, BRANCH
         LA    R1,SRC865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     SRC8550                         EXIT
         SPACE 3
SRC2910  DS    0H
         MVC   MSGTEXT1(136),MSGBL132   CLEAR THE MESSAGE AREA
         LA    R5,MSGTEXT1+4
         MVC   0(8,R5),SRCCMD           SRCHFOR COMMAND
         LA    R5,8(R5)
         CLI   #SRCHEX,1                HEX STRING?
         BNE   SRC3000                  NO
         MVI   0(R5),C'X'               YES
         LA    R5,1(R5)
SRC3000  DS    0H
         MVI   0(R5),C''''              STARTING QUOTE
         LA    R5,1(R5)
         LH    R15,#SRCSTRL             SEARCH STRING LENGTH
         BCTR  R15,0
         MVC   0(*-*,R5),#SRCSTR        <<EXECUTED>>
         EX    R15,*-6                  MOVE SEARCH STRING
         LA    R5,1(R15,R5)
         MVI   0(R5),C''''              ENDING QUOTE
         LA    R5,1(R5)
         SPACE 1
         CLI   #SRCTYP,1                PREFIX?
         BE    SRC3010                  YES
         CLI   #SRCTYP,2                SUFFIX?
         BE    SRC3020                  YES
         CLI   #SRCTYP,3                WORD?
         BE    SRC3030                  YES
         B     SRC3050                  NO
SRC3010  DS    0H
         MVC   0(2,R5),=CL2',P'
         B     SRC3040
SRC3020  DS    0H
         MVC   0(2,R5),=CL2',S'
         B     SRC3040
SRC3030  DS    0H
         MVC   0(2,R5),=CL2',W'
SRC3040  DS    0H
         LA    R5,2(R5)
SRC3050  DS    0H
         CLI   #SRCCOL,C' '             RANGE SPECIFIED?
         BE    SRC3060                  NO, BRANCH
         LH    R15,#SRCCOLL             SEARCH RANGE LENGTH
         MVI   0(R5),C','
         LA    R5,1(R5)
         BCTR  R15,0
         MVC   0(*-*,R5),#SRCCOL        <<EXECUTED>>
         EX    R15,*-6                  MOVE SEARCH STRING
SRC3060  DS    0H
         PUT   BAMDCB,MSGTEXT1+4        OUTPUT SRCHFOR STATEMENT
         SPACE 1
SRC3070  DS    0H
         TM    FLAGSHH,FMEMALLM         ALL MEMBERS?
         BNO   SRC4000                  NO
         B     SRC4540                  YES
SRC4000  DS    0H
         CLI   #SRCLST,2                  NOSLIST?
         BNE   SRC4010                    NO
         MVC   MSGTEXT1(136),MSGBL132     YES
         MVC   MSGTEXT1+4(9),SLISTOFF
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT SLIST STATEMENT
SRC4010  DS    0H
         L     R3,#MEMPTR                 FIRST MEMBER POINTER
         L     R4,#MEMLAST                LAST MEMBER POINTER
         MVC   MSGTEXT1(136),MSGBL132     CLEAR THE MESSAGE AREA
         SPACE 1
SRC4530  CR    R3,R4                      END OF MEMBER TABLE?
         BNL   SRC4540                    YES
         LA    R5,MSGTEXT1+4
         MVC   0(7,R5),=CL7'SELECT '      SELECT STATEMENT
         LA    R5,7(R5)
         MVC   0(8,R5),0(R3)              MEMBER NAME
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT SELECT STATEMENT
         LA    R3,16(,R3)                 NEXT MEMBER POSITION
         B     SRC4530
         SPACE 1
SRC4540  DS    0H
         CLI   #SRCLPF,0                  LPSF(NUM)           DRK DEC21
         BE    SRC4545                    NO                  DRK DEC21
         MVC   MSGTEXT1(136),MSGBL132     YES                 DRK DEC21
         MVC   MSGTEXT1+4(5),=CL8'LPSFV'  LPSFV STATEMENT     DRK DEC21
         SR    R15,R15                    ZERO                DRK DEC21
         ICM   R15,B'0001',#SRCLPF        NUMBER OF LINES     DRK DEC21
         CVD   R15,DOUBLE                 PACK                DRK DEC21
         MVC   MSGTEXT1+9(4),=X'40202120' PATTERN             DRK DEC21
         ED    MSGTEXT1+9(4),DOUBLE+6     PREV/NEXT NUMBER    DRK DEC21
         PUT   BAMDCB,MSGTEXT1+4          OUTPUT LPSFV STATEMENT
         SPACE 1
SRC4545  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SYSIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  SRCHNULL,USADDR=(R7),REPLACE=NO,IBUF=0,                 X
               OBUF=(SRC484W,SRC484WL),MF=(E,STAXPARM)
*        LA    R1,SRCPARM                 PARM=SRCHCMP        DRK OCT08
         SPACE 1
         MVC   MSGTEXT2(132),MSGBL132     BLANK LINE          DRK OCT08
         LA    R5,MSGTEXT2                                    DRK OCT08
         LH    R15,SRCPARM                LENGTH OF PARM      DRK OCT08
         LA    R15,1(,R15)                +1 FOR MOVE         DRK OCT08
         MVC   0(*-*,R5),SRCPARM          <<EXECUTED>>        DRK OCT08
         EX    R15,*-6                    MOVE LENGTH + PARM  DRK OCT08
         LA    R5,1(R15,R5)               SKIP BY LEN + PARM  DRK OCT08
         CLI   #SRCPAK,1                  CKPACKL?            DRK OCT08
         BNE   SRC4550                    NO                  DRK OCT08
         MVC   0(8,R5),=CL8',CKPACKL'     YES                 DRK OCT08
         LA    R5,8(,R5)                  SKIP BY CKPACKL     DRK OCT08
         LA    R15,8(,R15)                INCREASE PARM LEN   DRK OCT08
SRC4550  DS    0H                                             DRK OCT08
         CLI   #SRCCOB,1                  COBOL?              DRK OCT08
         BNE   SRC4560                    NO                  DRK OCT08
         MVC   0(6,R5),=CL6',COBOL'       YES                 DRK OCT08
         LA    R5,6(,R5)                  SKIP BY COBOL       DRK OCT08
         LA    R15,6(,R15)                INCREASE PARM LEN   DRK OCT08
SRC4560  DS    0H                                             DRK OCT08
         CLI   #SRCSEQ,1                  SEQ?                DRK OCT08
         BNE   SRC4570                    NO                  DRK OCT08
         MVC   0(4,R5),=CL4',SEQ'         YES                 DRK OCT08
         LA    R5,4(,R5)                  SKIP BY SEQ         DRK OCT08
         LA    R15,4(,R15)                INCREASE PARM LEN   DRK OCT08
SRC4570  DS    0H                                             DRK OCT08
         CLI   #SRCLPF,0                  LPSF(NUM)?          DRK DEC21
         BE    SRC4580                    NO                  DRK DEC21
         MVC   0(5,R5),=CL5',LPSF'        YES                 DRK OCT08
         LA    R5,5(,R5)                  SKIP BY SEQ         DRK OCT08
         LA    R15,5(,R15)                INCREASE PARM LEN   DRK OCT08
SRC4580  DS    0H                                             DRK OCT08
         BCTR  R15,0                      ACTUAL PARM LEN     DRK OCT08
         STH   R15,MSGTEXT2               STORE NEW PARM LEN  DRK OCT08
         LA    R1,MSGTEXT2                PT TO DYNAMIC PARM  DRK OCT08
         SPACE 1
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,SRCPGM               2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,SRC7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),SRCEFTSR       INVOKE IKJEFTSR?
         BNE   SRCNLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
SRCNLNK  BAS   R2,ATTACH                  ISRSUPC
         SPACE 3
SRC7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE    DRK JAN07
         C     R2,=F'40'                  PROGRAM NOT FOUND?  DRK JAN07
         BNE   SRC8000                    NO                  DRK JAN07
         MVC   INSERT#1(8),SRCPGM         YES, ERROR          DRK JAN07
         M$MSG L859$1                     NOT FOUND MESSAGE   DRK JAN07
         B     SRC8550                                        DRK JAN07
         SPACE 1
SRC8000  MVC   BAMDCB(SRCDL),SRCDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),OUTDD
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN OUTDD
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    SRC8010                      YES, BRANCH
         LA    R1,SRC865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     SRC8550                      EXIT
         SPACE 3
*  PROCESS OUTDD RECORDS
SRC8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(202),1(R1)      ADD THE SRCHFOR MESSAGE
         MVI   MSGTEXT1+1,202+4           MAXIMUM LONGLN LENGTH
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     SRC8010
         SPACE 3
SRC8500  DS    0H
         CLC   ##SUBCAL(8),SRCEFTSR       INVOKE IKJEFTSR?
         BNE   SRC8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1                DRK JAN07
         BL    SRC8540                    YES, VALID SRCHFOR
         MVI   MTLEN+4,11
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11                     DRK JAN07
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   SRC8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE            DRK NOV07
         SRDL  R0,12                    SHIFT USER ABEND TO R1DRK NOV07
         ST    R0,FULLWORD              SYSTEM ABEND CODE     DRK NOV07
         MVC   INSERT#2+4(7),=C' ABEND='                      DRK NOV07
         UNPK  INSERT#2+11(5),FULLWORD+2(3)                   DRK NOV07
         TR    INSERT#2+11(4),TRTABLE                         DRK NOV07
         MVI   INSERT#2+11,C'S'         S000                  DRK NOV07
         MVI   INSERT#2+11+4,X'40'                            DRK NOV07
         SPACE 1                                              DRK NOV07
         SRL   R1,20                    USER ABEND            DRK NOV07
         CVD   R1,DOUBLE                                      DRK NOV07
         UNPK  DOUBLE(5),DOUBLE+5(3)                          DRK NOV07
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE        DRK NOV07
         MVI   INSERT#2+11+5,C'U'       U0000                 DRK NOV07
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND       DRK NOV07
         SPACE 1
SRC8530  DS    0H
         M$MSG L171$2
SRC8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE OUTDD FILE
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
SRC8550  M$ERRST MSGBLANK
         LA    R1,OUTDD                   OUTDD DDNAME
         BAS   R2,SRC8580                 FREE THIS DATA SET
         LA    R1,NEWDD                   NEWDD DDNAME
         BAS   R2,SRC8580                 FREE THIS DATA SET
         LA    R1,=CL8'SYSIN'             SYSIN DDNAME
         BAS   R2,SRC8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
SRC8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),SRCFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,SRCUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
SRCHNULL BR    R14
         SPACE 2
*  ISRSUPC CONSTANTS
         PRINT NOGEN
SRCDCB   DCB   DSORG=PS,DDNAME=SRC,MACRF=(GL,PM),EODAD=SRC8500
SRCDL    EQU   *-SRCDCB
         PRINT NOGEN
SRC484W  DC    C'PDS484W SRCHFOR SHOULD NOT BE INTERRUPTED'
SRC484WL EQU   *-SRC484W
SRC865E  M$TX  'PDS865E THE SRCHFOR OUTPUT CAN NOT BE OPENED'
         PRINT GEN
SRCEFTSR DC    CL8'IKJEFTSR'
SRCPGM   DC    CL8'ISRSUPC'                      SUPER-C
NEWDD    DC    CL8'NEWDD'
OUTDD    DC    CL8'OUTDD'
SRCCMD   DC    CL8'SRCHFOR'
SLISTOFF DC    CL9'SLIST OFF'
SRCPARM  DC    AL2(SRCPARML-2)                   PARM LENGTH
         DC    C'SRCHCMP,LONGLN'                 PARM VALUE
         DC    C',&SRCHOPT'                      + GLOBAL VALUE
SRCPARML EQU   *-SRCPARM
SRCDDNIN DC    X'000100010005',C'SYSIN'          SYSIN    DDNAME
SRCDDNPR DC    X'000100010005',C'OUTDD'          OUTDD    DDNAME
SRCDDNNW DC    X'000100010005',C'NEWDD'          NEWDD    DDNAME
SRCDSNAM DC    X'00020001002C'                   DSNAME
SRCALLOC DC    X'00040001000108'                 DISP=SHR
SRCNORM  DC    X'00050001000108'                 DISP=(,KEEP)
SRCANORM DC    X'00060001000108'                 DISP=(,,KEEP)
SRCDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
SRCFDDNA DC    X'000100010008'                   FOR FREE DDNAME
SRCNEW   DC    X'00040001000104'                 DISP=(NEW)
SRCDEL   DC    X'00050001000104'                 DISP=(,DELETE)
SRCCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
SRCPERM  DC    X'00520000'                       PERMANENT ALLOCATION
SRCUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
SRCPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
SRCPRTSE DC    X'000B00010003',AL3(100)          SPACE=(,(,NNN))
SRCPRTIN DC    X'000900010003',AL3(27811)        SPACE=(27811)
SRCSINSP DC    X'000900010003',AL3(3120)         SPACE=(3120)
         SPACE 1
SRCPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
SRCPRTLR DC    X'004200010002',AL2(203)          DCB=LRECL=203
SRCPRTBL DC    X'003000010002',AL2(27811)        DCB=BLKSIZE=27811
         SPACE 2
SRCSINRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
SRCSINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
SRCSINBL DC    X'003000010002',AL2(3120)         DCB=BLKSIZE=3120
         SPACE 2
SRCSYSIN DC    A(SRCPRTFI,SRCPRTSE,SRCSINSP)
         DC    A(SRCSINRE,SRCSINLR,SRCSINBL)
         DC    A(SRCNEW,SRCDEL,SRCCDEL),X'80',AL3(SRCPERM)
SRCSYSPR DC    A(SRCPRTFI,SRCPRTSE,SRCPRTIN)
         DC    A(SRCPRTRE,SRCPRTLR,SRCPRTBL)
         DC    A(SRCNEW,SRCDEL,SRCCDEL),X'80',AL3(SRCPERM)
         SPACE 2
#SRCASSP EQU   X'80'            SRCH: ASSOCIATES PHASE
#SRCONE  EQU   X'10'            SRCH: A SINGLE MEMBER
#SRCASS2 EQU   X'01'            SRCH: SRCH ASSOCIATES TOO
         SPACE 2
