         TITLE 'P D S  --  MXI BATCH INTERFACE               11/23/05'
***********************************************************************
***      MXIBAT  SUBCOMMAND   ADDED BY JOHN KALINICH -- NOV., 2005  ***
***********************************************************************
*
MXIBAT   CSECT
         USING *,R8
         SPACE 1
*  FREE SYSIN AND SYSPRINT DATASETS
         LA    R1,=CL8'SYSIN'           SYSIN DDNAME
         BAS   R2,MXI8580               FREE THIS DATA SET
         LA    R1,=CL8'SYSPRINT'        SYSPRINT DDNAME
         BAS   R2,MXI8580               FREE THIS DATA SET
*  ALLOCATE MXI //SYSIN FILE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(11),MXIDDNIN       SYSIN DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),MXISYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         MVC   #CMXDDIN(8),=CL8'SYSIN'    MOVE IN THE DDNAME
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   MXIERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE MXI //SYSPRINT DATA SET
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),MXIDDNPR      SYSPRINT DDNAME
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(40),MXISYSPR    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDPR(8),=CL8'SYSPRINT' MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   MXIERROR                   NO, BRANCH
         B     MXI6000
         SPACE 2
MXIERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    MXI8550                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTLEN,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         B     MXI8550
         SPACE 3
MXI6000  DS    0H
* OPEN SYSIN DATA SET
         MVC   BAMDCB(MXIDL),MXIDCB           GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),#CMXDDIN
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB,OUTPUT),MF=(E,OPENLIST) OPEN SYSIN
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10'    SUCCESSFUL OPEN?
         BO    MXI6010                         YES, BRANCH
         LA    R1,MXI865E                      NO STATUS AVAILABLE
         M$ERRST (R1)                          OUTPUT THE MESSAGE
         B     MXI8550                         EXIT
         SPACE 3
*  OUTPUT SYSIN RECORDS
MXI6010  DS    0H
         MVC   MSGTEXT1(136),MSGBL132      CLEAR THE MESSAGE AREA
         L     R2,ADDRCBUF                 COMMAND STRING
         LH    R1,0(R2)                    TOTAL LENGTH
         LH    R3,2(R2)                    LENGTH OF COMMAND VERB
         SR    R1,R3                       MINUS COMMAND VERB
         S     R1,=F'4'                    MINUS LENGTH HALFWORDS
         BZ    MXI6015                     NO OPERAND         DRK JUN09
         BCTR  R1,0                        MACHINE LENGTH
         LA    R2,4(R2)                    SKIP LENGTH HALFWORDS
         AR    R2,R3                       PT AT MXI STATEMENT
         MVC   MSGTEXT1+4(*-*),0(R2)       MXI STATEMENT
         EX    R1,*-6
         SPACE 1
MXI6015  DS    0H                                             DRK JUN09
         CLC   ##SUBCOM(4),=CL4'SVC'       SVC SUBCOMMAND?    DRK JUN09
         BNE   MXI6020                     NO                 DRK JUN09
         MVC   MSGTEXT1(4),=CL4'SVC'       YES                DRK JUN09
         PUT   BAMDCB,MSGTEXT1             OUTPUT MXI STATEMENT       "
         B     MXI6030                                        DRK JUN09
MXI6020  DS    0H                                             DRK JUN09
         PUT   BAMDCB,MSGTEXT1+4           OUTPUT MXI STATEMENT
MXI6030  DS    0H                                             DRK JUN09
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE SYSIN
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         STAX  MXINULL,USADDR=(R7),REPLACE=NO,IBUF=0,                  X
               OBUF=(MXI484W,MXI484WL),MF=(E,STAXPARM)
         LA    R1,MXIPARM                 PARM=BATCH
         ST    R1,#CMXLIST
         OI    #CMXLIST,X'80'             MARK END OF LIST
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28          1 POINT TO FLAGS
         LA    R15,MXIPGM               2 POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4         3 POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8         4 POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12        5 POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16        6 POINT TO ABEND CODE
         LA    R4,#CMXLIST              7 POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 2
         L     R2,RECOVER
         LA    R1,MXI7080                 RECOVERY ADDRESS
         ST    R1,RECOVER
         STM   R2,R8,#SUBHOLD+88          SAVE REGISTERS
         SPACE 1
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),MXIEFTSR       INVOKE IKJEFTSR?
         BNE   MXINLNK                    NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
MXINLNK  BAS   R2,ATTACH                  MXI
         SPACE 3
MXI7080  LM    R2,R8,#SUBHOLD+88
         ST    R2,RECOVER                 RESET RECOVERY ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         SPACE 1
         L     R2,#SUBHOLD+28+12          LOAD REASON CODE    DRK JAN07
         C     R2,=F'40'                  PROGRAM NOT FOUND?  DRK JAN07
         BNE   MXI8000                    NO                  DRK JAN07
         MVC   INSERT#1(8),MXIPGM         YES, ERROR          DRK JAN07
         M$MSG L859$1                     NOT FOUND MESSAGE   DRK JAN07
         B     MXI8550                                        DRK JAN07
         SPACE 1
MXI8000  MVC   BAMDCB(MXIDL),MXIDCB         GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+BAMDCB(8),#CMXDDPR
         MVI   OPENLIST,X'80'
         OPEN  (BAMDCB),MF=(E,OPENLIST)     OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+BAMDCB,X'10' SUCCESSFUL OPEN?
         BO    MXI8010                      YES, BRANCH
         LA    R1,MXI865E                   NO STATUS AVAILABLE
         M$ERRST (R1)                       OUTPUT THE MESSAGE
         B     MXI8550                      EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
MXI8010  GET   BAMDCB                     GET LIST RECORD
         MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
         MVC   MSGTEXT1+4(132),1(R1)      ADD THE MXI MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     MXI8010
         SPACE 3
MXI8500  DS    0H
         CLC   ##SUBCAL(8),MXIEFTSR       INVOKE IKJEFTSR?
         BNE   MXI8540                    NO, BRANCH
         CLI   #SUBHOLD+28+11,1           RC:1                DRK JAN07
         BL    MXI8540                    YES, VALID MXI
         MVI   MTLEN+4,11
         MVC   INSERT#2(11),MSGBL132      CLEAR AREA          DRK JAN06
         SR    R15,R15
         ICM   R15,B'0001',#SUBHOLD+28+11                     DRK JAN07
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM
         MVC   INSERT#2(4),=X'40202120'
         ED    INSERT#2(4),DOUBLE+6
         MVI   INSERT#2,C'='              RETURN CODE
         SPACE 1
         CLI   SUBSECB+3,X'0C'            IKJEFTSR RC=12 (PGM ABEND)?
         BNE   MXI8530                    NO, SKIP MESSAGE
         SPACE 1
         L     R0,#SUBHOLD+28+16        ABEND CODE            DRK NOV07
         SRDL  R0,12                    SHIFT USER ABEND TO R1DRK NOV07
         ST    R0,FULLWORD              SYSTEM ABEND CODE     DRK NOV07
         MVC   INSERT#2+4(7),=C' ABEND='                      DRK NOV07
         UNPK  INSERT#2+11(5),FULLWORD+2(3)                   DRK NOV07
         TR    INSERT#2+11(4),TRTABLE                         DRK NOV07
         MVI   INSERT#2+11,C'S'         S000                  DRK NOV07
         MVI   INSERT#2+11+4,X'40'                            DRK NOV07
         SPACE 1                                              DRK NOV07
         SRL   R1,20                    USER ABEND            DRK NOV07
         CVD   R1,DOUBLE                                      DRK NOV07
         UNPK  DOUBLE(5),DOUBLE+5(3)                          DRK NOV07
         OI    DOUBLE+4,X'F0'           MAKE PRINTABLE        DRK NOV07
         MVI   INSERT#2+11+5,C'U'       U0000                 DRK NOV07
         MVC   INSERT#2+11+6(4),DOUBLE+1 GET USER ABEND       DRK NOV07
         SPACE 1
MXI8530  DS    0H
         M$MSG L171$2
MXI8540  DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (BAMDCB),MF=(E,OPENLIST)   CLOSE THE SYSPRINT FILE.
         LA    R1,BAMDCB
         FREEPOOL (1)
         SPACE 2
MXI8550  M$ERRST MSGBLANK
         LA    R1,#CMXDDPR                SYSPRINT DDNAME
         BAS   R2,MXI8580                 FREE THIS DATA SET
         LA    R1,#CMXDDIN                SYSIN DDNAME
         BAS   R2,MXI8580                 FREE THIS DATA SET
         B     NEWSTAX
         SPACE 1
MXI8580  CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),MXIFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,MXIUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
         B     RESTART0
         SPACE 2
MXINULL  BR    R14
         SPACE 2
*  MXI CONSTANTS
         PRINT NOGEN
MXIDCB   DCB   DSORG=PS,DDNAME=MXI,MACRF=(GL,PM),EODAD=MXI8500
MXIDL    EQU   *-MXIDCB
         PRINT NOGEN
MXI484W  DC    C'PDS484W MXI SHOULD NOT BE INTERRUPTED'
MXI484WL EQU   *-MXI484W
MXI865E  M$TX  'PDS865E THE MXI OUTPUT CAN NOT BE OPENED'
         PRINT GEN
MXIEFTSR DC    CL8'IKJEFTSR'
MXIPGM   DC    CL8'&MXIPGM'                      PGM=MXI OR MXIG2
MXIPARM  DC    H'05',C'BATCH'                    PARM=BATCH
MXIDDNIN DC    X'000100010005',C'SYSIN'          SYSIN    DDNAME
MXIDDNPR DC    X'000100010008',C'SYSPRINT'       SYSPRINT DDNAME
MXIDDNAM DC    X'0055000100084040404040404040'   RETURN DDNAME
MXIFDDNA DC    X'000100010008'                   FOR FREE DDNAME
MXINEW   DC    X'00040001000104'                 DISP=(NEW)
MXIDEL   DC    X'00050001000104'                 DISP=(,DELETE)
MXICDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
MXIPERM  DC    X'00520000'                       PERMANENT ALLOCATION
MXIUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
MXIPRTFI DC    X'000A00010003',AL3(050)          SPACE=(,NNN)
MXIPRTSE DC    X'000B00010003',AL3(050)          SPACE=(,(,NNN))
MXIPRTIN DC    X'000900010003',AL3(13300)        SPACE=(13300)
MXISINSP DC    X'000900010003',AL3(3120)         SPACE=(3120)
         SPACE 1
MXIPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
MXIPRTLR DC    X'004200010002',AL2(133)          DCB=LRECL=133
MXIPRTBL DC    X'003000010002',AL2(13300)        DCB=BLKSIZE=13300
         SPACE 2
MXISINRE DC    X'004900010001',XL1'90'           DCB=RECFM=FB
MXISINLR DC    X'004200010002',AL2(80)           DCB=LRECL=80
MXISINBL DC    X'003000010002',AL2(3120)         DCB=BLKSIZE=3120
         SPACE 2
MXISYSIN DC    A(MXIPRTFI,MXIPRTSE,MXISINSP)
         DC    A(MXISINRE,MXISINLR,MXISINBL)
         DC    A(MXINEW,MXIDEL,MXICDEL),X'80',AL3(MXIPERM)
MXISYSPR DC    A(MXIPRTFI,MXIPRTSE,MXIPRTIN)
         DC    A(MXIPRTRE,MXIPRTLR,MXIPRTBL)
         DC    A(MXINEW,MXIDEL,MXICDEL),X'80',AL3(MXIPERM)
         SPACE 2
